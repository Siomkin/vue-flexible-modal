{"version":3,"sources":["webpack:///main.js","webpack:///webpack/bootstrap 25d3a092ffaaefaf91fd","webpack:///./example/main.js","webpack:///./~/css-loader/lib/css-base.js","webpack:///./~/style-loader/addStyles.js","webpack:///app.vue","webpack:///Modal.vue","webpack:///./example/app.vue?a136","webpack:///./src/Modal.vue?8d08","webpack:///./~/process/browser.js","webpack:///./example/app.vue?f773","webpack:///./src/Modal.vue?cb1c","webpack:///./example/app.vue?01b7","webpack:///./src/Modal.vue?a86a","webpack:///./example/app.vue","webpack:///./src/Modal.vue","webpack:///./~/vue/dist/vue.common.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","_vue","_vue2","_app","_app2","list","toString","result","i","this","length","item","push","join","mediaQuery","alreadyImportedModules","addStylesToDom","styles","options","domStyle","stylesInDom","refs","j","parts","addStyle","listToStyles","newStyles","css","media","sourceMap","part","createStyleElement","styleElement","document","createElement","head","getHeadElement","type","appendChild","createLinkElement","linkElement","rel","update","remove","singleton","styleIndex","singletonCounter","singletonElement","applyToSingletonTag","bind","URL","createObjectURL","revokeObjectURL","Blob","btoa","updateLink","parentNode","removeChild","href","applyToTag","newObj","index","styleSheet","cssText","replaceText","cssNode","createTextNode","childNodes","insertBefore","setAttribute","firstChild","unescape","encodeURIComponent","JSON","stringify","blob","oldSrc","memoize","fn","memo","apply","arguments","isOldIE","test","window","navigator","userAgent","toLowerCase","getElementsByTagName","newList","mayRemove","textStore","replacement","filter","Boolean","Object","defineProperty","value","_Modal","_Modal2","el","components","Modal","events","MODAL_OK_EVENT","MODAL_CANCEL_EVENT","data","modal","title","visible","text","bgStyle","z-index","methods","onShowModal","props","String","okText","cancelText","transition","verify","bgClick","onlyBody","contentStyle","bodyStyle","watch","computeStyle","ready","show","hide","ok","$dispatch","cancel","top","Math","max","innerHeight","$els","content","offsetHeight","left","innerWidth","offsetWidth","eventName","addEventListener","attachEvent","version","sources","names","mappings","file","sourcesContent","sourceRoot","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","setTimeout","e","runClearTimeout","marker","cachedClearTimeout","clearTimeout","cleanUpNextTick","draining","currentQueue","queue","concat","queueIndex","drainQueue","timeout","len","run","Item","array","noop","process","nextTick","args","Array","prototype","browser","env","argv","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","binding","name","cwd","chdir","dir","umask","locals","__vue_script__","__vue_template__","template","global","set","key","val","hasOwn","_isVue","_data","ob","__ob__","convert","dep","notify","vms","vm","_proxy","_digest","del","_unproxy","hasOwnProperty","isLiteral","exp","literalValueRE","isReserved","str","charCodeAt","_toString","toNumber","parsed","Number","isNaN","toBoolean","stripQuotes","a","b","slice","camelize","replace","camelizeRE","toUpper","_","toUpperCase","hyphenate","hyphenateRE","classify","classifyRE","ctx","l","toArray","start","ret","extend","to","from","keys","isObject","isPlainObject","OBJECT_STRING","def","enumerable","writable","configurable","_debounce","func","wait","context","timestamp","later","last","Date","now","indexOf","arr","cancellable","cb","cancelled","looseEqual","Cache","limit","size","tail","undefined","_keymap","create","pushFilter","lastFilterIndex","trim","tokens","match","filterTokenRE","map","processFilterArg","filters","arg","reservedArgRE","dynamic","stripped","parseDirective","s","hit","cache$1","get","inSingle","inDouble","curly","square","paren","prev","expression","put","escapeRegex","regexEscapeRE","compileRegex","open","config","delimiters","close","unsafeOpen","unsafeDelimiters","unsafeClose","tagRE","RegExp","htmlRE","cache","parseText","html","first","oneTime","lastIndex","exec","tag","tokensToExp","token","formatToken","single","$eval","inlineFilters","filterRE","appendWithTransition","target","applyTransition","beforeWithTransition","before","removeWithTransition","direction","op","__v_trans","hooks","transitionEndEvent","_isCompiled","$parent","action","query","selector","querySelector","NODE_ENV","warn","inDoc","node","doc","ownerDocument","documentElement","parent","nodeType","contains","getAttr","_attr","getAttribute","removeAttribute","getBindAttr","hasBindAttr","hasAttribute","after","nextSibling","prepend","replaceChild","event","useCapture","removeEventListener","getClass","classname","className","baseVal","setClass","cls","isIE9","namespaceURI","addClass","classList","add","cur","removeClass","tar","extractContent","asFragment","child","rawContent","isTemplate","isFragment","hasChildNodes","trimNode","createDocumentFragment","isTrimmable","lastChild","tagName","createAnchor","persist","anchor","debug","createComment","__v_anchor","findRef","hasAttributes","attrs","attributes","refRE","mapNodeRange","end","next","removeNodeRange","frag","onRemoved","removed","done","nodes","getOuterHTML","outerHTML","container","cloneNode","innerHTML","checkComponentAttr","hasAttrs","commonTagRE","reservedTagRE","getIsBinding","resolveAsset","is","expectedTag","_componentNameMap","isUnknownElement","mergeData","toVal","fromVal","mergeAssets","parentVal","childVal","res","guardArrayAssets","guardComponents","ids","Vue","guardProps","isArray","assets","asset","mergeOptions","mergeField","strat","strats","defaultStrat","propsData","mixins","mixin","mixinOptions","warnMissing","camelizedId","charAt","Dep","uid$1","subs","withoutConversion","shouldConvert","Observer","augment","hasProto","protoAugment","copyAugment","arrayMethods","arrayKeys","observeArray","walk","src","__proto__","observe","isExtensible","addVm","defineReactive","property","getOwnPropertyDescriptor","getter","setter","childOb","depend","newVal","initMixin","_init","$el","$root","$children","$refs","_watchers","_directives","_uid","uid","_events","_eventsCount","_isFragment","_fragment","_fragmentStart","_fragmentEnd","_isDestroyed","_isReady","_isAttached","_isBeingDestroyed","_vForRemoving","_unlinkFn","_context","_scope","_frag","children","$options","constructor","_updateRef","_callHook","_initState","_initEvents","$mount","getPathCharType","ch","code","formatSubPath","path","trimmed","parse","maybeUnescapeQuote","nextChar","mode","IN_SINGLE_QUOTE","IN_DOUBLE_QUOTE","newChar","actions","APPEND","typeMap","BEFORE_PATH","subPathDepth","PUSH","INC_SUB_PATH_DEPTH","PUSH_SUB_PATH","IN_SUB_PATH","pathStateMachine","ERROR","AFTER_PATH","raw","parsePath","pathCache","getPath","parseExpression","setPath","original","warnNonExistent","$set","save","isString","saved","newlineRE","rewrite","allowedKeywordsRE","restoreRE","restore","compileGetter","improperKeywordsRE","body","saveRE","wsRE","identRE","makeGetterFn","Function","compileSetter","scope","needSet","expressionCache","isSimplePath","pathTestRE","literalValueRE$1","resetBatcherState","userQueue","has","circular","waiting","flushBatcherQueue","_again","runBatcherQueue","devtools","watcher","_maxUpdateCount","pushWatcher","q","user","Watcher","expOrFn","isFn","uid$2","active","dirty","lazy","deps","newDeps","depIds","_Set","newDepIds","prevError","twoWay","queued","shallow","traverse","seen","seenObjects","clear","isA","isO","depId","isRealTemplate","stringToFragment","templateString","cacheKey","templateCache","tagMatch","tagRE$1","entityMatch","entityRE","commentMatch","commentRE","wrap","efault","depth","prefix","suffix","nodeToFragment","textContent","clonedNode","querySelectorAll","cloned","hasBrokenTemplate","tempClone","hasTextareaCloneBug","parseTemplate","shouldClone","idSelectorCache","getElementById","Fragment","linker","host","parentFrag","childFrags","inserted","unlink","singleBefore","singleRemove","multiBefore","multiRemove","__v_frag","withTransition","method","callHook","attach","shouldCallRemove","self","beforeRemove","detach","destroy","FragmentFactory","cid","cacheId","linkerCache","compile","findPrevFrag","previousSibling","forId","findVmFromFrag","__vue__","range","n","floor","getTrackByKey","trackByKey","getValue","multi","init","selected","_value","indexOf$1","keyFilter","handler","codes","charCode","parseInt","keyCodes","keyCode","stopFilter","stopPropagation","preventFilter","preventDefault","selfFilter","currentTarget","normalize","prop","propCache","camel","upper","testEl","prefixed","prefixes","style","kebab","camelPrefixes","normalize$1","_key","k","split","callActivateHooks","called","total","compileProps","propOptions","attr","empty","identRE$1","propBindingModes","ONE_WAY","TWO_WAY","ONE_TIME","optimizedLiteral","settablePathRE","parentPath","lowerCaseName","required","makePropsLinkFn","_props","inlineProps","initProp","$get","_bindDir","propDef","processPropValue","rawValue","isSimple","getPropDefaultValue","coerceProp","coerced","assertProp","updateProp","valid","expectedTypes","assertedType","assertType","expectedType","formatType","formatValue","validator","coerce","pushJob","job","queue$1","flush","f","Transition","enterClass","leaveClass","pendingCssEvent","pendingCssCb","pendingJsCb","justEntered","entered","typeCache","TYPE_TRANSITION","TYPE_ANIMATION","forEach","isHidden","rect","getBoundingClientRect","width","height","getClientRects","partial","nodeLinkFn","_asComponent","compileNode","childLinkFn","terminal","isScript","compileNodeList","dirs","linkAndCapture","makeUnlinkFn","originalDirCount","sort","directiveComparator","_bind","descriptor","priority","DEFAULT_PRIORITY","contextDirs","destroying","teardownDirs","_teardown","$remove","compileAndLinkProps","propsLinkFn","propDirs","compileRoot","contextOptions","contextLinkFn","replacerLinkFn","containerAttrs","_containerAttrs","replacerAttrs","_replacerAttrs","compileDirectives","onRE","plural","selfDirs","compileTextNode","compileElement","linkFn","checkTerminalDirectives","checkElementDirectives","checkComponent","_skip","removeText","wholeText","processTextToken","makeTextNodeLinkFn","setTokenType","directives","fragClone","nodeList","linkFns","makeChildLinkFn","childrenLinkFn","makeTerminalNodeLinkFn","component","ref","internalDirectives","modifiers","literal","componentLinkFn","skip","previousElementSibling","matched","dirName","rawName","termDef","modifierRE","dirAttrRE","DEFAULT_TERMINAL_PRIORITY","parseModifiers","pushDir","interpTokens","hasOneTimeToken","hasOneTime","interp","dirDef","some","transitionRE","bindRE","makeNodeLinkFn","transclude","extractAttrs","_content","transcludeTemplate","replacer","mergeAttrs","specialCharRE","resolveSlots","contents","_slotContents","extractFragment","stateMixin","makeComputedGetter","owner","evaluate","newData","_setData","_initProps","_initMeta","_initMethods","_initData","_initComputed","_propsUnlinkFn","dataFn","oldData","removeVm","computed","userDef","metas","_meta","eventsMixin","registerComponentEvents","eventRE","_fromParent","$on","registerCallbacks","hash","handlers","register","onAttached","callAttach","onDetached","callDetach","_initDOMHooks","hook","$emit","noop$1","Directive","_locked","_bound","_listeners","_host","_vue_directives","lifecycleMixin","_ref","_compile","_initElement","rootLinker","contentLinkFn","ctor","_linkerCachable","rootUnlinkFn","contentUnlinkFn","_destroy","deferCleanup","_cleanup","destroyReady","pendingRemoval","cleanupIfPossible","$destroy","teardown","$off","miscMixin","_applyFilters","oldValue","write","offset","read","_resolveComponent","factory","resolved","requested","pendingCallbacks","cbs","reason","dataAPI","clean","asStatement","$arguments","$delete","$watch","deep","sync","immediate","filterRE$1","$interpolate","$log","console","log","domAPI","insert","op1","op2","targetIsDetached","shouldCallHook","append","beforeWithCb","removeWithCb","$nextTick","$appendTo","$prependTo","$before","$after","inDocument","realCb","eventsAPI","modifyListenerCount","count","hookRE","$once","splice","isSource","shouldPropagate","hasParentCbs","$broadcast","source","lifecycleAPI","$compile","limitBy","filterBy","search","delimiter","convertArray","$value","$key","orderBy","baseCompare","sortKeyIndex","sortKey","sortKeys","order","comparator","firstArg","installGlobalAPI","createClass","elementDirectives","transitions","partials","util","compiler","parsers","directive","extendOptions","Super","isFirstExtend","_Ctor","Sub","_assetTypes","use","plugin","installed","unshift","install","definition","inBrowser","__VUE_DEVTOOLS_GLOBAL_HOOK__","UA","isIE","isAndroid","isIos","iosVersionMatch","iosVersion","hasMutationObserverBug","indexedDB","transitionProp","animationProp","animationEndEvent","isWebkitTrans","ontransitionend","onwebkittransitionend","isWebkitAnim","onanimationend","onwebkitanimationend","nextTickHandler","pending","copies","callbacks","timerFunc","MutationObserver","setImmediate","counter","observer","textNode","characterData","Set","entry","shift","newer","older","returnEntry","freeze","defineProperties","silent","async","warnExpressionErrors","_delimitersChanged","_propBindingModes","formatComponentName","hasConsole","msg","error","HTMLUnknownElement","HTMLElement","optionMergeStrategies","instanceData","defaultData","created","attached","detached","beforeCompile","compiled","beforeDestroy","destroyed","activate","addSub","sub","removeSub","addDep","arrayProto","getOwnPropertyNames","items","debounce","IN_PATH","BEFORE_IDENT","IN_IDENT","ws","ident","[","eof",".","0","number","'","\"","]","else","allowedKeywords","improperKeywords","beforeGet","preProcess","postProcess","afterGet","forContext","$forContext","alias","_withLock","$index","tmp","current","text$1","legend","tr","col","td","th","option","optgroup","thead","tbody","colgroup","caption","tfoot","g","defs","symbol","image","circle","ellipse","line","polygon","polyline","t","placeholder","swap","_watcher","ON","MODEL","BIND","TRANSITION","EL","COMPONENT","PARTIAL","IF","FOR","SLOT","uid$3","vFor","params","inMatch","itMatch","iterator","isOption","diff","updateRef","updateModel","primitive","convertedFromObject","fromObject","trackBy","oldFrags","frags","getCachedFrag","reused","fresh","removalIndex","totalRemoved","deleteCachedFrag","w","targetPrev","prevEl","currentPrev","insertionIndex","staggerCb","staggerAnchor","move","parentScope","cacheFrag","model","__v_model","forceUpdate","staggerAmount","getStagger","warnDuplicate","trans","stagger","_preProcess","_postProcess","unbind","vIf","invalid","nextElementSibling","elseEl","elseFrag","elseFactory","toggle","display","text$2","isRange","composing","listener","focused","rawListener","hasjQuery","jQuery","afterBind","radio","checked","select","_this","multiple","initValue","selectedIndex","checkbox","getBooleanValue","_trueValue","_falseValue","checkFilters","hasRead","hasWrite","_unbind","esc","tab","enter","space","delete","up","right","down","on$1","acceptStatement","iframeBind","contentWindow","capture","stop","prevent","reset","importantRE","handleObject","reduce","handleSingle","isImportant","setProperty","xlinkNS","xlinkRE","disallowedInterpAttrRE","attrWithPropsRE","enumeratedAttrRE","modelProps","true-value","false-value","bind$1","attrValue","modelProp","setAttributeNS","cloak","for","if","vClass","cleanup","prevKeys","keepAlive","inlineTemplate","pendingComponentCb","Component","pendingRemovals","pendingRemovalCb","setComponent","invalidatePending","resolveComponent","mountComponent","unbuild","childVM","ComponentName","activateHooks","cached","getCached","newComponent","build","waitingFor","extraOptions","_isRouterView","defer","_inactive","transitionMode","bindingModes","childKey","parentKey","parentWatcher","childWatcher","transDurationProp","animDurationProp","raf","requestAnimationFrame","waitForTransitionStart","p$1","cancelPending","callHookWithCb","enterCancelled","enterNextTick","enterDone","getCssTransitionType","setupCssCb","leave","leaveCancelled","leaveDone","leaveNextTick","hasPending","hidden","inlineStyles","computedStyles","getComputedStyle","transDuration","animDuration","onEnd","transition$1","oldId","class","_setupParams","_checkStatement","_update","oldVal","mappedKey","_setupParamWatcher","unwatch","paramWatchers","_paramUnwatchFns","$event","listeners","unwatchFns","slot","fallback","elseBlock","digitsRE","json","indent","capitalize","uppercase","lowercase","currency","_currency","decimals","parseFloat","isFinite","stringified","abs","toFixed","_int","_float","sign","pluralize","delay"],"mappings":"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","file":"main.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/dist/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar _vue = __webpack_require__(14);\n\t\n\tvar _vue2 = _interopRequireDefault(_vue);\n\t\n\tvar _app = __webpack_require__(12);\n\t\n\tvar _app2 = _interopRequireDefault(_app);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tnew _vue2.default(_app2.default);\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\t// css base code, injected by the css-loader\r\n\tmodule.exports = function() {\r\n\t\tvar list = [];\r\n\t\r\n\t\t// return the list of modules as css string\r\n\t\tlist.toString = function toString() {\r\n\t\t\tvar result = [];\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar item = this[i];\r\n\t\t\t\tif(item[2]) {\r\n\t\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t\t} else {\r\n\t\t\t\t\tresult.push(item[1]);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\treturn result.join(\"\");\r\n\t\t};\r\n\t\r\n\t\t// import a list of modules into the list\r\n\t\tlist.i = function(modules, mediaQuery) {\r\n\t\t\tif(typeof modules === \"string\")\r\n\t\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\t\tvar alreadyImportedModules = {};\r\n\t\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\t\tvar id = this[i][0];\r\n\t\t\t\tif(typeof id === \"number\")\r\n\t\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t\t}\r\n\t\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\t\tvar item = modules[i];\r\n\t\t\t\t// skip already imported module\r\n\t\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t\t}\r\n\t\t\t\t\tlist.push(item);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t\treturn list;\r\n\t};\r\n\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*\r\n\t\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\t\tAuthor Tobias Koppers @sokra\r\n\t*/\r\n\tvar stylesInDom = {},\r\n\t\tmemoize = function(fn) {\r\n\t\t\tvar memo;\r\n\t\t\treturn function () {\r\n\t\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\t\treturn memo;\r\n\t\t\t};\r\n\t\t},\r\n\t\tisOldIE = memoize(function() {\r\n\t\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t\t}),\r\n\t\tgetHeadElement = memoize(function () {\r\n\t\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t\t}),\r\n\t\tsingletonElement = null,\r\n\t\tsingletonCounter = 0;\r\n\t\r\n\tmodule.exports = function(list, options) {\r\n\t\tif(false) {\r\n\t\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t\t}\r\n\t\r\n\t\toptions = options || {};\r\n\t\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t\t// tags it will allow on a page\r\n\t\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\t\r\n\t\tvar styles = listToStyles(list);\r\n\t\taddStylesToDom(styles, options);\r\n\t\r\n\t\treturn function update(newList) {\r\n\t\t\tvar mayRemove = [];\r\n\t\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\t\tvar item = styles[i];\r\n\t\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\t\tdomStyle.refs--;\r\n\t\t\t\tmayRemove.push(domStyle);\r\n\t\t\t}\r\n\t\t\tif(newList) {\r\n\t\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\t\taddStylesToDom(newStyles, options);\r\n\t\t\t}\r\n\t\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tfunction addStylesToDom(styles, options) {\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tif(domStyle) {\r\n\t\t\t\tdomStyle.refs++;\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t\t}\r\n\t\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tvar parts = [];\r\n\t\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t\t}\r\n\t\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction listToStyles(list) {\r\n\t\tvar styles = [];\r\n\t\tvar newStyles = {};\r\n\t\tfor(var i = 0; i < list.length; i++) {\r\n\t\t\tvar item = list[i];\r\n\t\t\tvar id = item[0];\r\n\t\t\tvar css = item[1];\r\n\t\t\tvar media = item[2];\r\n\t\t\tvar sourceMap = item[3];\r\n\t\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\t\tif(!newStyles[id])\r\n\t\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\t\telse\r\n\t\t\t\tnewStyles[id].parts.push(part);\r\n\t\t}\r\n\t\treturn styles;\r\n\t}\r\n\t\r\n\tfunction createStyleElement() {\r\n\t\tvar styleElement = document.createElement(\"style\");\r\n\t\tvar head = getHeadElement();\r\n\t\tstyleElement.type = \"text/css\";\r\n\t\thead.appendChild(styleElement);\r\n\t\treturn styleElement;\r\n\t}\r\n\t\r\n\tfunction createLinkElement() {\r\n\t\tvar linkElement = document.createElement(\"link\");\r\n\t\tvar head = getHeadElement();\r\n\t\tlinkElement.rel = \"stylesheet\";\r\n\t\thead.appendChild(linkElement);\r\n\t\treturn linkElement;\r\n\t}\r\n\t\r\n\tfunction addStyle(obj, options) {\r\n\t\tvar styleElement, update, remove;\r\n\t\r\n\t\tif (options.singleton) {\r\n\t\t\tvar styleIndex = singletonCounter++;\r\n\t\t\tstyleElement = singletonElement || (singletonElement = createStyleElement());\r\n\t\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t\t} else if(obj.sourceMap &&\r\n\t\t\ttypeof URL === \"function\" &&\r\n\t\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\t\ttypeof Blob === \"function\" &&\r\n\t\t\ttypeof btoa === \"function\") {\r\n\t\t\tstyleElement = createLinkElement();\r\n\t\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t\t\tif(styleElement.href)\r\n\t\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t\t};\r\n\t\t} else {\r\n\t\t\tstyleElement = createStyleElement();\r\n\t\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\t\tremove = function() {\r\n\t\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t\t};\r\n\t\t}\r\n\t\r\n\t\tupdate(obj);\r\n\t\r\n\t\treturn function updateStyle(newObj) {\r\n\t\t\tif(newObj) {\r\n\t\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\t\treturn;\r\n\t\t\t\tupdate(obj = newObj);\r\n\t\t\t} else {\r\n\t\t\t\tremove();\r\n\t\t\t}\r\n\t\t};\r\n\t}\r\n\t\r\n\tvar replaceText = (function () {\r\n\t\tvar textStore = [];\r\n\t\r\n\t\treturn function (index, replacement) {\r\n\t\t\ttextStore[index] = replacement;\r\n\t\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t\t};\r\n\t})();\r\n\t\r\n\tfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\t\tvar css = remove ? \"\" : obj.css;\r\n\t\r\n\t\tif (styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t\t} else {\r\n\t\t\tvar cssNode = document.createTextNode(css);\r\n\t\t\tvar childNodes = styleElement.childNodes;\r\n\t\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\t\tif (childNodes.length) {\r\n\t\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t\t} else {\r\n\t\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction applyToTag(styleElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(media) {\r\n\t\t\tstyleElement.setAttribute(\"media\", media)\r\n\t\t}\r\n\t\r\n\t\tif(styleElement.styleSheet) {\r\n\t\t\tstyleElement.styleSheet.cssText = css;\r\n\t\t} else {\r\n\t\t\twhile(styleElement.firstChild) {\r\n\t\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t\t}\r\n\t\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t\t}\r\n\t}\r\n\t\r\n\tfunction updateLink(linkElement, obj) {\r\n\t\tvar css = obj.css;\r\n\t\tvar media = obj.media;\r\n\t\tvar sourceMap = obj.sourceMap;\r\n\t\r\n\t\tif(sourceMap) {\r\n\t\t\t// http://stackoverflow.com/a/26603875\r\n\t\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t\t}\r\n\t\r\n\t\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\t\r\n\t\tvar oldSrc = linkElement.href;\r\n\t\r\n\t\tlinkElement.href = URL.createObjectURL(blob);\r\n\t\r\n\t\tif(oldSrc)\r\n\t\t\tURL.revokeObjectURL(oldSrc);\r\n\t}\r\n\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t\n\tvar _Modal = __webpack_require__(13);\n\t\n\tvar _Modal2 = _interopRequireDefault(_Modal);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t    el: '#page',\n\t    components: {\n\t        Modal: _Modal2.default\n\t    },\n\t    events: {\n\t        MODAL_OK_EVENT: function MODAL_OK_EVENT() {\n\t            // you can manual set modal show or hide use this.modal.visible\n\t            // this.modal.visible = false;\n\t        },\n\t        MODAL_CANCEL_EVENT: function MODAL_CANCEL_EVENT() {}\n\t    },\n\t    data: {\n\t        modal: {\n\t            title: 'I am modal title',\n\t            visible: false,\n\t            text: ''\n\t        },\n\t        bgStyle: {\n\t            'z-index': '4000'\n\t        }\n\t    },\n\t    methods: {\n\t        onShowModal: function onShowModal() {\n\t            this.modal.visible = !this.modal.visible;\n\t        }\n\t    }\n\t};\n\t\n\t// </script>\n\t//\n\t// <template>\n\t//     <div>\n\t//         <button @click=\"onShowModal\">Click Show Modal</button>\n\t//         <modal :title=\"modal.title\" :visible.sync=\"modal.visible\" :bg-click=\"false\" :verify=\"true\" :bg-style=\"bgStyle\">\n\t//             <label class=\"label\">Slot Area,write your code in here</label>\n\t//             <p class=\"control\">\n\t//                 <label class=\"label\">Name:</label>\n\t//                 <input class=\"input\" type=\"text\" v-model=\"modal.text\" placeholder=\"Your name\">\n\t//             </p>\n\t//         </modal>\n\t//     </div>\n\t// </template>\n\t//\n\t// <style lang=\"less\" scoped>\n\t//     .control {\n\t//         position: relative;\n\t//         text-align: left;\n\t//     }\n\t//     button{\n\t//         -moz-appearance: none;\n\t//         -webkit-appearance: none;\n\t//         -webkit-box-align: center;\n\t//         -ms-flex-align: center;\n\t//         align-items: center;\n\t//         background-color: #fff;\n\t//         border: 1px solid #d3d6db;\n\t//         border-radius: 3px;\n\t//         color: #222324;\n\t//         display: -webkit-inline-box;\n\t//         display: -ms-inline-flexbox;\n\t//         display: inline-flex;\n\t//         font-size: 14px;\n\t//         height: 32px;\n\t//         -webkit-box-pack: start;\n\t//         -ms-flex-pack: start;\n\t//         justify-content: flex-start;\n\t//         line-height: 24px;\n\t//         padding-left: 8px;\n\t//         padding-right: 8px;\n\t//         position: relative;\n\t//         vertical-align: top;\n\t//         -webkit-box-pack: center;\n\t//         -ms-flex-pack: center;\n\t//         justify-content: center;\n\t//         padding-left: 10px;\n\t//         padding-right: 10px;\n\t//         text-align: center;\n\t//         white-space: nowrap;\n\t//     }\n\t//     .label {\n\t//         color: #222324;\n\t//         display: block;\n\t//         font-weight: 700;\n\t//     }\n\t//     input{\n\t//         -moz-appearance: none;\n\t//         -webkit-appearance: none;\n\t//         -webkit-box-align: center;\n\t//         -ms-flex-align: center;\n\t//         align-items: center;\n\t//         background-color: #fff;\n\t//         border: 1px solid #d3d6db;\n\t//         border-radius: 3px;\n\t//         color: #222324;\n\t//         display: -webkit-inline-box;\n\t//         display: -ms-inline-flexbox;\n\t//         display: inline-flex;\n\t//         font-size: 14px;\n\t//         height: 32px;\n\t//         -webkit-box-pack: start;\n\t//         -ms-flex-pack: start;\n\t//         justify-content: flex-start;\n\t//         line-height: 24px;\n\t//         padding-left: 8px;\n\t//         padding-right: 8px;\n\t//         position: relative;\n\t//         vertical-align: top;\n\t//         box-shadow: inset 0 1px 2px hsla(0,0%,7%,.1);\n\t//     }\n\t// </style>\n\t/* generated by vue-loader */\n\t// <script>\n\n/***/ },\n/* 4 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t    value: true\n\t});\n\t// <template>\n\t//     <div v-show=\"visible\" class=\"modal-background\" @click=\"bgClick\" :style=\"bgStyle\"></div>\n\t//     <div v-el:content class=\"modal-content\" v-show=\"visible\" :transition=\"transition\" :style=\"[contentStyle,bodyStyle]\">\n\t//         <header v-if=\"!onlyBody\" class=\"modal-content-head\">\n\t//             <p class=\"modal-content-title\">{{ title }}</p>\n\t//             <button class=\"delete\" @click=\"hide\"></button>\n\t//         </header>\n\t//         <section class=\"modal-content-body\">\n\t//             <slot></slot>\n\t//         </section>\n\t//         <footer v-if=\"!onlyBody\" class=\"modal-content-foot clearfix\">\n\t//             <div class=\"fright\">\n\t//                 <a class=\"button\" @click=\"cancel\">{{ cancelText }}</a>\n\t//                 <a class=\"button is-primary\" @click=\"ok\">{{ okText }}</a>\n\t//             </div>\n\t//         </footer>\n\t//     </div>\n\t// </template>\n\t//\n\t// <script>\n\texports.default = {\n\t    props: {\n\t        title: {\n\t            type: String,\n\t            default: 'Modal'\n\t        },\n\t        okText: {\n\t            type: String,\n\t            default: 'Ok'\n\t        },\n\t        cancelText: {\n\t            type: String,\n\t            default: 'Cancel'\n\t        },\n\t        visible: {\n\t            type: Boolean,\n\t            default: false\n\t        },\n\t        transition: {\n\t            type: String,\n\t            default: 'bounce'\n\t        },\n\t        verify: {\n\t            type: Boolean,\n\t            default: false\n\t        },\n\t        bgClick: {\n\t            type: Boolean,\n\t            default: true\n\t        },\n\t        onlyBody: {\n\t            type: Boolean,\n\t            default: false\n\t        },\n\t        bgStyle: {\n\t            type: Object,\n\t            default: function _default() {\n\t                return {};\n\t            }\n\t        },\n\t        contentStyle: {\n\t            type: Object,\n\t            default: function _default() {\n\t                return {};\n\t            }\n\t        }\n\t    },\n\t    data: function data() {\n\t        return {\n\t            bodyStyle: {}\n\t        };\n\t    },\n\t\n\t    watch: {\n\t        visible: function visible() {\n\t            if (this.visible) {\n\t                this.computeStyle();\n\t            }\n\t        }\n\t    },\n\t    ready: function ready() {\n\t        this.bind(window, \"resize\", function () {\n\t            this.computeStyle();\n\t        }.bind(this));\n\t    },\n\t\n\t    methods: {\n\t        show: function show() {\n\t            this.visible = true;\n\t        },\n\t        hide: function hide() {\n\t            this.visible = false;\n\t        },\n\t        bgClick: function bgClick() {\n\t            if (this.bgClick) {\n\t                this.hide();\n\t            }\n\t        },\n\t        ok: function ok() {\n\t            if (!this.verify) {\n\t                this.hide();\n\t            }\n\t            this.$dispatch('MODAL_OK_EVENT');\n\t        },\n\t        cancel: function cancel() {\n\t            this.hide();\n\t            this.$dispatch('MODAL_CANCEL_EVENT');\n\t        },\n\t        computeStyle: function computeStyle() {\n\t            this.bodyStyle = {\n\t                top: Math.max((window.innerHeight - this.$els.content.offsetHeight) / 2, 0) + 'px',\n\t                left: Math.max((window.innerWidth - this.$els.content.offsetWidth) / 2, 0) + 'px'\n\t            };\n\t        },\n\t        bind: function bind(el, eventName, fn) {\n\t            if (window.addEventListener) {\n\t                el.addEventListener(eventName, fn, false);\n\t            } else if (window.attachEvent) {\n\t                el.attachEvent(\"on\" + eventName, fn);\n\t            }\n\t        }\n\t    }\n\t};\n\t// </script>\n\t//\n\t// <style lang=\"less\" scoped>\n\t//     .modal-background {\n\t//         position: fixed;\n\t//         top: 0;\n\t//         left: 0;\n\t//         width: 100%;\n\t//         height: 100%;\n\t//         background-color: rgba(0, 0, 0, .5);\n\t//         z-index: 5000;\n\t//     }\n\t//     .clearfix:after {\n\t//         content: \".\";\n\t//         display: block;\n\t//         height: 0;\n\t//         clear: both;\n\t//         visibility: hidden;\n\t//     }\n\t//\n\t//     .clearfix {\n\t//         _overflow: hidden;\n\t//     }\n\t//     .fright{\n\t//         float:right;\n\t//     }\n\t//     button,.button{\n\t//         background-color: #fff;\n\t//         border: 1px solid #d3d6db;\n\t//         border-radius: 3px;\n\t//         color: #222324;\n\t//         font-size: 14px;\n\t//         height: 32px;\n\t//         line-height: 24px;\n\t//         padding:8px 10px;\n\t//         position: relative;\n\t//         text-align: center;\n\t//         white-space: nowrap;\n\t//         cursor: pointer;\n\t//     &:hover{\n\t//          color: #222324;\n\t//          border-color: #aeb1b5;\n\t//      }\n\t//     }\n\t//     .modal-content {\n\t//         position: fixed;\n\t//         background-color: #fff;\n\t//         width: 640px;\n\t//         border-radius: 5px;\n\t//         z-index: 5001;\n\t//\n\t//     .modal-content-head {\n\t//         position: relative;\n\t//         padding: 15px;\n\t//         background-color: #f5f7fa;\n\t//         border-bottom: 1px solid #d3d6db;\n\t//         border-top-left-radius:5px;\n\t//         border-top-right-radius:5px;\n\t//     .delete {\n\t//         -webkit-appearance: none;\n\t//         background-color: rgba(18, 18, 18, 0.2);\n\t//         border: none;\n\t//         border-radius: 100%;\n\t//         cursor: pointer;\n\t//         display: inline-block;\n\t//         height: 24px;\n\t//         width: 24px;\n\t//         position: absolute;\n\t//         top: 15px;\n\t//         right: 10px;\n\t//     &:before {\n\t//          background-color: #fff;\n\t//          content: \"\";\n\t//          display: block;\n\t//          height: 2px;\n\t//          left: 50%;\n\t//          margin-left: -25%;\n\t//          margin-top: -1px;\n\t//          position: absolute;\n\t//          top: 50%;\n\t//          width: 50%;\n\t//          -webkit-transform: rotate(45deg);\n\t//          transform: rotate(45deg);\n\t//      }\n\t//     &:after {\n\t//          background-color: #fff;\n\t//          content: \"\";\n\t//          display: block;\n\t//          height: 2px;\n\t//          left: 50%;\n\t//          margin-left: -25%;\n\t//          margin-top: -1px;\n\t//          position: absolute;\n\t//          top: 50%;\n\t//          width: 50%;\n\t//          -webkit-transform: rotate(-45deg);\n\t//          transform: rotate(-45deg);\n\t//      }\n\t//     &:hover {\n\t//          background-color: rgba(17, 17, 17, 0.5);\n\t//      }\n\t//     }\n\t//     .modal-content-title {\n\t//         color: #222324;\n\t//         font-size: 20px;\n\t//         line-height: 1;\n\t//         margin: 0;\n\t//         padding: 0;\n\t//     }\n\t//     }\n\t//\n\t//     .modal-content-body {\n\t//         width: 640px;\n\t//         max-height: 600px;\n\t//         padding: 20px;\n\t//     }\n\t//\n\t//     .modal-content-foot {\n\t//         position: relative;\n\t//         padding: 15px;\n\t//         background-color: #f5f7fa;\n\t//         border-top: 1px solid #d3d6db;\n\t//         border-bottom-left-radius:5px;\n\t//         border-bottom-right-radius:5px;\n\t//     .actions{\n\t//         position: absolute;\n\t//         right:15px;\n\t//         top:15px;\n\t//     }\n\t//     .is-primary{\n\t//         background-color: #1fc8db;\n\t//         border-color: transparent;\n\t//         color: #fff;\n\t//         margin-left:5px;\n\t//     &:hover{\n\t//          background-color: #199fae;\n\t//          border-color: transparent;\n\t//          color: #fff;\n\t//      }\n\t//     }\n\t//     .button{\n\t//         min-width:70px;\n\t//     }\n\t//     }\n\t//\n\t//     }\n\t//     .bounce-transition {\n\t//         -webkit-animation-duration: .5s;\n\t//         animation-duration: .5s;\n\t//         -webkit-animation-fill-mode: both;\n\t//         animation-fill-mode: both;\n\t//     }\n\t//\n\t//     .bounce-enter {\n\t//         animation-name: bounceIn;\n\t//     }\n\t//\n\t//     .bounce-leave {\n\t//         animation-name: bounceOut;\n\t//     }\n\t//\n\t//     @-webkit-keyframes bounceIn {\n\t//         from, 20%, 40%, 60%, 80%, to {\n\t//             animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\n\t//         }\n\t//\n\t//         0% {\n\t//             opacity: 0;\n\t//             transform: scale3d(.3, .3, .3);\n\t//         }\n\t//\n\t//         20% {\n\t//             transform: scale3d(1.1, 1.1, 1.1);\n\t//         }\n\t//\n\t//         40% {\n\t//             transform: scale3d(.9, .9, .9);\n\t//         }\n\t//\n\t//         60% {\n\t//             opacity: 1;\n\t//             transform: scale3d(1.03, 1.03, 1.03);\n\t//         }\n\t//\n\t//         80% {\n\t//             transform: scale3d(.97, .97, .97);\n\t//         }\n\t//\n\t//         to {\n\t//             opacity: 1;\n\t//             transform: scale3d(1, 1, 1);\n\t//         }\n\t//     }\n\t//\n\t//     @keyframes bounceIn {\n\t//         from, 20%, 40%, 60%, 80%, to {\n\t//             animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\n\t//         }\n\t//\n\t//         0% {\n\t//             opacity: 0;\n\t//             transform: scale3d(.3, .3, .3);\n\t//         }\n\t//\n\t//         20% {\n\t//             transform: scale3d(1.1, 1.1, 1.1);\n\t//         }\n\t//\n\t//         40% {\n\t//             transform: scale3d(.9, .9, .9);\n\t//         }\n\t//\n\t//         60% {\n\t//             opacity: 1;\n\t//             transform: scale3d(1.03, 1.03, 1.03);\n\t//         }\n\t//\n\t//         80% {\n\t//             transform: scale3d(.97, .97, .97);\n\t//         }\n\t//\n\t//         to {\n\t//             opacity: 1;\n\t//             transform: scale3d(1, 1, 1);\n\t//         }\n\t//     }\n\t//\n\t//     @-webkit-keyframes bounceOut {\n\t//         20% {\n\t//             transform: scale3d(.9, .9, .9);\n\t//         }\n\t//\n\t//         50%, 55% {\n\t//             opacity: 1;\n\t//             transform: scale3d(1.1, 1.1, 1.1);\n\t//         }\n\t//\n\t//         to {\n\t//             opacity: 0;\n\t//             transform: scale3d(.3, .3, .3);\n\t//         }\n\t//     }\n\t//\n\t//     @keyframes bounceOut {\n\t//         20% {\n\t//             transform: scale3d(.9, .9, .9);\n\t//         }\n\t//\n\t//         50%, 55% {\n\t//             opacity: 1;\n\t//             transform: scale3d(1.1, 1.1, 1.1);\n\t//         }\n\t//\n\t//         to {\n\t//             opacity: 0;\n\t//             transform: scale3d(.3, .3, .3);\n\t//         }\n\t//     }\n\t// </style>\n\t//\n\t/* generated by vue-loader */\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".control[_v-3ea48884]{position:relative;text-align:left}button[_v-3ea48884]{-moz-appearance:none;-webkit-appearance:none;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#fff;border:1px solid #d3d6db;border-radius:3px;color:#222324;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:14px;height:2pc;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;line-height:24px;padding-left:8px;padding-right:8px;position:relative;vertical-align:top;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding-left:10px;padding-right:10px;text-align:center;white-space:nowrap}.label[_v-3ea48884]{color:#222324;display:block;font-weight:700}input[_v-3ea48884]{-moz-appearance:none;-webkit-appearance:none;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#fff;border:1px solid #d3d6db;border-radius:3px;color:#222324;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:14px;height:2pc;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;line-height:24px;padding-left:8px;padding-right:8px;position:relative;vertical-align:top;box-shadow:inset 0 1px 2px hsla(0,0%,7%,.1)}\", \"\", {\"version\":3,\"sources\":[\"/../../../../../../../vue-loader/lib/style-rewriter.js?id=_v-3ea48884&file=app.vue&scoped=true!/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/node_modules/less-loader/index.js!/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/node_modules/vue-loader/lib/selector.js?type=style&index=0!/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/example/app.vue.style\"],\"names\":[],\"mappings\":\"AAAA,sBAAS,kBAAkB,eAAe,CAAC,oBAAO,qBAAqB,wBAAwB,yBAAyB,sBAAsB,mBAAmB,sBAAsB,yBAAyB,kBAAkB,cAAc,2BAA2B,2BAA2B,oBAAoB,eAAe,WAAY,uBAAuB,oBAAoB,2BAA2B,iBAAiB,iBAAiB,kBAAkB,kBAAkB,mBAAmB,wBAAwB,qBAAqB,uBAAuB,kBAAkB,mBAAmB,kBAAkB,kBAAkB,CAAC,oBAAO,cAAc,cAAc,eAAe,CAAC,mBAAM,qBAAqB,wBAAwB,yBAAyB,sBAAsB,mBAAmB,sBAAsB,yBAAyB,kBAAkB,cAAc,2BAA2B,2BAA2B,oBAAoB,eAAe,WAAY,uBAAuB,oBAAoB,2BAA2B,iBAAiB,iBAAiB,kBAAkB,kBAAkB,mBAAmB,2CAA6C,CAAC\",\"file\":\"app.vue\",\"sourcesContent\":[\".control{position:relative;text-align:left}button{-moz-appearance:none;-webkit-appearance:none;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#fff;border:1px solid #d3d6db;border-radius:3px;color:#222324;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:14px;height:32px;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;line-height:24px;padding-left:8px;padding-right:8px;position:relative;vertical-align:top;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding-left:10px;padding-right:10px;text-align:center;white-space:nowrap}.label{color:#222324;display:block;font-weight:700}input{-moz-appearance:none;-webkit-appearance:none;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#fff;border:1px solid #d3d6db;border-radius:3px;color:#222324;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:14px;height:32px;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;line-height:24px;padding-left:8px;padding-right:8px;position:relative;vertical-align:top;box-shadow:inset 0 1px 2px rgba(18,18,18,0.1)}\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(1)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \".modal-background[_v-412529e4]{position:fixed;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.5);z-index:5000}.clearfix[_v-412529e4]:after{content:\\\".\\\";display:block;height:0;clear:both;visibility:hidden}.clearfix[_v-412529e4]{_overflow:hidden}.fright[_v-412529e4]{float:right}.button[_v-412529e4],button[_v-412529e4]{background-color:#fff;border:1px solid #d3d6db;border-radius:3px;color:#222324;font-size:14px;height:2pc;line-height:24px;padding:8px 10px;position:relative;text-align:center;white-space:nowrap;cursor:pointer}.button[_v-412529e4]:hover,button[_v-412529e4]:hover{color:#222324;border-color:#aeb1b5}.modal-content[_v-412529e4]{position:fixed;background-color:#fff;width:40pc;border-radius:5px;z-index:5001}.modal-content .modal-content-head[_v-412529e4]{position:relative;padding:15px;background-color:#f5f7fa;border-bottom:1px solid #d3d6db;border-top-left-radius:5px;border-top-right-radius:5px}.modal-content .modal-content-head .delete[_v-412529e4]{-webkit-appearance:none;background-color:hsla(0,0%,7%,.2);border:none;border-radius:100%;cursor:pointer;display:inline-block;height:24px;width:24px;position:absolute;top:15px;right:10px}.modal-content .modal-content-head .delete[_v-412529e4]:before{-webkit-transform:rotate(45deg);transform:rotate(45deg)}.modal-content .modal-content-head .delete[_v-412529e4]:after,.modal-content .modal-content-head .delete[_v-412529e4]:before{background-color:#fff;content:\\\"\\\";display:block;height:2px;left:50%;margin-left:-25%;margin-top:-1px;position:absolute;top:50%;width:50%}.modal-content .modal-content-head .delete[_v-412529e4]:after{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.modal-content .modal-content-head .delete[_v-412529e4]:hover{background-color:hsla(0,0%,7%,.5)}.modal-content .modal-content-head .modal-content-title[_v-412529e4]{color:#222324;font-size:20px;line-height:1;margin:0;padding:0}.modal-content .modal-content-body[_v-412529e4]{width:40pc;max-height:600px;padding:20px}.modal-content .modal-content-foot[_v-412529e4]{position:relative;padding:15px;background-color:#f5f7fa;border-top:1px solid #d3d6db;border-bottom-left-radius:5px;border-bottom-right-radius:5px}.modal-content .modal-content-foot .actions[_v-412529e4]{position:absolute;right:15px;top:15px}.modal-content .modal-content-foot .is-primary[_v-412529e4]{background-color:#1fc8db;border-color:transparent;color:#fff;margin-left:5px}.modal-content .modal-content-foot .is-primary[_v-412529e4]:hover{background-color:#199fae;border-color:transparent;color:#fff}.modal-content .modal-content-foot .button[_v-412529e4]{min-width:70px}.bounce-transition[_v-412529e4]{-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-fill-mode:both;animation-fill-mode:both}.bounce-enter[_v-412529e4]{-webkit-animation-name:bounceIn;animation-name:bounceIn}.bounce-leave[_v-412529e4]{-webkit-animation-name:bounceOut;animation-name:bounceOut}@-webkit-keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}20%{-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}40%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}60%{opacity:1;-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}80%{-webkit-transform:scale3d(.97,.97,.97);transform:scale3d(.97,.97,.97)}to{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}20%{-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}40%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}60%{opacity:1;-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}80%{-webkit-transform:scale3d(.97,.97,.97);transform:scale3d(.97,.97,.97)}to{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@-webkit-keyframes bounceOut{20%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}50%,55%{opacity:1;-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}to{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}}@keyframes bounceOut{20%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}50%,55%{opacity:1;-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}to{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}}\", \"\", {\"version\":3,\"sources\":[\"/../../../../../../../vue-loader/lib/style-rewriter.js?id=_v-412529e4&file=Modal.vue&scoped=true!/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/node_modules/less-loader/index.js!/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/node_modules/vue-loader/lib/selector.js?type=style&index=0!/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/src/Modal.vue.style\"],\"names\":[],\"mappings\":\"AAAA,+BAAkB,eAAe,MAAM,OAAO,WAAW,YAAY,gCAAiC,YAAY,CAAC,6BAAgB,YAAY,cAAc,SAAS,WAAW,iBAAiB,CAAC,wBAAA,eAA0B,CAAC,qBAAQ,WAAW,CAAC,yCAAe,sBAAsB,yBAAyB,kBAAkB,cAAc,eAAe,WAAY,iBAAiB,iBAAiB,kBAAkB,kBAAkB,mBAAmB,cAAc,CAAC,qDAA2B,cAAc,oBAAoB,CAAC,4BAAe,eAAe,sBAAsB,WAAY,kBAAkB,YAAY,CAAC,gDAAmC,kBAAkB,aAAa,yBAAyB,gCAAgC,2BAA2B,2BAA2B,CAAC,wDAA2C,wBAAwB,kCAAoC,YAAY,mBAAmB,eAAe,qBAAqB,YAAY,WAAW,kBAAkB,SAAS,UAAU,CAAC,+DAA0L,gCAAgC,uBAAuB,CAAC,6HAAhM,sBAAsB,WAAW,cAAc,WAAW,SAAS,iBAAiB,gBAAgB,kBAAkB,QAAQ,SAAU,CAA2S,AAAnP,8DAAyL,iCAAiC,wBAAwB,CAAC,8DAAiD,iCAAmC,CAAC,qEAAwD,cAAc,eAAe,cAAc,SAAS,SAAS,CAAC,gDAAmC,WAAY,iBAAiB,YAAY,CAAC,gDAAmC,kBAAkB,aAAa,yBAAyB,6BAA6B,8BAA8B,8BAA8B,CAAC,yDAA4C,kBAAkB,WAAW,QAAQ,CAAC,4DAA+C,yBAAyB,yBAAyB,WAAW,eAAe,CAAC,kEAAqD,yBAAyB,yBAAyB,UAAU,CAAC,wDAA2C,cAAc,CAAC,gCAAmB,+BAA+B,uBAAuB,iCAAiC,wBAAwB,CAAC,2BAAc,gCAAA,uBAAuB,CAAC,2BAAc,iCAAA,wBAAwB,CAAC,4BAA4B,sBAAwB,gEAAA,uDAA0D,CAAC,GAAG,UAAU,oCAAA,2BAA6B,CAAC,IAAI,uCAAA,8BAAgC,CAAC,IAAI,oCAAA,2BAA6B,CAAC,IAAI,UAAU,0CAAA,iCAAmC,CAAC,IAAI,uCAAA,8BAAgC,CAAC,GAAG,UAAU,iCAAA,wBAA0B,CAAC,CAAC,oBAAoB,sBAAwB,gEAAA,uDAA0D,CAAC,GAAG,UAAU,oCAAA,2BAA6B,CAAC,IAAI,uCAAA,8BAAgC,CAAC,IAAI,oCAAA,2BAA6B,CAAC,IAAI,UAAU,0CAAA,iCAAmC,CAAC,IAAI,uCAAA,8BAAgC,CAAC,GAAG,UAAU,iCAAA,wBAA0B,CAAC,CAAC,6BAA6B,IAAI,oCAAA,2BAA6B,CAAC,QAAQ,UAAU,uCAAA,8BAAgC,CAAC,GAAG,UAAU,oCAAA,2BAA6B,CAAC,CAAC,qBAAqB,IAAI,oCAAA,2BAA6B,CAAC,QAAQ,UAAU,uCAAA,8BAAgC,CAAC,GAAG,UAAU,oCAAA,2BAA6B,CAAC,CAAC\",\"file\":\"Modal.vue\",\"sourcesContent\":[\".modal-background{position:fixed;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,0.5);z-index:5000}.clearfix:after{content:\\\".\\\";display:block;height:0;clear:both;visibility:hidden}.clearfix{_overflow:hidden}.fright{float:right}button,.button{background-color:#fff;border:1px solid #d3d6db;border-radius:3px;color:#222324;font-size:14px;height:32px;line-height:24px;padding:8px 10px;position:relative;text-align:center;white-space:nowrap;cursor:pointer}button:hover,.button:hover{color:#222324;border-color:#aeb1b5}.modal-content{position:fixed;background-color:#fff;width:640px;border-radius:5px;z-index:5001}.modal-content .modal-content-head{position:relative;padding:15px;background-color:#f5f7fa;border-bottom:1px solid #d3d6db;border-top-left-radius:5px;border-top-right-radius:5px}.modal-content .modal-content-head .delete{-webkit-appearance:none;background-color:rgba(18,18,18,0.2);border:none;border-radius:100%;cursor:pointer;display:inline-block;height:24px;width:24px;position:absolute;top:15px;right:10px}.modal-content .modal-content-head .delete:before{background-color:#fff;content:\\\"\\\";display:block;height:2px;left:50%;margin-left:-25%;margin-top:-1px;position:absolute;top:50%;width:50%;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.modal-content .modal-content-head .delete:after{background-color:#fff;content:\\\"\\\";display:block;height:2px;left:50%;margin-left:-25%;margin-top:-1px;position:absolute;top:50%;width:50%;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.modal-content .modal-content-head .delete:hover{background-color:rgba(17,17,17,0.5)}.modal-content .modal-content-head .modal-content-title{color:#222324;font-size:20px;line-height:1;margin:0;padding:0}.modal-content .modal-content-body{width:640px;max-height:600px;padding:20px}.modal-content .modal-content-foot{position:relative;padding:15px;background-color:#f5f7fa;border-top:1px solid #d3d6db;border-bottom-left-radius:5px;border-bottom-right-radius:5px}.modal-content .modal-content-foot .actions{position:absolute;right:15px;top:15px}.modal-content .modal-content-foot .is-primary{background-color:#1fc8db;border-color:transparent;color:#fff;margin-left:5px}.modal-content .modal-content-foot .is-primary:hover{background-color:#199fae;border-color:transparent;color:#fff}.modal-content .modal-content-foot .button{min-width:70px}.bounce-transition{-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-fill-mode:both;animation-fill-mode:both}.bounce-enter{animation-name:bounceIn}.bounce-leave{animation-name:bounceOut}@-webkit-keyframes bounceIn{from,20%,40%,60%,80%,to{animation-timing-function:cubic-bezier(.215, .61, .355, 1)}0%{opacity:0;transform:scale3d(.3, .3, .3)}20%{transform:scale3d(1.1, 1.1, 1.1)}40%{transform:scale3d(.9, .9, .9)}60%{opacity:1;transform:scale3d(1.03, 1.03, 1.03)}80%{transform:scale3d(.97, .97, .97)}to{opacity:1;transform:scale3d(1, 1, 1)}}@keyframes bounceIn{from,20%,40%,60%,80%,to{animation-timing-function:cubic-bezier(.215, .61, .355, 1)}0%{opacity:0;transform:scale3d(.3, .3, .3)}20%{transform:scale3d(1.1, 1.1, 1.1)}40%{transform:scale3d(.9, .9, .9)}60%{opacity:1;transform:scale3d(1.03, 1.03, 1.03)}80%{transform:scale3d(.97, .97, .97)}to{opacity:1;transform:scale3d(1, 1, 1)}}@-webkit-keyframes bounceOut{20%{transform:scale3d(.9, .9, .9)}50%,55%{opacity:1;transform:scale3d(1.1, 1.1, 1.1)}to{opacity:0;transform:scale3d(.3, .3, .3)}}@keyframes bounceOut{20%{transform:scale3d(.9, .9, .9)}50%,55%{opacity:1;transform:scale3d(1.1, 1.1, 1.1)}to{opacity:0;transform:scale3d(.3, .3, .3)}}\"],\"sourceRoot\":\"webpack://\"}]);\n\t\n\t// exports\n\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t// shim for using process in browser\n\tvar process = module.exports = {};\n\t\n\t// cached from whatever global is present so that test runners that stub it\n\t// don't break things.  But we need to wrap it in a try catch in case it is\n\t// wrapped in strict mode code which doesn't define any globals.  It's inside a\n\t// function because try/catches deoptimize in certain engines.\n\t\n\tvar cachedSetTimeout;\n\tvar cachedClearTimeout;\n\t\n\tfunction defaultSetTimout() {\n\t    throw new Error('setTimeout has not been defined');\n\t}\n\tfunction defaultClearTimeout () {\n\t    throw new Error('clearTimeout has not been defined');\n\t}\n\t(function () {\n\t    try {\n\t        if (typeof setTimeout === 'function') {\n\t            cachedSetTimeout = setTimeout;\n\t        } else {\n\t            cachedSetTimeout = defaultSetTimout;\n\t        }\n\t    } catch (e) {\n\t        cachedSetTimeout = defaultSetTimout;\n\t    }\n\t    try {\n\t        if (typeof clearTimeout === 'function') {\n\t            cachedClearTimeout = clearTimeout;\n\t        } else {\n\t            cachedClearTimeout = defaultClearTimeout;\n\t        }\n\t    } catch (e) {\n\t        cachedClearTimeout = defaultClearTimeout;\n\t    }\n\t} ())\n\tfunction runTimeout(fun) {\n\t    if (cachedSetTimeout === setTimeout) {\n\t        //normal enviroments in sane situations\n\t        return setTimeout(fun, 0);\n\t    }\n\t    // if setTimeout wasn't available but was latter defined\n\t    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n\t        cachedSetTimeout = setTimeout;\n\t        return setTimeout(fun, 0);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedSetTimeout(fun, 0);\n\t    } catch(e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n\t            return cachedSetTimeout.call(null, fun, 0);\n\t        } catch(e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n\t            return cachedSetTimeout.call(this, fun, 0);\n\t        }\n\t    }\n\t\n\t\n\t}\n\tfunction runClearTimeout(marker) {\n\t    if (cachedClearTimeout === clearTimeout) {\n\t        //normal enviroments in sane situations\n\t        return clearTimeout(marker);\n\t    }\n\t    // if clearTimeout wasn't available but was latter defined\n\t    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n\t        cachedClearTimeout = clearTimeout;\n\t        return clearTimeout(marker);\n\t    }\n\t    try {\n\t        // when when somebody has screwed with setTimeout but no I.E. maddness\n\t        return cachedClearTimeout(marker);\n\t    } catch (e){\n\t        try {\n\t            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n\t            return cachedClearTimeout.call(null, marker);\n\t        } catch (e){\n\t            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n\t            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n\t            return cachedClearTimeout.call(this, marker);\n\t        }\n\t    }\n\t\n\t\n\t\n\t}\n\tvar queue = [];\n\tvar draining = false;\n\tvar currentQueue;\n\tvar queueIndex = -1;\n\t\n\tfunction cleanUpNextTick() {\n\t    if (!draining || !currentQueue) {\n\t        return;\n\t    }\n\t    draining = false;\n\t    if (currentQueue.length) {\n\t        queue = currentQueue.concat(queue);\n\t    } else {\n\t        queueIndex = -1;\n\t    }\n\t    if (queue.length) {\n\t        drainQueue();\n\t    }\n\t}\n\t\n\tfunction drainQueue() {\n\t    if (draining) {\n\t        return;\n\t    }\n\t    var timeout = runTimeout(cleanUpNextTick);\n\t    draining = true;\n\t\n\t    var len = queue.length;\n\t    while(len) {\n\t        currentQueue = queue;\n\t        queue = [];\n\t        while (++queueIndex < len) {\n\t            if (currentQueue) {\n\t                currentQueue[queueIndex].run();\n\t            }\n\t        }\n\t        queueIndex = -1;\n\t        len = queue.length;\n\t    }\n\t    currentQueue = null;\n\t    draining = false;\n\t    runClearTimeout(timeout);\n\t}\n\t\n\tprocess.nextTick = function (fun) {\n\t    var args = new Array(arguments.length - 1);\n\t    if (arguments.length > 1) {\n\t        for (var i = 1; i < arguments.length; i++) {\n\t            args[i - 1] = arguments[i];\n\t        }\n\t    }\n\t    queue.push(new Item(fun, args));\n\t    if (queue.length === 1 && !draining) {\n\t        runTimeout(drainQueue);\n\t    }\n\t};\n\t\n\t// v8 likes predictible objects\n\tfunction Item(fun, array) {\n\t    this.fun = fun;\n\t    this.array = array;\n\t}\n\tItem.prototype.run = function () {\n\t    this.fun.apply(null, this.array);\n\t};\n\tprocess.title = 'browser';\n\tprocess.browser = true;\n\tprocess.env = {};\n\tprocess.argv = [];\n\tprocess.version = ''; // empty string to avoid regexp issues\n\tprocess.versions = {};\n\t\n\tfunction noop() {}\n\t\n\tprocess.on = noop;\n\tprocess.addListener = noop;\n\tprocess.once = noop;\n\tprocess.off = noop;\n\tprocess.removeListener = noop;\n\tprocess.removeAllListeners = noop;\n\tprocess.emit = noop;\n\t\n\tprocess.binding = function (name) {\n\t    throw new Error('process.binding is not supported');\n\t};\n\t\n\tprocess.cwd = function () { return '/' };\n\tprocess.chdir = function (dir) {\n\t    throw new Error('process.chdir is not supported');\n\t};\n\tprocess.umask = function() { return 0; };\n\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(5);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-3ea48884&file=app.vue&scoped=true!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-3ea48884&file=app.vue&scoped=true!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(6);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(2)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-412529e4&file=Modal.vue&scoped=true!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Modal.vue\", function() {\n\t\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-412529e4&file=Modal.vue&scoped=true!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Modal.vue\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n/* 10 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div _v-3ea48884=\\\"\\\"> <button @click=onShowModal _v-3ea48884=\\\"\\\">Click Show Modal</button> <modal :title=modal.title :visible.sync=modal.visible :bg-click=false :verify=true :bg-style=bgStyle _v-3ea48884=\\\"\\\"> <label class=label _v-3ea48884=\\\"\\\">Slot Area,write your code in here</label> <p class=control _v-3ea48884=\\\"\\\"> <label class=label _v-3ea48884=\\\"\\\">Name:</label> <input class=input type=text v-model=modal.text placeholder=\\\"Your name\\\" _v-3ea48884=\\\"\\\"> </p> </modal> </div> \";\n\n/***/ },\n/* 11 */\n/***/ function(module, exports) {\n\n\tmodule.exports = \" <div v-show=visible class=modal-background @click=bgClick :style=bgStyle _v-412529e4=\\\"\\\"></div> <div v-el:content=\\\"\\\" class=modal-content v-show=visible :transition=transition :style=[contentStyle,bodyStyle] _v-412529e4=\\\"\\\"> <header v-if=!onlyBody class=modal-content-head _v-412529e4=\\\"\\\"> <p class=modal-content-title _v-412529e4=\\\"\\\">{{ title }}</p> <button class=delete @click=hide _v-412529e4=\\\"\\\"></button> </header> <section class=modal-content-body _v-412529e4=\\\"\\\"> <slot _v-412529e4=\\\"\\\"></slot> </section> <footer v-if=!onlyBody class=\\\"modal-content-foot clearfix\\\" _v-412529e4=\\\"\\\"> <div class=fright _v-412529e4=\\\"\\\"> <a class=button @click=cancel _v-412529e4=\\\"\\\">{{ cancelText }}</a> <a class=\\\"button is-primary\\\" @click=ok _v-412529e4=\\\"\\\">{{ okText }}</a> </div> </footer> </div> \";\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(8)\n\t__vue_script__ = __webpack_require__(3)\n\t__vue_template__ = __webpack_require__(10)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/example/app.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __vue_script__, __vue_template__\n\t__webpack_require__(9)\n\t__vue_script__ = __webpack_require__(4)\n\t__vue_template__ = __webpack_require__(11)\n\tmodule.exports = __vue_script__ || {}\n\tif (module.exports.__esModule) module.exports = module.exports.default\n\tif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\n\tif (false) {(function () {  module.hot.accept()\n\t  var hotAPI = require(\"vue-hot-reload-api\")\n\t  hotAPI.install(require(\"vue\"), true)\n\t  if (!hotAPI.compatible) return\n\t  var id = \"/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/src/Modal.vue\"\n\t  if (!module.hot.data) {\n\t    hotAPI.createRecord(id, module.exports)\n\t  } else {\n\t    hotAPI.update(id, module.exports, __vue_template__)\n\t  }\n\t})()}\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(global, process) {/*!\n\t * Vue.js v1.0.26\n\t * (c) 2016 Evan You\n\t * Released under the MIT License.\n\t */\n\t'use strict';\n\t\n\tfunction set(obj, key, val) {\n\t  if (hasOwn(obj, key)) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  if (obj._isVue) {\n\t    set(obj._data, key, val);\n\t    return;\n\t  }\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    obj[key] = val;\n\t    return;\n\t  }\n\t  ob.convert(key, val);\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._proxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Delete a property and trigger change if necessary.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t */\n\t\n\tfunction del(obj, key) {\n\t  if (!hasOwn(obj, key)) {\n\t    return;\n\t  }\n\t  delete obj[key];\n\t  var ob = obj.__ob__;\n\t  if (!ob) {\n\t    if (obj._isVue) {\n\t      delete obj._data[key];\n\t      obj._digest();\n\t    }\n\t    return;\n\t  }\n\t  ob.dep.notify();\n\t  if (ob.vms) {\n\t    var i = ob.vms.length;\n\t    while (i--) {\n\t      var vm = ob.vms[i];\n\t      vm._unproxy(key);\n\t      vm._digest();\n\t    }\n\t  }\n\t}\n\t\n\tvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\t/**\n\t * Check whether the object has the property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOwn(obj, key) {\n\t  return hasOwnProperty.call(obj, key);\n\t}\n\t\n\t/**\n\t * Check if an expression is a literal value.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\t\n\tfunction isLiteral(exp) {\n\t  return literalValueRE.test(exp);\n\t}\n\t\n\t/**\n\t * Check if a string starts with $ or _\n\t *\n\t * @param {String} str\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isReserved(str) {\n\t  var c = (str + '').charCodeAt(0);\n\t  return c === 0x24 || c === 0x5F;\n\t}\n\t\n\t/**\n\t * Guard text output, make sure undefined outputs\n\t * empty string\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction _toString(value) {\n\t  return value == null ? '' : value.toString();\n\t}\n\t\n\t/**\n\t * Check and convert possible numeric strings to numbers\n\t * before setting back to data\n\t *\n\t * @param {*} value\n\t * @return {*|Number}\n\t */\n\t\n\tfunction toNumber(value) {\n\t  if (typeof value !== 'string') {\n\t    return value;\n\t  } else {\n\t    var parsed = Number(value);\n\t    return isNaN(parsed) ? value : parsed;\n\t  }\n\t}\n\t\n\t/**\n\t * Convert string boolean literals into real booleans.\n\t *\n\t * @param {*} value\n\t * @return {*|Boolean}\n\t */\n\t\n\tfunction toBoolean(value) {\n\t  return value === 'true' ? true : value === 'false' ? false : value;\n\t}\n\t\n\t/**\n\t * Strip quotes from a string\n\t *\n\t * @param {String} str\n\t * @return {String | false}\n\t */\n\t\n\tfunction stripQuotes(str) {\n\t  var a = str.charCodeAt(0);\n\t  var b = str.charCodeAt(str.length - 1);\n\t  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n\t}\n\t\n\t/**\n\t * Camelize a hyphen-delmited string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar camelizeRE = /-(\\w)/g;\n\t\n\tfunction camelize(str) {\n\t  return str.replace(camelizeRE, toUpper);\n\t}\n\t\n\tfunction toUpper(_, c) {\n\t  return c ? c.toUpperCase() : '';\n\t}\n\t\n\t/**\n\t * Hyphenate a camelCase string.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\t\n\tfunction hyphenate(str) {\n\t  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n\t}\n\t\n\t/**\n\t * Converts hyphen/underscore/slash delimitered names into\n\t * camelized classNames.\n\t *\n\t * e.g. my-component => MyComponent\n\t *      some_else    => SomeElse\n\t *      some/comp    => SomeComp\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t */\n\t\n\tvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\t\n\tfunction classify(str) {\n\t  return str.replace(classifyRE, toUpper);\n\t}\n\t\n\t/**\n\t * Simple bind, faster than native\n\t *\n\t * @param {Function} fn\n\t * @param {Object} ctx\n\t * @return {Function}\n\t */\n\t\n\tfunction bind(fn, ctx) {\n\t  return function (a) {\n\t    var l = arguments.length;\n\t    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n\t  };\n\t}\n\t\n\t/**\n\t * Convert an Array-like object to a real Array.\n\t *\n\t * @param {Array-like} list\n\t * @param {Number} [start] - start index\n\t * @return {Array}\n\t */\n\t\n\tfunction toArray(list, start) {\n\t  start = start || 0;\n\t  var i = list.length - start;\n\t  var ret = new Array(i);\n\t  while (i--) {\n\t    ret[i] = list[i + start];\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Mix properties into target object.\n\t *\n\t * @param {Object} to\n\t * @param {Object} from\n\t */\n\t\n\tfunction extend(to, from) {\n\t  var keys = Object.keys(from);\n\t  var i = keys.length;\n\t  while (i--) {\n\t    to[keys[i]] = from[keys[i]];\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Quick object check - this is primarily used to tell\n\t * Objects from primitive values when we know the value\n\t * is a JSON-compliant type.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj !== null && typeof obj === 'object';\n\t}\n\t\n\t/**\n\t * Strict object type check. Only returns true\n\t * for plain JavaScript objects.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar toString = Object.prototype.toString;\n\tvar OBJECT_STRING = '[object Object]';\n\t\n\tfunction isPlainObject(obj) {\n\t  return toString.call(obj) === OBJECT_STRING;\n\t}\n\t\n\t/**\n\t * Array type check.\n\t *\n\t * @param {*} obj\n\t * @return {Boolean}\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * Define a property.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t * @param {Boolean} [enumerable]\n\t */\n\t\n\tfunction def(obj, key, val, enumerable) {\n\t  Object.defineProperty(obj, key, {\n\t    value: val,\n\t    enumerable: !!enumerable,\n\t    writable: true,\n\t    configurable: true\n\t  });\n\t}\n\t\n\t/**\n\t * Debounce a function so it only gets called after the\n\t * input stops arriving after the given wait period.\n\t *\n\t * @param {Function} func\n\t * @param {Number} wait\n\t * @return {Function} - the debounced function\n\t */\n\t\n\tfunction _debounce(func, wait) {\n\t  var timeout, args, context, timestamp, result;\n\t  var later = function later() {\n\t    var last = Date.now() - timestamp;\n\t    if (last < wait && last >= 0) {\n\t      timeout = setTimeout(later, wait - last);\n\t    } else {\n\t      timeout = null;\n\t      result = func.apply(context, args);\n\t      if (!timeout) context = args = null;\n\t    }\n\t  };\n\t  return function () {\n\t    context = this;\n\t    args = arguments;\n\t    timestamp = Date.now();\n\t    if (!timeout) {\n\t      timeout = setTimeout(later, wait);\n\t    }\n\t    return result;\n\t  };\n\t}\n\t\n\t/**\n\t * Manual indexOf because it's slightly faster than\n\t * native.\n\t *\n\t * @param {Array} arr\n\t * @param {*} obj\n\t */\n\t\n\tfunction indexOf(arr, obj) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (arr[i] === obj) return i;\n\t  }\n\t  return -1;\n\t}\n\t\n\t/**\n\t * Make a cancellable version of an async callback.\n\t *\n\t * @param {Function} fn\n\t * @return {Function}\n\t */\n\t\n\tfunction cancellable(fn) {\n\t  var cb = function cb() {\n\t    if (!cb.cancelled) {\n\t      return fn.apply(this, arguments);\n\t    }\n\t  };\n\t  cb.cancel = function () {\n\t    cb.cancelled = true;\n\t  };\n\t  return cb;\n\t}\n\t\n\t/**\n\t * Check if two values are loosely equal - that is,\n\t * if they are plain objects, do they have the same shape?\n\t *\n\t * @param {*} a\n\t * @param {*} b\n\t * @return {Boolean}\n\t */\n\t\n\tfunction looseEqual(a, b) {\n\t  /* eslint-disable eqeqeq */\n\t  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n\t  /* eslint-enable eqeqeq */\n\t}\n\t\n\tvar hasProto = ('__proto__' in {});\n\t\n\t// Browser environment sniffing\n\tvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\t\n\t// detect devtools\n\tvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\t\n\t// UA sniffing for working around browser-specific quirks\n\tvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\n\tvar isIE = UA && UA.indexOf('trident') > 0;\n\tvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\n\tvar isAndroid = UA && UA.indexOf('android') > 0;\n\tvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\n\tvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\n\tvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\t\n\t// detecting iOS UIWebView by indexedDB\n\tvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\t\n\tvar transitionProp = undefined;\n\tvar transitionEndEvent = undefined;\n\tvar animationProp = undefined;\n\tvar animationEndEvent = undefined;\n\t\n\t// Transition property/event sniffing\n\tif (inBrowser && !isIE9) {\n\t  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n\t  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n\t  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n\t  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n\t  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n\t  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n\t}\n\t\n\t/**\n\t * Defer a task to execute it asynchronously. Ideally this\n\t * should be executed as a microtask, so we leverage\n\t * MutationObserver if it's available, and fallback to\n\t * setTimeout(0).\n\t *\n\t * @param {Function} cb\n\t * @param {Object} ctx\n\t */\n\t\n\tvar nextTick = (function () {\n\t  var callbacks = [];\n\t  var pending = false;\n\t  var timerFunc;\n\t  function nextTickHandler() {\n\t    pending = false;\n\t    var copies = callbacks.slice(0);\n\t    callbacks = [];\n\t    for (var i = 0; i < copies.length; i++) {\n\t      copies[i]();\n\t    }\n\t  }\n\t\n\t  /* istanbul ignore if */\n\t  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n\t    var counter = 1;\n\t    var observer = new MutationObserver(nextTickHandler);\n\t    var textNode = document.createTextNode(counter);\n\t    observer.observe(textNode, {\n\t      characterData: true\n\t    });\n\t    timerFunc = function () {\n\t      counter = (counter + 1) % 2;\n\t      textNode.data = counter;\n\t    };\n\t  } else {\n\t    // webpack attempts to inject a shim for setImmediate\n\t    // if it is used as a global, so we have to work around that to\n\t    // avoid bundling unnecessary code.\n\t    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n\t    timerFunc = context.setImmediate || setTimeout;\n\t  }\n\t  return function (cb, ctx) {\n\t    var func = ctx ? function () {\n\t      cb.call(ctx);\n\t    } : cb;\n\t    callbacks.push(func);\n\t    if (pending) return;\n\t    pending = true;\n\t    timerFunc(nextTickHandler, 0);\n\t  };\n\t})();\n\t\n\tvar _Set = undefined;\n\t/* istanbul ignore if */\n\tif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n\t  // use native Set when available.\n\t  _Set = Set;\n\t} else {\n\t  // a non-standard Set polyfill that only works with primitive keys.\n\t  _Set = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t  _Set.prototype.has = function (key) {\n\t    return this.set[key] !== undefined;\n\t  };\n\t  _Set.prototype.add = function (key) {\n\t    this.set[key] = 1;\n\t  };\n\t  _Set.prototype.clear = function () {\n\t    this.set = Object.create(null);\n\t  };\n\t}\n\t\n\tfunction Cache(limit) {\n\t  this.size = 0;\n\t  this.limit = limit;\n\t  this.head = this.tail = undefined;\n\t  this._keymap = Object.create(null);\n\t}\n\t\n\tvar p = Cache.prototype;\n\t\n\t/**\n\t * Put <value> into the cache associated with <key>.\n\t * Returns the entry which was removed to make room for\n\t * the new entry. Otherwise undefined is returned.\n\t * (i.e. if there was enough room already).\n\t *\n\t * @param {String} key\n\t * @param {*} value\n\t * @return {Entry|undefined}\n\t */\n\t\n\tp.put = function (key, value) {\n\t  var removed;\n\t\n\t  var entry = this.get(key, true);\n\t  if (!entry) {\n\t    if (this.size === this.limit) {\n\t      removed = this.shift();\n\t    }\n\t    entry = {\n\t      key: key\n\t    };\n\t    this._keymap[key] = entry;\n\t    if (this.tail) {\n\t      this.tail.newer = entry;\n\t      entry.older = this.tail;\n\t    } else {\n\t      this.head = entry;\n\t    }\n\t    this.tail = entry;\n\t    this.size++;\n\t  }\n\t  entry.value = value;\n\t\n\t  return removed;\n\t};\n\t\n\t/**\n\t * Purge the least recently used (oldest) entry from the\n\t * cache. Returns the removed entry or undefined if the\n\t * cache was empty.\n\t */\n\t\n\tp.shift = function () {\n\t  var entry = this.head;\n\t  if (entry) {\n\t    this.head = this.head.newer;\n\t    this.head.older = undefined;\n\t    entry.newer = entry.older = undefined;\n\t    this._keymap[entry.key] = undefined;\n\t    this.size--;\n\t  }\n\t  return entry;\n\t};\n\t\n\t/**\n\t * Get and register recent use of <key>. Returns the value\n\t * associated with <key> or undefined if not in cache.\n\t *\n\t * @param {String} key\n\t * @param {Boolean} returnEntry\n\t * @return {Entry|*}\n\t */\n\t\n\tp.get = function (key, returnEntry) {\n\t  var entry = this._keymap[key];\n\t  if (entry === undefined) return;\n\t  if (entry === this.tail) {\n\t    return returnEntry ? entry : entry.value;\n\t  }\n\t  // HEAD--------------TAIL\n\t  //   <.older   .newer>\n\t  //  <--- add direction --\n\t  //   A  B  C  <D>  E\n\t  if (entry.newer) {\n\t    if (entry === this.head) {\n\t      this.head = entry.newer;\n\t    }\n\t    entry.newer.older = entry.older; // C <-- E.\n\t  }\n\t  if (entry.older) {\n\t    entry.older.newer = entry.newer; // C. --> E\n\t  }\n\t  entry.newer = undefined; // D --x\n\t  entry.older = this.tail; // D. --> E\n\t  if (this.tail) {\n\t    this.tail.newer = entry; // E. <-- D\n\t  }\n\t  this.tail = entry;\n\t  return returnEntry ? entry : entry.value;\n\t};\n\t\n\tvar cache$1 = new Cache(1000);\n\tvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\n\tvar reservedArgRE = /^in$|^-?\\d+/;\n\t\n\t/**\n\t * Parser state\n\t */\n\t\n\tvar str;\n\tvar dir;\n\tvar c;\n\tvar prev;\n\tvar i;\n\tvar l;\n\tvar lastFilterIndex;\n\tvar inSingle;\n\tvar inDouble;\n\tvar curly;\n\tvar square;\n\tvar paren;\n\t/**\n\t * Push a filter to the current directive object\n\t */\n\t\n\tfunction pushFilter() {\n\t  var exp = str.slice(lastFilterIndex, i).trim();\n\t  var filter;\n\t  if (exp) {\n\t    filter = {};\n\t    var tokens = exp.match(filterTokenRE);\n\t    filter.name = tokens[0];\n\t    if (tokens.length > 1) {\n\t      filter.args = tokens.slice(1).map(processFilterArg);\n\t    }\n\t  }\n\t  if (filter) {\n\t    (dir.filters = dir.filters || []).push(filter);\n\t  }\n\t  lastFilterIndex = i + 1;\n\t}\n\t\n\t/**\n\t * Check if an argument is dynamic and strip quotes.\n\t *\n\t * @param {String} arg\n\t * @return {Object}\n\t */\n\t\n\tfunction processFilterArg(arg) {\n\t  if (reservedArgRE.test(arg)) {\n\t    return {\n\t      value: toNumber(arg),\n\t      dynamic: false\n\t    };\n\t  } else {\n\t    var stripped = stripQuotes(arg);\n\t    var dynamic = stripped === arg;\n\t    return {\n\t      value: dynamic ? arg : stripped,\n\t      dynamic: dynamic\n\t    };\n\t  }\n\t}\n\t\n\t/**\n\t * Parse a directive value and extract the expression\n\t * and its filters into a descriptor.\n\t *\n\t * Example:\n\t *\n\t * \"a + 1 | uppercase\" will yield:\n\t * {\n\t *   expression: 'a + 1',\n\t *   filters: [\n\t *     { name: 'uppercase', args: null }\n\t *   ]\n\t * }\n\t *\n\t * @param {String} s\n\t * @return {Object}\n\t */\n\t\n\tfunction parseDirective(s) {\n\t  var hit = cache$1.get(s);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  // reset parser state\n\t  str = s;\n\t  inSingle = inDouble = false;\n\t  curly = square = paren = 0;\n\t  lastFilterIndex = 0;\n\t  dir = {};\n\t\n\t  for (i = 0, l = str.length; i < l; i++) {\n\t    prev = c;\n\t    c = str.charCodeAt(i);\n\t    if (inSingle) {\n\t      // check single quote\n\t      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n\t    } else if (inDouble) {\n\t      // check double quote\n\t      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n\t    } else if (c === 0x7C && // pipe\n\t    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n\t      if (dir.expression == null) {\n\t        // first filter, end of expression\n\t        lastFilterIndex = i + 1;\n\t        dir.expression = str.slice(0, i).trim();\n\t      } else {\n\t        // already has filter\n\t        pushFilter();\n\t      }\n\t    } else {\n\t      switch (c) {\n\t        case 0x22:\n\t          inDouble = true;break; // \"\n\t        case 0x27:\n\t          inSingle = true;break; // '\n\t        case 0x28:\n\t          paren++;break; // (\n\t        case 0x29:\n\t          paren--;break; // )\n\t        case 0x5B:\n\t          square++;break; // [\n\t        case 0x5D:\n\t          square--;break; // ]\n\t        case 0x7B:\n\t          curly++;break; // {\n\t        case 0x7D:\n\t          curly--;break; // }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (dir.expression == null) {\n\t    dir.expression = str.slice(0, i).trim();\n\t  } else if (lastFilterIndex !== 0) {\n\t    pushFilter();\n\t  }\n\t\n\t  cache$1.put(s, dir);\n\t  return dir;\n\t}\n\t\n\tvar directive = Object.freeze({\n\t  parseDirective: parseDirective\n\t});\n\t\n\tvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\n\tvar cache = undefined;\n\tvar tagRE = undefined;\n\tvar htmlRE = undefined;\n\t/**\n\t * Escape a string so it can be used in a RegExp\n\t * constructor.\n\t *\n\t * @param {String} str\n\t */\n\t\n\tfunction escapeRegex(str) {\n\t  return str.replace(regexEscapeRE, '\\\\$&');\n\t}\n\t\n\tfunction compileRegex() {\n\t  var open = escapeRegex(config.delimiters[0]);\n\t  var close = escapeRegex(config.delimiters[1]);\n\t  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n\t  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n\t  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n\t  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n\t  // reset cache\n\t  cache = new Cache(1000);\n\t}\n\t\n\t/**\n\t * Parse a template text string into an array of tokens.\n\t *\n\t * @param {String} text\n\t * @return {Array<Object> | null}\n\t *               - {String} type\n\t *               - {String} value\n\t *               - {Boolean} [html]\n\t *               - {Boolean} [oneTime]\n\t */\n\t\n\tfunction parseText(text) {\n\t  if (!cache) {\n\t    compileRegex();\n\t  }\n\t  var hit = cache.get(text);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t  if (!tagRE.test(text)) {\n\t    return null;\n\t  }\n\t  var tokens = [];\n\t  var lastIndex = tagRE.lastIndex = 0;\n\t  var match, index, html, value, first, oneTime;\n\t  /* eslint-disable no-cond-assign */\n\t  while (match = tagRE.exec(text)) {\n\t    /* eslint-enable no-cond-assign */\n\t    index = match.index;\n\t    // push text token\n\t    if (index > lastIndex) {\n\t      tokens.push({\n\t        value: text.slice(lastIndex, index)\n\t      });\n\t    }\n\t    // tag token\n\t    html = htmlRE.test(match[0]);\n\t    value = html ? match[1] : match[2];\n\t    first = value.charCodeAt(0);\n\t    oneTime = first === 42; // *\n\t    value = oneTime ? value.slice(1) : value;\n\t    tokens.push({\n\t      tag: true,\n\t      value: value.trim(),\n\t      html: html,\n\t      oneTime: oneTime\n\t    });\n\t    lastIndex = index + match[0].length;\n\t  }\n\t  if (lastIndex < text.length) {\n\t    tokens.push({\n\t      value: text.slice(lastIndex)\n\t    });\n\t  }\n\t  cache.put(text, tokens);\n\t  return tokens;\n\t}\n\t\n\t/**\n\t * Format a list of tokens into an expression.\n\t * e.g. tokens parsed from 'a {{b}} c' can be serialized\n\t * into one single expression as '\"a \" + b + \" c\"'.\n\t *\n\t * @param {Array} tokens\n\t * @param {Vue} [vm]\n\t * @return {String}\n\t */\n\t\n\tfunction tokensToExp(tokens, vm) {\n\t  if (tokens.length > 1) {\n\t    return tokens.map(function (token) {\n\t      return formatToken(token, vm);\n\t    }).join('+');\n\t  } else {\n\t    return formatToken(tokens[0], vm, true);\n\t  }\n\t}\n\t\n\t/**\n\t * Format a single token.\n\t *\n\t * @param {Object} token\n\t * @param {Vue} [vm]\n\t * @param {Boolean} [single]\n\t * @return {String}\n\t */\n\t\n\tfunction formatToken(token, vm, single) {\n\t  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n\t}\n\t\n\t/**\n\t * For an attribute with multiple interpolation tags,\n\t * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n\t * the whole thing into a single watchable expression, we\n\t * have to inline those filters. This function does exactly\n\t * that. This is a bit hacky but it avoids heavy changes\n\t * to directive parser and watcher mechanism.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} single\n\t * @return {String}\n\t */\n\t\n\tvar filterRE = /[^|]\\|[^|]/;\n\tfunction inlineFilters(exp, single) {\n\t  if (!filterRE.test(exp)) {\n\t    return single ? exp : '(' + exp + ')';\n\t  } else {\n\t    var dir = parseDirective(exp);\n\t    if (!dir.filters) {\n\t      return '(' + exp + ')';\n\t    } else {\n\t      return 'this._applyFilters(' + dir.expression + // value\n\t      ',null,' + // oldValue (null for read)\n\t      JSON.stringify(dir.filters) + // filter descriptors\n\t      ',false)'; // write?\n\t    }\n\t  }\n\t}\n\t\n\tvar text = Object.freeze({\n\t  compileRegex: compileRegex,\n\t  parseText: parseText,\n\t  tokensToExp: tokensToExp\n\t});\n\t\n\tvar delimiters = ['{{', '}}'];\n\tvar unsafeDelimiters = ['{{{', '}}}'];\n\t\n\tvar config = Object.defineProperties({\n\t\n\t  /**\n\t   * Whether to print debug messages.\n\t   * Also enables stack trace for warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  debug: false,\n\t\n\t  /**\n\t   * Whether to suppress warnings.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  silent: false,\n\t\n\t  /**\n\t   * Whether to use async rendering.\n\t   */\n\t\n\t  async: true,\n\t\n\t  /**\n\t   * Whether to warn against errors caught when evaluating\n\t   * expressions.\n\t   */\n\t\n\t  warnExpressionErrors: true,\n\t\n\t  /**\n\t   * Whether to allow devtools inspection.\n\t   * Disabled by default in production builds.\n\t   */\n\t\n\t  devtools: process.env.NODE_ENV !== 'production',\n\t\n\t  /**\n\t   * Internal flag to indicate the delimiters have been\n\t   * changed.\n\t   *\n\t   * @type {Boolean}\n\t   */\n\t\n\t  _delimitersChanged: true,\n\t\n\t  /**\n\t   * List of asset types that a component can own.\n\t   *\n\t   * @type {Array}\n\t   */\n\t\n\t  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\t\n\t  /**\n\t   * prop binding modes\n\t   */\n\t\n\t  _propBindingModes: {\n\t    ONE_WAY: 0,\n\t    TWO_WAY: 1,\n\t    ONE_TIME: 2\n\t  },\n\t\n\t  /**\n\t   * Max circular updates allowed in a batcher flush cycle.\n\t   */\n\t\n\t  _maxUpdateCount: 100\n\t\n\t}, {\n\t  delimiters: { /**\n\t                 * Interpolation delimiters. Changing these would trigger\n\t                 * the text parser to re-compile the regular expressions.\n\t                 *\n\t                 * @type {Array<String>}\n\t                 */\n\t\n\t    get: function get() {\n\t      return delimiters;\n\t    },\n\t    set: function set(val) {\n\t      delimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  },\n\t  unsafeDelimiters: {\n\t    get: function get() {\n\t      return unsafeDelimiters;\n\t    },\n\t    set: function set(val) {\n\t      unsafeDelimiters = val;\n\t      compileRegex();\n\t    },\n\t    configurable: true,\n\t    enumerable: true\n\t  }\n\t});\n\t\n\tvar warn = undefined;\n\tvar formatComponentName = undefined;\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  (function () {\n\t    var hasConsole = typeof console !== 'undefined';\n\t\n\t    warn = function (msg, vm) {\n\t      if (hasConsole && !config.silent) {\n\t        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n\t      }\n\t    };\n\t\n\t    formatComponentName = function (vm) {\n\t      var name = vm._isVue ? vm.$options.name : vm.name;\n\t      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n\t    };\n\t  })();\n\t}\n\t\n\t/**\n\t * Append with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction appendWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    target.appendChild(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * InsertBefore with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction beforeWithTransition(el, target, vm, cb) {\n\t  applyTransition(el, 1, function () {\n\t    before(el, target);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Remove with transition.\n\t *\n\t * @param {Element} el\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction removeWithTransition(el, vm, cb) {\n\t  applyTransition(el, -1, function () {\n\t    remove(el);\n\t  }, vm, cb);\n\t}\n\t\n\t/**\n\t * Apply transitions with an operation callback.\n\t *\n\t * @param {Element} el\n\t * @param {Number} direction\n\t *                  1: enter\n\t *                 -1: leave\n\t * @param {Function} op - the actual DOM operation\n\t * @param {Vue} vm\n\t * @param {Function} [cb]\n\t */\n\t\n\tfunction applyTransition(el, direction, op, vm, cb) {\n\t  var transition = el.__v_trans;\n\t  if (!transition ||\n\t  // skip if there are no js hooks and CSS transition is\n\t  // not supported\n\t  !transition.hooks && !transitionEndEvent ||\n\t  // skip transitions for initial compile\n\t  !vm._isCompiled ||\n\t  // if the vm is being manipulated by a parent directive\n\t  // during the parent's compilation phase, skip the\n\t  // animation.\n\t  vm.$parent && !vm.$parent._isCompiled) {\n\t    op();\n\t    if (cb) cb();\n\t    return;\n\t  }\n\t  var action = direction > 0 ? 'enter' : 'leave';\n\t  transition[action](op, cb);\n\t}\n\t\n\tvar transition = Object.freeze({\n\t  appendWithTransition: appendWithTransition,\n\t  beforeWithTransition: beforeWithTransition,\n\t  removeWithTransition: removeWithTransition,\n\t  applyTransition: applyTransition\n\t});\n\t\n\t/**\n\t * Query an element selector if it's not an element already.\n\t *\n\t * @param {String|Element} el\n\t * @return {Element}\n\t */\n\t\n\tfunction query(el) {\n\t  if (typeof el === 'string') {\n\t    var selector = el;\n\t    el = document.querySelector(el);\n\t    if (!el) {\n\t      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n\t    }\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Check if a node is in the document.\n\t * Note: document.documentElement.contains should work here\n\t * but always returns false for comment nodes in phantomjs,\n\t * making unit tests difficult. This is fixed by doing the\n\t * contains() check on the node's parentNode instead of\n\t * the node itself.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction inDoc(node) {\n\t  if (!node) return false;\n\t  var doc = node.ownerDocument.documentElement;\n\t  var parent = node.parentNode;\n\t  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n\t}\n\t\n\t/**\n\t * Get and remove an attribute from a node.\n\t *\n\t * @param {Node} node\n\t * @param {String} _attr\n\t */\n\t\n\tfunction getAttr(node, _attr) {\n\t  var val = node.getAttribute(_attr);\n\t  if (val !== null) {\n\t    node.removeAttribute(_attr);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Get an attribute with colon or v-bind: prefix.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {String|null}\n\t */\n\t\n\tfunction getBindAttr(node, name) {\n\t  var val = getAttr(node, ':' + name);\n\t  if (val === null) {\n\t    val = getAttr(node, 'v-bind:' + name);\n\t  }\n\t  return val;\n\t}\n\t\n\t/**\n\t * Check the presence of a bind attribute.\n\t *\n\t * @param {Node} node\n\t * @param {String} name\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasBindAttr(node, name) {\n\t  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n\t}\n\t\n\t/**\n\t * Insert el before target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction before(el, target) {\n\t  target.parentNode.insertBefore(el, target);\n\t}\n\t\n\t/**\n\t * Insert el after target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction after(el, target) {\n\t  if (target.nextSibling) {\n\t    before(el, target.nextSibling);\n\t  } else {\n\t    target.parentNode.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove el from DOM\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction remove(el) {\n\t  el.parentNode.removeChild(el);\n\t}\n\t\n\t/**\n\t * Prepend el to target\n\t *\n\t * @param {Element} el\n\t * @param {Element} target\n\t */\n\t\n\tfunction prepend(el, target) {\n\t  if (target.firstChild) {\n\t    before(el, target.firstChild);\n\t  } else {\n\t    target.appendChild(el);\n\t  }\n\t}\n\t\n\t/**\n\t * Replace target with el\n\t *\n\t * @param {Element} target\n\t * @param {Element} el\n\t */\n\t\n\tfunction replace(target, el) {\n\t  var parent = target.parentNode;\n\t  if (parent) {\n\t    parent.replaceChild(el, target);\n\t  }\n\t}\n\t\n\t/**\n\t * Add event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tfunction on(el, event, cb, useCapture) {\n\t  el.addEventListener(event, cb, useCapture);\n\t}\n\t\n\t/**\n\t * Remove event listener shorthand.\n\t *\n\t * @param {Element} el\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tfunction off(el, event, cb) {\n\t  el.removeEventListener(event, cb);\n\t}\n\t\n\t/**\n\t * For IE9 compat: when both class and :class are present\n\t * getAttribute('class') returns wrong value...\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getClass(el) {\n\t  var classname = el.className;\n\t  if (typeof classname === 'object') {\n\t    classname = classname.baseVal || '';\n\t  }\n\t  return classname;\n\t}\n\t\n\t/**\n\t * In IE9, setAttribute('class') will result in empty class\n\t * if the element also has the :class attribute; However in\n\t * PhantomJS, setting `className` does not work on SVG elements...\n\t * So we have to do a conditional check here.\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction setClass(el, cls) {\n\t  /* istanbul ignore if */\n\t  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n\t    el.className = cls;\n\t  } else {\n\t    el.setAttribute('class', cls);\n\t  }\n\t}\n\t\n\t/**\n\t * Add class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction addClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.add(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    if (cur.indexOf(' ' + cls + ' ') < 0) {\n\t      setClass(el, (cur + cls).trim());\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Remove class with compatibility for IE & SVG\n\t *\n\t * @param {Element} el\n\t * @param {String} cls\n\t */\n\t\n\tfunction removeClass(el, cls) {\n\t  if (el.classList) {\n\t    el.classList.remove(cls);\n\t  } else {\n\t    var cur = ' ' + getClass(el) + ' ';\n\t    var tar = ' ' + cls + ' ';\n\t    while (cur.indexOf(tar) >= 0) {\n\t      cur = cur.replace(tar, ' ');\n\t    }\n\t    setClass(el, cur.trim());\n\t  }\n\t  if (!el.className) {\n\t    el.removeAttribute('class');\n\t  }\n\t}\n\t\n\t/**\n\t * Extract raw content inside an element into a temporary\n\t * container div\n\t *\n\t * @param {Element} el\n\t * @param {Boolean} asFragment\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction extractContent(el, asFragment) {\n\t  var child;\n\t  var rawContent;\n\t  /* istanbul ignore if */\n\t  if (isTemplate(el) && isFragment(el.content)) {\n\t    el = el.content;\n\t  }\n\t  if (el.hasChildNodes()) {\n\t    trimNode(el);\n\t    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = el.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      rawContent.appendChild(child);\n\t    }\n\t  }\n\t  return rawContent;\n\t}\n\t\n\t/**\n\t * Trim possible empty head/tail text and comment\n\t * nodes inside a parent.\n\t *\n\t * @param {Node} node\n\t */\n\t\n\tfunction trimNode(node) {\n\t  var child;\n\t  /* eslint-disable no-sequences */\n\t  while ((child = node.firstChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  while ((child = node.lastChild, isTrimmable(child))) {\n\t    node.removeChild(child);\n\t  }\n\t  /* eslint-enable no-sequences */\n\t}\n\t\n\tfunction isTrimmable(node) {\n\t  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n\t}\n\t\n\t/**\n\t * Check if an element is a template tag.\n\t * Note if the template appears inside an SVG its tagName\n\t * will be in lowercase.\n\t *\n\t * @param {Element} el\n\t */\n\t\n\tfunction isTemplate(el) {\n\t  return el.tagName && el.tagName.toLowerCase() === 'template';\n\t}\n\t\n\t/**\n\t * Create an \"anchor\" for performing dom insertion/removals.\n\t * This is used in a number of scenarios:\n\t * - fragment instance\n\t * - v-html\n\t * - v-if\n\t * - v-for\n\t * - component\n\t *\n\t * @param {String} content\n\t * @param {Boolean} persist - IE trashes empty textNodes on\n\t *                            cloneNode(true), so in certain\n\t *                            cases the anchor needs to be\n\t *                            non-empty to be persisted in\n\t *                            templates.\n\t * @return {Comment|Text}\n\t */\n\t\n\tfunction createAnchor(content, persist) {\n\t  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n\t  anchor.__v_anchor = true;\n\t  return anchor;\n\t}\n\t\n\t/**\n\t * Find a component ref attribute that starts with $.\n\t *\n\t * @param {Element} node\n\t * @return {String|undefined}\n\t */\n\t\n\tvar refRE = /^v-ref:/;\n\t\n\tfunction findRef(node) {\n\t  if (node.hasAttributes()) {\n\t    var attrs = node.attributes;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      var name = attrs[i].name;\n\t      if (refRE.test(name)) {\n\t        return camelize(name.replace(refRE, ''));\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Map a function to a range of nodes .\n\t *\n\t * @param {Node} node\n\t * @param {Node} end\n\t * @param {Function} op\n\t */\n\t\n\tfunction mapNodeRange(node, end, op) {\n\t  var next;\n\t  while (node !== end) {\n\t    next = node.nextSibling;\n\t    op(node);\n\t    node = next;\n\t  }\n\t  op(end);\n\t}\n\t\n\t/**\n\t * Remove a range of nodes with transition, store\n\t * the nodes in a fragment with correct ordering,\n\t * and call callback when done.\n\t *\n\t * @param {Node} start\n\t * @param {Node} end\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Function} cb\n\t */\n\t\n\tfunction removeNodeRange(start, end, vm, frag, cb) {\n\t  var done = false;\n\t  var removed = 0;\n\t  var nodes = [];\n\t  mapNodeRange(start, end, function (node) {\n\t    if (node === end) done = true;\n\t    nodes.push(node);\n\t    removeWithTransition(node, vm, onRemoved);\n\t  });\n\t  function onRemoved() {\n\t    removed++;\n\t    if (done && removed >= nodes.length) {\n\t      for (var i = 0; i < nodes.length; i++) {\n\t        frag.appendChild(nodes[i]);\n\t      }\n\t      cb && cb();\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Check if a node is a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isFragment(node) {\n\t  return node && node.nodeType === 11;\n\t}\n\t\n\t/**\n\t * Get outerHTML of elements, taking care\n\t * of SVG elements in IE as well.\n\t *\n\t * @param {Element} el\n\t * @return {String}\n\t */\n\t\n\tfunction getOuterHTML(el) {\n\t  if (el.outerHTML) {\n\t    return el.outerHTML;\n\t  } else {\n\t    var container = document.createElement('div');\n\t    container.appendChild(el.cloneNode(true));\n\t    return container.innerHTML;\n\t  }\n\t}\n\t\n\tvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\n\tvar reservedTagRE = /^(slot|partial|component)$/i;\n\t\n\tvar isUnknownElement = undefined;\n\tif (process.env.NODE_ENV !== 'production') {\n\t  isUnknownElement = function (el, tag) {\n\t    if (tag.indexOf('-') > -1) {\n\t      // http://stackoverflow.com/a/28210364/1070244\n\t      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n\t    } else {\n\t      return (/HTMLUnknownElement/.test(el.toString()) &&\n\t        // Chrome returns unknown for several HTML5 elements.\n\t        // https://code.google.com/p/chromium/issues/detail?id=540526\n\t        // Firefox returns unknown for some \"Interactive elements.\"\n\t        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n\t      );\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an element is a component, if yes return its\n\t * component id.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction checkComponentAttr(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  var hasAttrs = el.hasAttributes();\n\t  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n\t    if (resolveAsset(options, 'components', tag)) {\n\t      return { id: tag };\n\t    } else {\n\t      var is = hasAttrs && getIsBinding(el, options);\n\t      if (is) {\n\t        return is;\n\t      } else if (process.env.NODE_ENV !== 'production') {\n\t        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n\t        if (expectedTag) {\n\t          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n\t        } else if (isUnknownElement(el, tag)) {\n\t          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n\t        }\n\t      }\n\t    }\n\t  } else if (hasAttrs) {\n\t    return getIsBinding(el, options);\n\t  }\n\t}\n\t\n\t/**\n\t * Get \"is\" binding from an element.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Object|undefined}\n\t */\n\t\n\tfunction getIsBinding(el, options) {\n\t  // dynamic syntax\n\t  var exp = el.getAttribute('is');\n\t  if (exp != null) {\n\t    if (resolveAsset(options, 'components', exp)) {\n\t      el.removeAttribute('is');\n\t      return { id: exp };\n\t    }\n\t  } else {\n\t    exp = getBindAttr(el, 'is');\n\t    if (exp != null) {\n\t      return { id: exp, dynamic: true };\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Option overwriting strategies are functions that handle\n\t * how to merge a parent option value and a child option\n\t * value into the final value.\n\t *\n\t * All strategy functions follow the same signature:\n\t *\n\t * @param {*} parentVal\n\t * @param {*} childVal\n\t * @param {Vue} [vm]\n\t */\n\t\n\tvar strats = config.optionMergeStrategies = Object.create(null);\n\t\n\t/**\n\t * Helper that recursively merges two data objects together.\n\t */\n\t\n\tfunction mergeData(to, from) {\n\t  var key, toVal, fromVal;\n\t  for (key in from) {\n\t    toVal = to[key];\n\t    fromVal = from[key];\n\t    if (!hasOwn(to, key)) {\n\t      set(to, key, fromVal);\n\t    } else if (isObject(toVal) && isObject(fromVal)) {\n\t      mergeData(toVal, fromVal);\n\t    }\n\t  }\n\t  return to;\n\t}\n\t\n\t/**\n\t * Data\n\t */\n\t\n\tstrats.data = function (parentVal, childVal, vm) {\n\t  if (!vm) {\n\t    // in a Vue.extend merge, both should be functions\n\t    if (!childVal) {\n\t      return parentVal;\n\t    }\n\t    if (typeof childVal !== 'function') {\n\t      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t      return parentVal;\n\t    }\n\t    if (!parentVal) {\n\t      return childVal;\n\t    }\n\t    // when parentVal & childVal are both present,\n\t    // we need to return a function that returns the\n\t    // merged result of both functions... no need to\n\t    // check if parentVal is a function here because\n\t    // it has to be a function to pass previous merges.\n\t    return function mergedDataFn() {\n\t      return mergeData(childVal.call(this), parentVal.call(this));\n\t    };\n\t  } else if (parentVal || childVal) {\n\t    return function mergedInstanceDataFn() {\n\t      // instance merge\n\t      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n\t      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n\t      if (instanceData) {\n\t        return mergeData(instanceData, defaultData);\n\t      } else {\n\t        return defaultData;\n\t      }\n\t    };\n\t  }\n\t};\n\t\n\t/**\n\t * El\n\t */\n\t\n\tstrats.el = function (parentVal, childVal, vm) {\n\t  if (!vm && childVal && typeof childVal !== 'function') {\n\t    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n\t    return;\n\t  }\n\t  var ret = childVal || parentVal;\n\t  // invoke the element factory if this is instance merge\n\t  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n\t};\n\t\n\t/**\n\t * Hooks and param attributes are merged as arrays.\n\t */\n\t\n\tstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n\t  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n\t};\n\t\n\t/**\n\t * Assets\n\t *\n\t * When a vm is present (instance creation), we need to do\n\t * a three-way merge between constructor options, instance\n\t * options and parent options.\n\t */\n\t\n\tfunction mergeAssets(parentVal, childVal) {\n\t  var res = Object.create(parentVal || null);\n\t  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n\t}\n\t\n\tconfig._assetTypes.forEach(function (type) {\n\t  strats[type + 's'] = mergeAssets;\n\t});\n\t\n\t/**\n\t * Events & Watchers.\n\t *\n\t * Events & watchers hashes should not overwrite one\n\t * another, so we merge them as arrays.\n\t */\n\t\n\tstrats.watch = strats.events = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = {};\n\t  extend(ret, parentVal);\n\t  for (var key in childVal) {\n\t    var parent = ret[key];\n\t    var child = childVal[key];\n\t    if (parent && !isArray(parent)) {\n\t      parent = [parent];\n\t    }\n\t    ret[key] = parent ? parent.concat(child) : [child];\n\t  }\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Other object hashes.\n\t */\n\t\n\tstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n\t  if (!childVal) return parentVal;\n\t  if (!parentVal) return childVal;\n\t  var ret = Object.create(null);\n\t  extend(ret, parentVal);\n\t  extend(ret, childVal);\n\t  return ret;\n\t};\n\t\n\t/**\n\t * Default strategy.\n\t */\n\t\n\tvar defaultStrat = function defaultStrat(parentVal, childVal) {\n\t  return childVal === undefined ? parentVal : childVal;\n\t};\n\t\n\t/**\n\t * Make sure component options get converted to actual\n\t * constructors.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardComponents(options) {\n\t  if (options.components) {\n\t    var components = options.components = guardArrayAssets(options.components);\n\t    var ids = Object.keys(components);\n\t    var def;\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      var map = options._componentNameMap = {};\n\t    }\n\t    for (var i = 0, l = ids.length; i < l; i++) {\n\t      var key = ids[i];\n\t      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n\t        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n\t        continue;\n\t      }\n\t      // record a all lowercase <-> kebab-case mapping for\n\t      // possible custom element case error warning\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n\t      }\n\t      def = components[key];\n\t      if (isPlainObject(def)) {\n\t        components[key] = Vue.extend(def);\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Ensure all props option syntax are normalized into the\n\t * Object-based format.\n\t *\n\t * @param {Object} options\n\t */\n\t\n\tfunction guardProps(options) {\n\t  var props = options.props;\n\t  var i, val;\n\t  if (isArray(props)) {\n\t    options.props = {};\n\t    i = props.length;\n\t    while (i--) {\n\t      val = props[i];\n\t      if (typeof val === 'string') {\n\t        options.props[val] = null;\n\t      } else if (val.name) {\n\t        options.props[val.name] = val;\n\t      }\n\t    }\n\t  } else if (isPlainObject(props)) {\n\t    var keys = Object.keys(props);\n\t    i = keys.length;\n\t    while (i--) {\n\t      val = props[keys[i]];\n\t      if (typeof val === 'function') {\n\t        props[keys[i]] = { type: val };\n\t      }\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Guard an Array-format assets option and converted it\n\t * into the key-value Object format.\n\t *\n\t * @param {Object|Array} assets\n\t * @return {Object}\n\t */\n\t\n\tfunction guardArrayAssets(assets) {\n\t  if (isArray(assets)) {\n\t    var res = {};\n\t    var i = assets.length;\n\t    var asset;\n\t    while (i--) {\n\t      asset = assets[i];\n\t      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n\t      if (!id) {\n\t        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n\t      } else {\n\t        res[id] = asset;\n\t      }\n\t    }\n\t    return res;\n\t  }\n\t  return assets;\n\t}\n\t\n\t/**\n\t * Merge two option objects into a new one.\n\t * Core utility used in both instantiation and inheritance.\n\t *\n\t * @param {Object} parent\n\t * @param {Object} child\n\t * @param {Vue} [vm] - if vm is present, indicates this is\n\t *                     an instantiation merge.\n\t */\n\t\n\tfunction mergeOptions(parent, child, vm) {\n\t  guardComponents(child);\n\t  guardProps(child);\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    if (child.propsData && !vm) {\n\t      warn('propsData can only be used as an instantiation option.');\n\t    }\n\t  }\n\t  var options = {};\n\t  var key;\n\t  if (child['extends']) {\n\t    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n\t  }\n\t  if (child.mixins) {\n\t    for (var i = 0, l = child.mixins.length; i < l; i++) {\n\t      var mixin = child.mixins[i];\n\t      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n\t      parent = mergeOptions(parent, mixinOptions, vm);\n\t    }\n\t  }\n\t  for (key in parent) {\n\t    mergeField(key);\n\t  }\n\t  for (key in child) {\n\t    if (!hasOwn(parent, key)) {\n\t      mergeField(key);\n\t    }\n\t  }\n\t  function mergeField(key) {\n\t    var strat = strats[key] || defaultStrat;\n\t    options[key] = strat(parent[key], child[key], vm, key);\n\t  }\n\t  return options;\n\t}\n\t\n\t/**\n\t * Resolve an asset.\n\t * This function is used because child instances need access\n\t * to assets defined in its ancestor chain.\n\t *\n\t * @param {Object} options\n\t * @param {String} type\n\t * @param {String} id\n\t * @param {Boolean} warnMissing\n\t * @return {Object|Function}\n\t */\n\t\n\tfunction resolveAsset(options, type, id, warnMissing) {\n\t  /* istanbul ignore if */\n\t  if (typeof id !== 'string') {\n\t    return;\n\t  }\n\t  var assets = options[type];\n\t  var camelizedId;\n\t  var res = assets[id] ||\n\t  // camelCase ID\n\t  assets[camelizedId = camelize(id)] ||\n\t  // Pascal Case ID\n\t  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n\t  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n\t    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n\t  }\n\t  return res;\n\t}\n\t\n\tvar uid$1 = 0;\n\t\n\t/**\n\t * A dep is an observable that can have multiple\n\t * directives subscribing to it.\n\t *\n\t * @constructor\n\t */\n\tfunction Dep() {\n\t  this.id = uid$1++;\n\t  this.subs = [];\n\t}\n\t\n\t// the current target watcher being evaluated.\n\t// this is globally unique because there could be only one\n\t// watcher being evaluated at any time.\n\tDep.target = null;\n\t\n\t/**\n\t * Add a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.addSub = function (sub) {\n\t  this.subs.push(sub);\n\t};\n\t\n\t/**\n\t * Remove a directive subscriber.\n\t *\n\t * @param {Directive} sub\n\t */\n\t\n\tDep.prototype.removeSub = function (sub) {\n\t  this.subs.$remove(sub);\n\t};\n\t\n\t/**\n\t * Add self as a dependency to the target watcher.\n\t */\n\t\n\tDep.prototype.depend = function () {\n\t  Dep.target.addDep(this);\n\t};\n\t\n\t/**\n\t * Notify all subscribers of a new value.\n\t */\n\t\n\tDep.prototype.notify = function () {\n\t  // stablize the subscriber list first\n\t  var subs = toArray(this.subs);\n\t  for (var i = 0, l = subs.length; i < l; i++) {\n\t    subs[i].update();\n\t  }\n\t};\n\t\n\tvar arrayProto = Array.prototype;\n\tvar arrayMethods = Object.create(arrayProto)\n\t\n\t/**\n\t * Intercept mutating methods and emit events\n\t */\n\t\n\t;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n\t  // cache original method\n\t  var original = arrayProto[method];\n\t  def(arrayMethods, method, function mutator() {\n\t    // avoid leaking arguments:\n\t    // http://jsperf.com/closure-with-arguments\n\t    var i = arguments.length;\n\t    var args = new Array(i);\n\t    while (i--) {\n\t      args[i] = arguments[i];\n\t    }\n\t    var result = original.apply(this, args);\n\t    var ob = this.__ob__;\n\t    var inserted;\n\t    switch (method) {\n\t      case 'push':\n\t        inserted = args;\n\t        break;\n\t      case 'unshift':\n\t        inserted = args;\n\t        break;\n\t      case 'splice':\n\t        inserted = args.slice(2);\n\t        break;\n\t    }\n\t    if (inserted) ob.observeArray(inserted);\n\t    // notify change\n\t    ob.dep.notify();\n\t    return result;\n\t  });\n\t});\n\t\n\t/**\n\t * Swap the element at the given index with a new value\n\t * and emits corresponding event.\n\t *\n\t * @param {Number} index\n\t * @param {*} val\n\t * @return {*} - replaced element\n\t */\n\t\n\tdef(arrayProto, '$set', function $set(index, val) {\n\t  if (index >= this.length) {\n\t    this.length = Number(index) + 1;\n\t  }\n\t  return this.splice(index, 1, val)[0];\n\t});\n\t\n\t/**\n\t * Convenience method to remove the element at given index or target element reference.\n\t *\n\t * @param {*} item\n\t */\n\t\n\tdef(arrayProto, '$remove', function $remove(item) {\n\t  /* istanbul ignore if */\n\t  if (!this.length) return;\n\t  var index = indexOf(this, item);\n\t  if (index > -1) {\n\t    return this.splice(index, 1);\n\t  }\n\t});\n\t\n\tvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\t\n\t/**\n\t * By default, when a reactive property is set, the new value is\n\t * also converted to become reactive. However in certain cases, e.g.\n\t * v-for scope alias and props, we don't want to force conversion\n\t * because the value may be a nested value under a frozen data structure.\n\t *\n\t * So whenever we want to set a reactive property without forcing\n\t * conversion on the new value, we wrap that call inside this function.\n\t */\n\t\n\tvar shouldConvert = true;\n\t\n\tfunction withoutConversion(fn) {\n\t  shouldConvert = false;\n\t  fn();\n\t  shouldConvert = true;\n\t}\n\t\n\t/**\n\t * Observer class that are attached to each observed\n\t * object. Once attached, the observer converts target\n\t * object's property keys into getter/setters that\n\t * collect dependencies and dispatches updates.\n\t *\n\t * @param {Array|Object} value\n\t * @constructor\n\t */\n\t\n\tfunction Observer(value) {\n\t  this.value = value;\n\t  this.dep = new Dep();\n\t  def(value, '__ob__', this);\n\t  if (isArray(value)) {\n\t    var augment = hasProto ? protoAugment : copyAugment;\n\t    augment(value, arrayMethods, arrayKeys);\n\t    this.observeArray(value);\n\t  } else {\n\t    this.walk(value);\n\t  }\n\t}\n\t\n\t// Instance methods\n\t\n\t/**\n\t * Walk through each property and convert them into\n\t * getter/setters. This method should only be called when\n\t * value type is Object.\n\t *\n\t * @param {Object} obj\n\t */\n\t\n\tObserver.prototype.walk = function (obj) {\n\t  var keys = Object.keys(obj);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    this.convert(keys[i], obj[keys[i]]);\n\t  }\n\t};\n\t\n\t/**\n\t * Observe a list of Array items.\n\t *\n\t * @param {Array} items\n\t */\n\t\n\tObserver.prototype.observeArray = function (items) {\n\t  for (var i = 0, l = items.length; i < l; i++) {\n\t    observe(items[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Convert a property into getter/setter so we can emit\n\t * the events when the property is accessed/changed.\n\t *\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tObserver.prototype.convert = function (key, val) {\n\t  defineReactive(this.value, key, val);\n\t};\n\t\n\t/**\n\t * Add an owner vm, so that when $set/$delete mutations\n\t * happen we can notify owner vms to proxy the keys and\n\t * digest the watchers. This is only called when the object\n\t * is observed as an instance's root $data.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.addVm = function (vm) {\n\t  (this.vms || (this.vms = [])).push(vm);\n\t};\n\t\n\t/**\n\t * Remove an owner vm. This is called when the object is\n\t * swapped out as an instance's $data object.\n\t *\n\t * @param {Vue} vm\n\t */\n\t\n\tObserver.prototype.removeVm = function (vm) {\n\t  this.vms.$remove(vm);\n\t};\n\t\n\t// helpers\n\t\n\t/**\n\t * Augment an target Object or Array by intercepting\n\t * the prototype chain using __proto__\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} src\n\t */\n\t\n\tfunction protoAugment(target, src) {\n\t  /* eslint-disable no-proto */\n\t  target.__proto__ = src;\n\t  /* eslint-enable no-proto */\n\t}\n\t\n\t/**\n\t * Augment an target Object or Array by defining\n\t * hidden properties.\n\t *\n\t * @param {Object|Array} target\n\t * @param {Object} proto\n\t */\n\t\n\tfunction copyAugment(target, src, keys) {\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    var key = keys[i];\n\t    def(target, key, src[key]);\n\t  }\n\t}\n\t\n\t/**\n\t * Attempt to create an observer instance for a value,\n\t * returns the new observer if successfully observed,\n\t * or the existing observer if the value already has one.\n\t *\n\t * @param {*} value\n\t * @param {Vue} [vm]\n\t * @return {Observer|undefined}\n\t * @static\n\t */\n\t\n\tfunction observe(value, vm) {\n\t  if (!value || typeof value !== 'object') {\n\t    return;\n\t  }\n\t  var ob;\n\t  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n\t    ob = value.__ob__;\n\t  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n\t    ob = new Observer(value);\n\t  }\n\t  if (ob && vm) {\n\t    ob.addVm(vm);\n\t  }\n\t  return ob;\n\t}\n\t\n\t/**\n\t * Define a reactive property on an Object.\n\t *\n\t * @param {Object} obj\n\t * @param {String} key\n\t * @param {*} val\n\t */\n\t\n\tfunction defineReactive(obj, key, val) {\n\t  var dep = new Dep();\n\t\n\t  var property = Object.getOwnPropertyDescriptor(obj, key);\n\t  if (property && property.configurable === false) {\n\t    return;\n\t  }\n\t\n\t  // cater for pre-defined getter/setters\n\t  var getter = property && property.get;\n\t  var setter = property && property.set;\n\t\n\t  var childOb = observe(val);\n\t  Object.defineProperty(obj, key, {\n\t    enumerable: true,\n\t    configurable: true,\n\t    get: function reactiveGetter() {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (Dep.target) {\n\t        dep.depend();\n\t        if (childOb) {\n\t          childOb.dep.depend();\n\t        }\n\t        if (isArray(value)) {\n\t          for (var e, i = 0, l = value.length; i < l; i++) {\n\t            e = value[i];\n\t            e && e.__ob__ && e.__ob__.dep.depend();\n\t          }\n\t        }\n\t      }\n\t      return value;\n\t    },\n\t    set: function reactiveSetter(newVal) {\n\t      var value = getter ? getter.call(obj) : val;\n\t      if (newVal === value) {\n\t        return;\n\t      }\n\t      if (setter) {\n\t        setter.call(obj, newVal);\n\t      } else {\n\t        val = newVal;\n\t      }\n\t      childOb = observe(newVal);\n\t      dep.notify();\n\t    }\n\t  });\n\t}\n\t\n\t\n\t\n\tvar util = Object.freeze({\n\t\tdefineReactive: defineReactive,\n\t\tset: set,\n\t\tdel: del,\n\t\thasOwn: hasOwn,\n\t\tisLiteral: isLiteral,\n\t\tisReserved: isReserved,\n\t\t_toString: _toString,\n\t\ttoNumber: toNumber,\n\t\ttoBoolean: toBoolean,\n\t\tstripQuotes: stripQuotes,\n\t\tcamelize: camelize,\n\t\thyphenate: hyphenate,\n\t\tclassify: classify,\n\t\tbind: bind,\n\t\ttoArray: toArray,\n\t\textend: extend,\n\t\tisObject: isObject,\n\t\tisPlainObject: isPlainObject,\n\t\tdef: def,\n\t\tdebounce: _debounce,\n\t\tindexOf: indexOf,\n\t\tcancellable: cancellable,\n\t\tlooseEqual: looseEqual,\n\t\tisArray: isArray,\n\t\thasProto: hasProto,\n\t\tinBrowser: inBrowser,\n\t\tdevtools: devtools,\n\t\tisIE: isIE,\n\t\tisIE9: isIE9,\n\t\tisAndroid: isAndroid,\n\t\tisIos: isIos,\n\t\tiosVersionMatch: iosVersionMatch,\n\t\tiosVersion: iosVersion,\n\t\thasMutationObserverBug: hasMutationObserverBug,\n\t\tget transitionProp () { return transitionProp; },\n\t\tget transitionEndEvent () { return transitionEndEvent; },\n\t\tget animationProp () { return animationProp; },\n\t\tget animationEndEvent () { return animationEndEvent; },\n\t\tnextTick: nextTick,\n\t\tget _Set () { return _Set; },\n\t\tquery: query,\n\t\tinDoc: inDoc,\n\t\tgetAttr: getAttr,\n\t\tgetBindAttr: getBindAttr,\n\t\thasBindAttr: hasBindAttr,\n\t\tbefore: before,\n\t\tafter: after,\n\t\tremove: remove,\n\t\tprepend: prepend,\n\t\treplace: replace,\n\t\ton: on,\n\t\toff: off,\n\t\tsetClass: setClass,\n\t\taddClass: addClass,\n\t\tremoveClass: removeClass,\n\t\textractContent: extractContent,\n\t\ttrimNode: trimNode,\n\t\tisTemplate: isTemplate,\n\t\tcreateAnchor: createAnchor,\n\t\tfindRef: findRef,\n\t\tmapNodeRange: mapNodeRange,\n\t\tremoveNodeRange: removeNodeRange,\n\t\tisFragment: isFragment,\n\t\tgetOuterHTML: getOuterHTML,\n\t\tmergeOptions: mergeOptions,\n\t\tresolveAsset: resolveAsset,\n\t\tcheckComponentAttr: checkComponentAttr,\n\t\tcommonTagRE: commonTagRE,\n\t\treservedTagRE: reservedTagRE,\n\t\tget warn () { return warn; }\n\t});\n\t\n\tvar uid = 0;\n\t\n\tfunction initMixin (Vue) {\n\t  /**\n\t   * The main init sequence. This is called for every\n\t   * instance, including ones that are created from extended\n\t   * constructors.\n\t   *\n\t   * @param {Object} options - this options object should be\n\t   *                           the result of merging class\n\t   *                           options and the options passed\n\t   *                           in to the constructor.\n\t   */\n\t\n\t  Vue.prototype._init = function (options) {\n\t    options = options || {};\n\t\n\t    this.$el = null;\n\t    this.$parent = options.parent;\n\t    this.$root = this.$parent ? this.$parent.$root : this;\n\t    this.$children = [];\n\t    this.$refs = {}; // child vm references\n\t    this.$els = {}; // element references\n\t    this._watchers = []; // all watchers as an array\n\t    this._directives = []; // all directives\n\t\n\t    // a uid\n\t    this._uid = uid++;\n\t\n\t    // a flag to avoid this being observed\n\t    this._isVue = true;\n\t\n\t    // events bookkeeping\n\t    this._events = {}; // registered callbacks\n\t    this._eventsCount = {}; // for $broadcast optimization\n\t\n\t    // fragment instance properties\n\t    this._isFragment = false;\n\t    this._fragment = // @type {DocumentFragment}\n\t    this._fragmentStart = // @type {Text|Comment}\n\t    this._fragmentEnd = null; // @type {Text|Comment}\n\t\n\t    // lifecycle state\n\t    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n\t    this._unlinkFn = null;\n\t\n\t    // context:\n\t    // if this is a transcluded component, context\n\t    // will be the common parent vm of this instance\n\t    // and its host.\n\t    this._context = options._context || this.$parent;\n\t\n\t    // scope:\n\t    // if this is inside an inline v-for, the scope\n\t    // will be the intermediate scope created for this\n\t    // repeat fragment. this is used for linking props\n\t    // and container directives.\n\t    this._scope = options._scope;\n\t\n\t    // fragment:\n\t    // if this instance is compiled inside a Fragment, it\n\t    // needs to reigster itself as a child of that fragment\n\t    // for attach/detach to work properly.\n\t    this._frag = options._frag;\n\t    if (this._frag) {\n\t      this._frag.children.push(this);\n\t    }\n\t\n\t    // push self into parent / transclusion host\n\t    if (this.$parent) {\n\t      this.$parent.$children.push(this);\n\t    }\n\t\n\t    // merge options.\n\t    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\t\n\t    // set ref\n\t    this._updateRef();\n\t\n\t    // initialize data as empty object.\n\t    // it will be filled up in _initData().\n\t    this._data = {};\n\t\n\t    // call init hook\n\t    this._callHook('init');\n\t\n\t    // initialize data observation and scope inheritance.\n\t    this._initState();\n\t\n\t    // setup event system and option events.\n\t    this._initEvents();\n\t\n\t    // call created hook\n\t    this._callHook('created');\n\t\n\t    // if `el` option is passed, start compilation.\n\t    if (options.el) {\n\t      this.$mount(options.el);\n\t    }\n\t  };\n\t}\n\t\n\tvar pathCache = new Cache(1000);\n\t\n\t// actions\n\tvar APPEND = 0;\n\tvar PUSH = 1;\n\tvar INC_SUB_PATH_DEPTH = 2;\n\tvar PUSH_SUB_PATH = 3;\n\t\n\t// states\n\tvar BEFORE_PATH = 0;\n\tvar IN_PATH = 1;\n\tvar BEFORE_IDENT = 2;\n\tvar IN_IDENT = 3;\n\tvar IN_SUB_PATH = 4;\n\tvar IN_SINGLE_QUOTE = 5;\n\tvar IN_DOUBLE_QUOTE = 6;\n\tvar AFTER_PATH = 7;\n\tvar ERROR = 8;\n\t\n\tvar pathStateMachine = [];\n\t\n\tpathStateMachine[BEFORE_PATH] = {\n\t  'ws': [BEFORE_PATH],\n\t  'ident': [IN_IDENT, APPEND],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[IN_PATH] = {\n\t  'ws': [IN_PATH],\n\t  '.': [BEFORE_IDENT],\n\t  '[': [IN_SUB_PATH],\n\t  'eof': [AFTER_PATH]\n\t};\n\t\n\tpathStateMachine[BEFORE_IDENT] = {\n\t  'ws': [BEFORE_IDENT],\n\t  'ident': [IN_IDENT, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_IDENT] = {\n\t  'ident': [IN_IDENT, APPEND],\n\t  '0': [IN_IDENT, APPEND],\n\t  'number': [IN_IDENT, APPEND],\n\t  'ws': [IN_PATH, PUSH],\n\t  '.': [BEFORE_IDENT, PUSH],\n\t  '[': [IN_SUB_PATH, PUSH],\n\t  'eof': [AFTER_PATH, PUSH]\n\t};\n\t\n\tpathStateMachine[IN_SUB_PATH] = {\n\t  \"'\": [IN_SINGLE_QUOTE, APPEND],\n\t  '\"': [IN_DOUBLE_QUOTE, APPEND],\n\t  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n\t  ']': [IN_PATH, PUSH_SUB_PATH],\n\t  'eof': ERROR,\n\t  'else': [IN_SUB_PATH, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_SINGLE_QUOTE] = {\n\t  \"'\": [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_SINGLE_QUOTE, APPEND]\n\t};\n\t\n\tpathStateMachine[IN_DOUBLE_QUOTE] = {\n\t  '\"': [IN_SUB_PATH, APPEND],\n\t  'eof': ERROR,\n\t  'else': [IN_DOUBLE_QUOTE, APPEND]\n\t};\n\t\n\t/**\n\t * Determine the type of a character in a keypath.\n\t *\n\t * @param {Char} ch\n\t * @return {String} type\n\t */\n\t\n\tfunction getPathCharType(ch) {\n\t  if (ch === undefined) {\n\t    return 'eof';\n\t  }\n\t\n\t  var code = ch.charCodeAt(0);\n\t\n\t  switch (code) {\n\t    case 0x5B: // [\n\t    case 0x5D: // ]\n\t    case 0x2E: // .\n\t    case 0x22: // \"\n\t    case 0x27: // '\n\t    case 0x30:\n\t      // 0\n\t      return ch;\n\t\n\t    case 0x5F: // _\n\t    case 0x24:\n\t      // $\n\t      return 'ident';\n\t\n\t    case 0x20: // Space\n\t    case 0x09: // Tab\n\t    case 0x0A: // Newline\n\t    case 0x0D: // Return\n\t    case 0xA0: // No-break space\n\t    case 0xFEFF: // Byte Order Mark\n\t    case 0x2028: // Line Separator\n\t    case 0x2029:\n\t      // Paragraph Separator\n\t      return 'ws';\n\t  }\n\t\n\t  // a-z, A-Z\n\t  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n\t    return 'ident';\n\t  }\n\t\n\t  // 1-9\n\t  if (code >= 0x31 && code <= 0x39) {\n\t    return 'number';\n\t  }\n\t\n\t  return 'else';\n\t}\n\t\n\t/**\n\t * Format a subPath, return its plain form if it is\n\t * a literal string or number. Otherwise prepend the\n\t * dynamic indicator (*).\n\t *\n\t * @param {String} path\n\t * @return {String}\n\t */\n\t\n\tfunction formatSubPath(path) {\n\t  var trimmed = path.trim();\n\t  // invalid leading 0\n\t  if (path.charAt(0) === '0' && isNaN(path)) {\n\t    return false;\n\t  }\n\t  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n\t}\n\t\n\t/**\n\t * Parse a string path into an array of segments\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parse(path) {\n\t  var keys = [];\n\t  var index = -1;\n\t  var mode = BEFORE_PATH;\n\t  var subPathDepth = 0;\n\t  var c, newChar, key, type, transition, action, typeMap;\n\t\n\t  var actions = [];\n\t\n\t  actions[PUSH] = function () {\n\t    if (key !== undefined) {\n\t      keys.push(key);\n\t      key = undefined;\n\t    }\n\t  };\n\t\n\t  actions[APPEND] = function () {\n\t    if (key === undefined) {\n\t      key = newChar;\n\t    } else {\n\t      key += newChar;\n\t    }\n\t  };\n\t\n\t  actions[INC_SUB_PATH_DEPTH] = function () {\n\t    actions[APPEND]();\n\t    subPathDepth++;\n\t  };\n\t\n\t  actions[PUSH_SUB_PATH] = function () {\n\t    if (subPathDepth > 0) {\n\t      subPathDepth--;\n\t      mode = IN_SUB_PATH;\n\t      actions[APPEND]();\n\t    } else {\n\t      subPathDepth = 0;\n\t      key = formatSubPath(key);\n\t      if (key === false) {\n\t        return false;\n\t      } else {\n\t        actions[PUSH]();\n\t      }\n\t    }\n\t  };\n\t\n\t  function maybeUnescapeQuote() {\n\t    var nextChar = path[index + 1];\n\t    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n\t      index++;\n\t      newChar = '\\\\' + nextChar;\n\t      actions[APPEND]();\n\t      return true;\n\t    }\n\t  }\n\t\n\t  while (mode != null) {\n\t    index++;\n\t    c = path[index];\n\t\n\t    if (c === '\\\\' && maybeUnescapeQuote()) {\n\t      continue;\n\t    }\n\t\n\t    type = getPathCharType(c);\n\t    typeMap = pathStateMachine[mode];\n\t    transition = typeMap[type] || typeMap['else'] || ERROR;\n\t\n\t    if (transition === ERROR) {\n\t      return; // parse error\n\t    }\n\t\n\t    mode = transition[0];\n\t    action = actions[transition[1]];\n\t    if (action) {\n\t      newChar = transition[2];\n\t      newChar = newChar === undefined ? c : newChar;\n\t      if (action() === false) {\n\t        return;\n\t      }\n\t    }\n\t\n\t    if (mode === AFTER_PATH) {\n\t      keys.raw = path;\n\t      return keys;\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * External parse that check for a cache hit first\n\t *\n\t * @param {String} path\n\t * @return {Array|undefined}\n\t */\n\t\n\tfunction parsePath(path) {\n\t  var hit = pathCache.get(path);\n\t  if (!hit) {\n\t    hit = parse(path);\n\t    if (hit) {\n\t      pathCache.put(path, hit);\n\t    }\n\t  }\n\t  return hit;\n\t}\n\t\n\t/**\n\t * Get from an object from a path string\n\t *\n\t * @param {Object} obj\n\t * @param {String} path\n\t */\n\t\n\tfunction getPath(obj, path) {\n\t  return parseExpression(path).get(obj);\n\t}\n\t\n\t/**\n\t * Warn against setting non-existent root path on a vm.\n\t */\n\t\n\tvar warnNonExistent;\n\tif (process.env.NODE_ENV !== 'production') {\n\t  warnNonExistent = function (path, vm) {\n\t    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n\t  };\n\t}\n\t\n\t/**\n\t * Set on an object from a path\n\t *\n\t * @param {Object} obj\n\t * @param {String | Array} path\n\t * @param {*} val\n\t */\n\t\n\tfunction setPath(obj, path, val) {\n\t  var original = obj;\n\t  if (typeof path === 'string') {\n\t    path = parse(path);\n\t  }\n\t  if (!path || !isObject(obj)) {\n\t    return false;\n\t  }\n\t  var last, key;\n\t  for (var i = 0, l = path.length; i < l; i++) {\n\t    last = obj;\n\t    key = path[i];\n\t    if (key.charAt(0) === '*') {\n\t      key = parseExpression(key.slice(1)).get.call(original, original);\n\t    }\n\t    if (i < l - 1) {\n\t      obj = obj[key];\n\t      if (!isObject(obj)) {\n\t        obj = {};\n\t        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n\t          warnNonExistent(path, last);\n\t        }\n\t        set(last, key, obj);\n\t      }\n\t    } else {\n\t      if (isArray(obj)) {\n\t        obj.$set(key, val);\n\t      } else if (key in obj) {\n\t        obj[key] = val;\n\t      } else {\n\t        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n\t          warnNonExistent(path, obj);\n\t        }\n\t        set(obj, key, val);\n\t      }\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\tvar path = Object.freeze({\n\t  parsePath: parsePath,\n\t  getPath: getPath,\n\t  setPath: setPath\n\t});\n\t\n\tvar expressionCache = new Cache(1000);\n\t\n\tvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\n\tvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\t// keywords that don't make sense inside expressions\n\tvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\n\tvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\t\n\tvar wsRE = /\\s/g;\n\tvar newlineRE = /\\n/g;\n\tvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\n\tvar restoreRE = /\"(\\d+)\"/g;\n\tvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\n\tvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\n\tvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\t\n\tfunction noop() {}\n\t\n\t/**\n\t * Save / Rewrite / Restore\n\t *\n\t * When rewriting paths found in an expression, it is\n\t * possible for the same letter sequences to be found in\n\t * strings and Object literal property keys. Therefore we\n\t * remove and store these parts in a temporary array, and\n\t * restore them after the path rewrite.\n\t */\n\t\n\tvar saved = [];\n\t\n\t/**\n\t * Save replacer\n\t *\n\t * The save regex can match two possible cases:\n\t * 1. An opening object literal\n\t * 2. A string\n\t * If matched as a plain string, we need to escape its\n\t * newlines, since the string needs to be preserved when\n\t * generating the function body.\n\t *\n\t * @param {String} str\n\t * @param {String} isString - str if matched as a string\n\t * @return {String} - placeholder with index\n\t */\n\t\n\tfunction save(str, isString) {\n\t  var i = saved.length;\n\t  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n\t  return '\"' + i + '\"';\n\t}\n\t\n\t/**\n\t * Path rewrite replacer\n\t *\n\t * @param {String} raw\n\t * @return {String}\n\t */\n\t\n\tfunction rewrite(raw) {\n\t  var c = raw.charAt(0);\n\t  var path = raw.slice(1);\n\t  if (allowedKeywordsRE.test(path)) {\n\t    return raw;\n\t  } else {\n\t    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n\t    return c + 'scope.' + path;\n\t  }\n\t}\n\t\n\t/**\n\t * Restore replacer\n\t *\n\t * @param {String} str\n\t * @param {String} i - matched save index\n\t * @return {String}\n\t */\n\t\n\tfunction restore(str, i) {\n\t  return saved[i];\n\t}\n\t\n\t/**\n\t * Rewrite an expression, prefixing all path accessors with\n\t * `scope.` and generate getter/setter functions.\n\t *\n\t * @param {String} exp\n\t * @return {Function}\n\t */\n\t\n\tfunction compileGetter(exp) {\n\t  if (improperKeywordsRE.test(exp)) {\n\t    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n\t  }\n\t  // reset state\n\t  saved.length = 0;\n\t  // save strings and object literal keys\n\t  var body = exp.replace(saveRE, save).replace(wsRE, '');\n\t  // rewrite all paths\n\t  // pad 1 space here because the regex matches 1 extra char\n\t  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n\t  return makeGetterFn(body);\n\t}\n\t\n\t/**\n\t * Build a getter function. Requires eval.\n\t *\n\t * We isolate the try/catch so it doesn't affect the\n\t * optimization of the parse function when it is not called.\n\t *\n\t * @param {String} body\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction makeGetterFn(body) {\n\t  try {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('scope', 'return ' + body + ';');\n\t    /* eslint-enable no-new-func */\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      /* istanbul ignore if */\n\t      if (e.toString().match(/unsafe-eval|CSP/)) {\n\t        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n\t      } else {\n\t        warn('Invalid expression. ' + 'Generated function body: ' + body);\n\t      }\n\t    }\n\t    return noop;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile a setter function for the expression.\n\t *\n\t * @param {String} exp\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileSetter(exp) {\n\t  var path = parsePath(exp);\n\t  if (path) {\n\t    return function (scope, val) {\n\t      setPath(scope, path, val);\n\t    };\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse an expression into re-written getter/setters.\n\t *\n\t * @param {String} exp\n\t * @param {Boolean} needSet\n\t * @return {Function}\n\t */\n\t\n\tfunction parseExpression(exp, needSet) {\n\t  exp = exp.trim();\n\t  // try cache\n\t  var hit = expressionCache.get(exp);\n\t  if (hit) {\n\t    if (needSet && !hit.set) {\n\t      hit.set = compileSetter(hit.exp);\n\t    }\n\t    return hit;\n\t  }\n\t  var res = { exp: exp };\n\t  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n\t  // optimized super simple getter\n\t  ? makeGetterFn('scope.' + exp)\n\t  // dynamic getter\n\t  : compileGetter(exp);\n\t  if (needSet) {\n\t    res.set = compileSetter(exp);\n\t  }\n\t  expressionCache.put(exp, res);\n\t  return res;\n\t}\n\t\n\t/**\n\t * Check if an expression is a simple path.\n\t *\n\t * @param {String} exp\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isSimplePath(exp) {\n\t  return pathTestRE.test(exp) &&\n\t  // don't treat literal values as paths\n\t  !literalValueRE$1.test(exp) &&\n\t  // Math constants e.g. Math.PI, Math.E etc.\n\t  exp.slice(0, 5) !== 'Math.';\n\t}\n\t\n\tvar expression = Object.freeze({\n\t  parseExpression: parseExpression,\n\t  isSimplePath: isSimplePath\n\t});\n\t\n\t// we have two separate queues: one for directive updates\n\t// and one for user watcher registered via $watch().\n\t// we want to guarantee directive updates to be called\n\t// before user watchers so that when user watchers are\n\t// triggered, the DOM would have already been in updated\n\t// state.\n\t\n\tvar queue = [];\n\tvar userQueue = [];\n\tvar has = {};\n\tvar circular = {};\n\tvar waiting = false;\n\t\n\t/**\n\t * Reset the batcher's state.\n\t */\n\t\n\tfunction resetBatcherState() {\n\t  queue.length = 0;\n\t  userQueue.length = 0;\n\t  has = {};\n\t  circular = {};\n\t  waiting = false;\n\t}\n\t\n\t/**\n\t * Flush both queues and run the watchers.\n\t */\n\t\n\tfunction flushBatcherQueue() {\n\t  var _again = true;\n\t\n\t  _function: while (_again) {\n\t    _again = false;\n\t\n\t    runBatcherQueue(queue);\n\t    runBatcherQueue(userQueue);\n\t    // user watchers triggered more watchers,\n\t    // keep flushing until it depletes\n\t    if (queue.length) {\n\t      _again = true;\n\t      continue _function;\n\t    }\n\t    // dev tool hook\n\t    /* istanbul ignore if */\n\t    if (devtools && config.devtools) {\n\t      devtools.emit('flush');\n\t    }\n\t    resetBatcherState();\n\t  }\n\t}\n\t\n\t/**\n\t * Run the watchers in a single queue.\n\t *\n\t * @param {Array} queue\n\t */\n\t\n\tfunction runBatcherQueue(queue) {\n\t  // do not cache length because more watchers might be pushed\n\t  // as we run existing watchers\n\t  for (var i = 0; i < queue.length; i++) {\n\t    var watcher = queue[i];\n\t    var id = watcher.id;\n\t    has[id] = null;\n\t    watcher.run();\n\t    // in dev build, check and stop circular updates.\n\t    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n\t      circular[id] = (circular[id] || 0) + 1;\n\t      if (circular[id] > config._maxUpdateCount) {\n\t        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n\t        break;\n\t      }\n\t    }\n\t  }\n\t  queue.length = 0;\n\t}\n\t\n\t/**\n\t * Push a watcher into the watcher queue.\n\t * Jobs with duplicate IDs will be skipped unless it's\n\t * pushed when the queue is being flushed.\n\t *\n\t * @param {Watcher} watcher\n\t *   properties:\n\t *   - {Number} id\n\t *   - {Function} run\n\t */\n\t\n\tfunction pushWatcher(watcher) {\n\t  var id = watcher.id;\n\t  if (has[id] == null) {\n\t    // push watcher into appropriate queue\n\t    var q = watcher.user ? userQueue : queue;\n\t    has[id] = q.length;\n\t    q.push(watcher);\n\t    // queue the flush\n\t    if (!waiting) {\n\t      waiting = true;\n\t      nextTick(flushBatcherQueue);\n\t    }\n\t  }\n\t}\n\t\n\tvar uid$2 = 0;\n\t\n\t/**\n\t * A watcher parses an expression, collects dependencies,\n\t * and fires callback when the expression value changes.\n\t * This is used for both the $watch() api and directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {String|Function} expOrFn\n\t * @param {Function} cb\n\t * @param {Object} options\n\t *                 - {Array} filters\n\t *                 - {Boolean} twoWay\n\t *                 - {Boolean} deep\n\t *                 - {Boolean} user\n\t *                 - {Boolean} sync\n\t *                 - {Boolean} lazy\n\t *                 - {Function} [preProcess]\n\t *                 - {Function} [postProcess]\n\t * @constructor\n\t */\n\tfunction Watcher(vm, expOrFn, cb, options) {\n\t  // mix in options\n\t  if (options) {\n\t    extend(this, options);\n\t  }\n\t  var isFn = typeof expOrFn === 'function';\n\t  this.vm = vm;\n\t  vm._watchers.push(this);\n\t  this.expression = expOrFn;\n\t  this.cb = cb;\n\t  this.id = ++uid$2; // uid for batching\n\t  this.active = true;\n\t  this.dirty = this.lazy; // for lazy watchers\n\t  this.deps = [];\n\t  this.newDeps = [];\n\t  this.depIds = new _Set();\n\t  this.newDepIds = new _Set();\n\t  this.prevError = null; // for async error stacks\n\t  // parse expression for getter/setter\n\t  if (isFn) {\n\t    this.getter = expOrFn;\n\t    this.setter = undefined;\n\t  } else {\n\t    var res = parseExpression(expOrFn, this.twoWay);\n\t    this.getter = res.get;\n\t    this.setter = res.set;\n\t  }\n\t  this.value = this.lazy ? undefined : this.get();\n\t  // state for avoiding false triggers for deep and Array\n\t  // watchers during vm._digest()\n\t  this.queued = this.shallow = false;\n\t}\n\t\n\t/**\n\t * Evaluate the getter, and re-collect dependencies.\n\t */\n\t\n\tWatcher.prototype.get = function () {\n\t  this.beforeGet();\n\t  var scope = this.scope || this.vm;\n\t  var value;\n\t  try {\n\t    value = this.getter.call(scope, scope);\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n\t      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // \"touch\" every property so they are all tracked as\n\t  // dependencies for deep watching\n\t  if (this.deep) {\n\t    traverse(value);\n\t  }\n\t  if (this.preProcess) {\n\t    value = this.preProcess(value);\n\t  }\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, null, this.filters, false);\n\t  }\n\t  if (this.postProcess) {\n\t    value = this.postProcess(value);\n\t  }\n\t  this.afterGet();\n\t  return value;\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t *\n\t * @param {*} value\n\t */\n\t\n\tWatcher.prototype.set = function (value) {\n\t  var scope = this.scope || this.vm;\n\t  if (this.filters) {\n\t    value = scope._applyFilters(value, this.value, this.filters, true);\n\t  }\n\t  try {\n\t    this.setter.call(scope, scope, value);\n\t  } catch (e) {\n\t    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n\t      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n\t    }\n\t  }\n\t  // two-way sync for v-for alias\n\t  var forContext = scope.$forContext;\n\t  if (forContext && forContext.alias === this.expression) {\n\t    if (forContext.filters) {\n\t      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n\t      return;\n\t    }\n\t    forContext._withLock(function () {\n\t      if (scope.$key) {\n\t        // original is an object\n\t        forContext.rawValue[scope.$key] = value;\n\t      } else {\n\t        forContext.rawValue.$set(scope.$index, value);\n\t      }\n\t    });\n\t  }\n\t};\n\t\n\t/**\n\t * Prepare for dependency collection.\n\t */\n\t\n\tWatcher.prototype.beforeGet = function () {\n\t  Dep.target = this;\n\t};\n\t\n\t/**\n\t * Add a dependency to this directive.\n\t *\n\t * @param {Dep} dep\n\t */\n\t\n\tWatcher.prototype.addDep = function (dep) {\n\t  var id = dep.id;\n\t  if (!this.newDepIds.has(id)) {\n\t    this.newDepIds.add(id);\n\t    this.newDeps.push(dep);\n\t    if (!this.depIds.has(id)) {\n\t      dep.addSub(this);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Clean up for dependency collection.\n\t */\n\t\n\tWatcher.prototype.afterGet = function () {\n\t  Dep.target = null;\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    var dep = this.deps[i];\n\t    if (!this.newDepIds.has(dep.id)) {\n\t      dep.removeSub(this);\n\t    }\n\t  }\n\t  var tmp = this.depIds;\n\t  this.depIds = this.newDepIds;\n\t  this.newDepIds = tmp;\n\t  this.newDepIds.clear();\n\t  tmp = this.deps;\n\t  this.deps = this.newDeps;\n\t  this.newDeps = tmp;\n\t  this.newDeps.length = 0;\n\t};\n\t\n\t/**\n\t * Subscriber interface.\n\t * Will be called when a dependency changes.\n\t *\n\t * @param {Boolean} shallow\n\t */\n\t\n\tWatcher.prototype.update = function (shallow) {\n\t  if (this.lazy) {\n\t    this.dirty = true;\n\t  } else if (this.sync || !config.async) {\n\t    this.run();\n\t  } else {\n\t    // if queued, only overwrite shallow with non-shallow,\n\t    // but not the other way around.\n\t    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n\t    this.queued = true;\n\t    // record before-push error stack in debug mode\n\t    /* istanbul ignore if */\n\t    if (process.env.NODE_ENV !== 'production' && config.debug) {\n\t      this.prevError = new Error('[vue] async stack trace');\n\t    }\n\t    pushWatcher(this);\n\t  }\n\t};\n\t\n\t/**\n\t * Batcher job interface.\n\t * Will be called by the batcher.\n\t */\n\t\n\tWatcher.prototype.run = function () {\n\t  if (this.active) {\n\t    var value = this.get();\n\t    if (value !== this.value ||\n\t    // Deep watchers and watchers on Object/Arrays should fire even\n\t    // when the value is the same, because the value may\n\t    // have mutated; but only do so if this is a\n\t    // non-shallow update (caused by a vm digest).\n\t    (isObject(value) || this.deep) && !this.shallow) {\n\t      // set new value\n\t      var oldValue = this.value;\n\t      this.value = value;\n\t      // in debug + async mode, when a watcher callbacks\n\t      // throws, we also throw the saved before-push error\n\t      // so the full cross-tick stack trace is available.\n\t      var prevError = this.prevError;\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n\t        this.prevError = null;\n\t        try {\n\t          this.cb.call(this.vm, value, oldValue);\n\t        } catch (e) {\n\t          nextTick(function () {\n\t            throw prevError;\n\t          }, 0);\n\t          throw e;\n\t        }\n\t      } else {\n\t        this.cb.call(this.vm, value, oldValue);\n\t      }\n\t    }\n\t    this.queued = this.shallow = false;\n\t  }\n\t};\n\t\n\t/**\n\t * Evaluate the value of the watcher.\n\t * This only gets called for lazy watchers.\n\t */\n\t\n\tWatcher.prototype.evaluate = function () {\n\t  // avoid overwriting another watcher that is being\n\t  // collected.\n\t  var current = Dep.target;\n\t  this.value = this.get();\n\t  this.dirty = false;\n\t  Dep.target = current;\n\t};\n\t\n\t/**\n\t * Depend on all deps collected by this watcher.\n\t */\n\t\n\tWatcher.prototype.depend = function () {\n\t  var i = this.deps.length;\n\t  while (i--) {\n\t    this.deps[i].depend();\n\t  }\n\t};\n\t\n\t/**\n\t * Remove self from all dependencies' subcriber list.\n\t */\n\t\n\tWatcher.prototype.teardown = function () {\n\t  if (this.active) {\n\t    // remove self from vm's watcher list\n\t    // this is a somewhat expensive operation so we skip it\n\t    // if the vm is being destroyed or is performing a v-for\n\t    // re-render (the watcher list is then filtered by v-for).\n\t    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n\t      this.vm._watchers.$remove(this);\n\t    }\n\t    var i = this.deps.length;\n\t    while (i--) {\n\t      this.deps[i].removeSub(this);\n\t    }\n\t    this.active = false;\n\t    this.vm = this.cb = this.value = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Recrusively traverse an object to evoke all converted\n\t * getters, so that every nested property inside the object\n\t * is collected as a \"deep\" dependency.\n\t *\n\t * @param {*} val\n\t */\n\t\n\tvar seenObjects = new _Set();\n\tfunction traverse(val, seen) {\n\t  var i = undefined,\n\t      keys = undefined;\n\t  if (!seen) {\n\t    seen = seenObjects;\n\t    seen.clear();\n\t  }\n\t  var isA = isArray(val);\n\t  var isO = isObject(val);\n\t  if ((isA || isO) && Object.isExtensible(val)) {\n\t    if (val.__ob__) {\n\t      var depId = val.__ob__.dep.id;\n\t      if (seen.has(depId)) {\n\t        return;\n\t      } else {\n\t        seen.add(depId);\n\t      }\n\t    }\n\t    if (isA) {\n\t      i = val.length;\n\t      while (i--) traverse(val[i], seen);\n\t    } else if (isO) {\n\t      keys = Object.keys(val);\n\t      i = keys.length;\n\t      while (i--) traverse(val[keys[i]], seen);\n\t    }\n\t  }\n\t}\n\t\n\tvar text$1 = {\n\t\n\t  bind: function bind() {\n\t    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el[this.attr] = _toString(value);\n\t  }\n\t};\n\t\n\tvar templateCache = new Cache(1000);\n\tvar idSelectorCache = new Cache(1000);\n\t\n\tvar map = {\n\t  efault: [0, '', ''],\n\t  legend: [1, '<fieldset>', '</fieldset>'],\n\t  tr: [2, '<table><tbody>', '</tbody></table>'],\n\t  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n\t};\n\t\n\tmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\t\n\tmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\t\n\tmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\t\n\tmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\t\n\t/**\n\t * Check if a node is a supported template node with a\n\t * DocumentFragment content.\n\t *\n\t * @param {Node} node\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isRealTemplate(node) {\n\t  return isTemplate(node) && isFragment(node.content);\n\t}\n\t\n\tvar tagRE$1 = /<([\\w:-]+)/;\n\tvar entityRE = /&#?\\w+?;/;\n\tvar commentRE = /<!--/;\n\t\n\t/**\n\t * Convert a string template to a DocumentFragment.\n\t * Determines correct wrapping by tag types. Wrapping\n\t * strategy found in jQuery & component/domify.\n\t *\n\t * @param {String} templateString\n\t * @param {Boolean} raw\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction stringToFragment(templateString, raw) {\n\t  // try a cache hit first\n\t  var cacheKey = raw ? templateString : templateString.trim();\n\t  var hit = templateCache.get(cacheKey);\n\t  if (hit) {\n\t    return hit;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var tagMatch = templateString.match(tagRE$1);\n\t  var entityMatch = entityRE.test(templateString);\n\t  var commentMatch = commentRE.test(templateString);\n\t\n\t  if (!tagMatch && !entityMatch && !commentMatch) {\n\t    // text only, return a single text node.\n\t    frag.appendChild(document.createTextNode(templateString));\n\t  } else {\n\t    var tag = tagMatch && tagMatch[1];\n\t    var wrap = map[tag] || map.efault;\n\t    var depth = wrap[0];\n\t    var prefix = wrap[1];\n\t    var suffix = wrap[2];\n\t    var node = document.createElement('div');\n\t\n\t    node.innerHTML = prefix + templateString + suffix;\n\t    while (depth--) {\n\t      node = node.lastChild;\n\t    }\n\t\n\t    var child;\n\t    /* eslint-disable no-cond-assign */\n\t    while (child = node.firstChild) {\n\t      /* eslint-enable no-cond-assign */\n\t      frag.appendChild(child);\n\t    }\n\t  }\n\t  if (!raw) {\n\t    trimNode(frag);\n\t  }\n\t  templateCache.put(cacheKey, frag);\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Convert a template node to a DocumentFragment.\n\t *\n\t * @param {Node} node\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction nodeToFragment(node) {\n\t  // if its a template tag and the browser supports it,\n\t  // its content is already a document fragment. However, iOS Safari has\n\t  // bug when using directly cloned template content with touch\n\t  // events and can cause crashes when the nodes are removed from DOM, so we\n\t  // have to treat template elements as string templates. (#2805)\n\t  /* istanbul ignore if */\n\t  if (isRealTemplate(node)) {\n\t    return stringToFragment(node.innerHTML);\n\t  }\n\t  // script template\n\t  if (node.tagName === 'SCRIPT') {\n\t    return stringToFragment(node.textContent);\n\t  }\n\t  // normal node, clone it to avoid mutating the original\n\t  var clonedNode = cloneNode(node);\n\t  var frag = document.createDocumentFragment();\n\t  var child;\n\t  /* eslint-disable no-cond-assign */\n\t  while (child = clonedNode.firstChild) {\n\t    /* eslint-enable no-cond-assign */\n\t    frag.appendChild(child);\n\t  }\n\t  trimNode(frag);\n\t  return frag;\n\t}\n\t\n\t// Test for the presence of the Safari template cloning bug\n\t// https://bugs.webkit.org/showug.cgi?id=137755\n\tvar hasBrokenTemplate = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var a = document.createElement('div');\n\t    a.innerHTML = '<template>1</template>';\n\t    return !a.cloneNode(true).firstChild.innerHTML;\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t// Test for IE10/11 textarea placeholder clone bug\n\tvar hasTextareaCloneBug = (function () {\n\t  /* istanbul ignore else */\n\t  if (inBrowser) {\n\t    var t = document.createElement('textarea');\n\t    t.placeholder = 't';\n\t    return t.cloneNode(true).value === 't';\n\t  } else {\n\t    return false;\n\t  }\n\t})();\n\t\n\t/**\n\t * 1. Deal with Safari cloning nested <template> bug by\n\t *    manually cloning all template instances.\n\t * 2. Deal with IE10/11 textarea placeholder bug by setting\n\t *    the correct value after cloning.\n\t *\n\t * @param {Element|DocumentFragment} node\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction cloneNode(node) {\n\t  /* istanbul ignore if */\n\t  if (!node.querySelectorAll) {\n\t    return node.cloneNode();\n\t  }\n\t  var res = node.cloneNode(true);\n\t  var i, original, cloned;\n\t  /* istanbul ignore if */\n\t  if (hasBrokenTemplate) {\n\t    var tempClone = res;\n\t    if (isRealTemplate(node)) {\n\t      node = node.content;\n\t      tempClone = res.content;\n\t    }\n\t    original = node.querySelectorAll('template');\n\t    if (original.length) {\n\t      cloned = tempClone.querySelectorAll('template');\n\t      i = cloned.length;\n\t      while (i--) {\n\t        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n\t      }\n\t    }\n\t  }\n\t  /* istanbul ignore if */\n\t  if (hasTextareaCloneBug) {\n\t    if (node.tagName === 'TEXTAREA') {\n\t      res.value = node.value;\n\t    } else {\n\t      original = node.querySelectorAll('textarea');\n\t      if (original.length) {\n\t        cloned = res.querySelectorAll('textarea');\n\t        i = cloned.length;\n\t        while (i--) {\n\t          cloned[i].value = original[i].value;\n\t        }\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Process the template option and normalizes it into a\n\t * a DocumentFragment that can be used as a partial or a\n\t * instance template.\n\t *\n\t * @param {*} template\n\t *        Possible values include:\n\t *        - DocumentFragment object\n\t *        - Node object of type Template\n\t *        - id selector: '#some-template-id'\n\t *        - template string: '<div><span>{{msg}}</span></div>'\n\t * @param {Boolean} shouldClone\n\t * @param {Boolean} raw\n\t *        inline HTML interpolation. Do not check for id\n\t *        selector and keep whitespace in the string.\n\t * @return {DocumentFragment|undefined}\n\t */\n\t\n\tfunction parseTemplate(template, shouldClone, raw) {\n\t  var node, frag;\n\t\n\t  // if the template is already a document fragment,\n\t  // do nothing\n\t  if (isFragment(template)) {\n\t    trimNode(template);\n\t    return shouldClone ? cloneNode(template) : template;\n\t  }\n\t\n\t  if (typeof template === 'string') {\n\t    // id selector\n\t    if (!raw && template.charAt(0) === '#') {\n\t      // id selector can be cached too\n\t      frag = idSelectorCache.get(template);\n\t      if (!frag) {\n\t        node = document.getElementById(template.slice(1));\n\t        if (node) {\n\t          frag = nodeToFragment(node);\n\t          // save selector to cache\n\t          idSelectorCache.put(template, frag);\n\t        }\n\t      }\n\t    } else {\n\t      // normal string template\n\t      frag = stringToFragment(template, raw);\n\t    }\n\t  } else if (template.nodeType) {\n\t    // a direct node\n\t    frag = nodeToFragment(template);\n\t  }\n\t\n\t  return frag && shouldClone ? cloneNode(frag) : frag;\n\t}\n\t\n\tvar template = Object.freeze({\n\t  cloneNode: cloneNode,\n\t  parseTemplate: parseTemplate\n\t});\n\t\n\tvar html = {\n\t\n\t  bind: function bind() {\n\t    // a comment node means this is a binding for\n\t    // {{{ inline unescaped html }}}\n\t    if (this.el.nodeType === 8) {\n\t      // hold nodes\n\t      this.nodes = [];\n\t      // replace the placeholder with proper anchor\n\t      this.anchor = createAnchor('v-html');\n\t      replace(this.el, this.anchor);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    value = _toString(value);\n\t    if (this.nodes) {\n\t      this.swap(value);\n\t    } else {\n\t      this.el.innerHTML = value;\n\t    }\n\t  },\n\t\n\t  swap: function swap(value) {\n\t    // remove old nodes\n\t    var i = this.nodes.length;\n\t    while (i--) {\n\t      remove(this.nodes[i]);\n\t    }\n\t    // convert new value to a fragment\n\t    // do not attempt to retrieve from id selector\n\t    var frag = parseTemplate(value, true, true);\n\t    // save a reference to these nodes so we can remove later\n\t    this.nodes = toArray(frag.childNodes);\n\t    before(frag, this.anchor);\n\t  }\n\t};\n\t\n\t/**\n\t * Abstraction for a partially-compiled fragment.\n\t * Can optionally compile content with a child scope.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t * @param {DocumentFragment} frag\n\t * @param {Vue} [host]\n\t * @param {Object} [scope]\n\t * @param {Fragment} [parentFrag]\n\t */\n\tfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n\t  this.children = [];\n\t  this.childFrags = [];\n\t  this.vm = vm;\n\t  this.scope = scope;\n\t  this.inserted = false;\n\t  this.parentFrag = parentFrag;\n\t  if (parentFrag) {\n\t    parentFrag.childFrags.push(this);\n\t  }\n\t  this.unlink = linker(vm, frag, host, scope, this);\n\t  var single = this.single = frag.childNodes.length === 1 &&\n\t  // do not go single mode if the only node is an anchor\n\t  !frag.childNodes[0].__v_anchor;\n\t  if (single) {\n\t    this.node = frag.childNodes[0];\n\t    this.before = singleBefore;\n\t    this.remove = singleRemove;\n\t  } else {\n\t    this.node = createAnchor('fragment-start');\n\t    this.end = createAnchor('fragment-end');\n\t    this.frag = frag;\n\t    prepend(this.node, frag);\n\t    frag.appendChild(this.end);\n\t    this.before = multiBefore;\n\t    this.remove = multiRemove;\n\t  }\n\t  this.node.__v_frag = this;\n\t}\n\t\n\t/**\n\t * Call attach/detach for all components contained within\n\t * this fragment. Also do so recursively for all child\n\t * fragments.\n\t *\n\t * @param {Function} hook\n\t */\n\t\n\tFragment.prototype.callHook = function (hook) {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    this.childFrags[i].callHook(hook);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    hook(this.children[i]);\n\t  }\n\t};\n\t\n\t/**\n\t * Insert fragment before target, single node version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction singleBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  method(this.node, target, this.vm);\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, single node version\n\t */\n\t\n\tfunction singleRemove() {\n\t  this.inserted = false;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  var self = this;\n\t  this.beforeRemove();\n\t  removeWithTransition(this.node, this.vm, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Insert fragment before target, multi-nodes version\n\t *\n\t * @param {Node} target\n\t * @param {Boolean} withTransition\n\t */\n\t\n\tfunction multiBefore(target, withTransition) {\n\t  this.inserted = true;\n\t  var vm = this.vm;\n\t  var method = withTransition !== false ? beforeWithTransition : before;\n\t  mapNodeRange(this.node, this.end, function (node) {\n\t    method(node, target, vm);\n\t  });\n\t  if (inDoc(this.node)) {\n\t    this.callHook(attach);\n\t  }\n\t}\n\t\n\t/**\n\t * Remove fragment, multi-nodes version\n\t */\n\t\n\tfunction multiRemove() {\n\t  this.inserted = false;\n\t  var self = this;\n\t  var shouldCallRemove = inDoc(this.node);\n\t  this.beforeRemove();\n\t  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n\t    if (shouldCallRemove) {\n\t      self.callHook(detach);\n\t    }\n\t    self.destroy();\n\t  });\n\t}\n\t\n\t/**\n\t * Prepare the fragment for removal.\n\t */\n\t\n\tFragment.prototype.beforeRemove = function () {\n\t  var i, l;\n\t  for (i = 0, l = this.childFrags.length; i < l; i++) {\n\t    // call the same method recursively on child\n\t    // fragments, depth-first\n\t    this.childFrags[i].beforeRemove(false);\n\t  }\n\t  for (i = 0, l = this.children.length; i < l; i++) {\n\t    // Call destroy for all contained instances,\n\t    // with remove:false and defer:true.\n\t    // Defer is necessary because we need to\n\t    // keep the children to call detach hooks\n\t    // on them.\n\t    this.children[i].$destroy(false, true);\n\t  }\n\t  var dirs = this.unlink.dirs;\n\t  for (i = 0, l = dirs.length; i < l; i++) {\n\t    // disable the watchers on all the directives\n\t    // so that the rendered content stays the same\n\t    // during removal.\n\t    dirs[i]._watcher && dirs[i]._watcher.teardown();\n\t  }\n\t};\n\t\n\t/**\n\t * Destroy the fragment.\n\t */\n\t\n\tFragment.prototype.destroy = function () {\n\t  if (this.parentFrag) {\n\t    this.parentFrag.childFrags.$remove(this);\n\t  }\n\t  this.node.__v_frag = null;\n\t  this.unlink();\n\t};\n\t\n\t/**\n\t * Call attach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction attach(child) {\n\t  if (!child._isAttached && inDoc(child.$el)) {\n\t    child._callHook('attached');\n\t  }\n\t}\n\t\n\t/**\n\t * Call detach hook for a Vue instance.\n\t *\n\t * @param {Vue} child\n\t */\n\t\n\tfunction detach(child) {\n\t  if (child._isAttached && !inDoc(child.$el)) {\n\t    child._callHook('detached');\n\t  }\n\t}\n\t\n\tvar linkerCache = new Cache(5000);\n\t\n\t/**\n\t * A factory that can be used to create instances of a\n\t * fragment. Caches the compiled linker if possible.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element|String} el\n\t */\n\tfunction FragmentFactory(vm, el) {\n\t  this.vm = vm;\n\t  var template;\n\t  var isString = typeof el === 'string';\n\t  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n\t    template = parseTemplate(el, true);\n\t  } else {\n\t    template = document.createDocumentFragment();\n\t    template.appendChild(el);\n\t  }\n\t  this.template = template;\n\t  // linker can be cached, but only for components\n\t  var linker;\n\t  var cid = vm.constructor.cid;\n\t  if (cid > 0) {\n\t    var cacheId = cid + (isString ? el : getOuterHTML(el));\n\t    linker = linkerCache.get(cacheId);\n\t    if (!linker) {\n\t      linker = compile(template, vm.$options, true);\n\t      linkerCache.put(cacheId, linker);\n\t    }\n\t  } else {\n\t    linker = compile(template, vm.$options, true);\n\t  }\n\t  this.linker = linker;\n\t}\n\t\n\t/**\n\t * Create a fragment instance with given host and scope.\n\t *\n\t * @param {Vue} host\n\t * @param {Object} scope\n\t * @param {Fragment} parentFrag\n\t */\n\t\n\tFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n\t  var frag = cloneNode(this.template);\n\t  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n\t};\n\t\n\tvar ON = 700;\n\tvar MODEL = 800;\n\tvar BIND = 850;\n\tvar TRANSITION = 1100;\n\tvar EL = 1500;\n\tvar COMPONENT = 1500;\n\tvar PARTIAL = 1750;\n\tvar IF = 2100;\n\tvar FOR = 2200;\n\tvar SLOT = 2300;\n\t\n\tvar uid$3 = 0;\n\t\n\tvar vFor = {\n\t\n\t  priority: FOR,\n\t  terminal: true,\n\t\n\t  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\t\n\t  bind: function bind() {\n\t    // support \"item in/of items\" syntax\n\t    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n\t    if (inMatch) {\n\t      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n\t      if (itMatch) {\n\t        this.iterator = itMatch[1].trim();\n\t        this.alias = itMatch[2].trim();\n\t      } else {\n\t        this.alias = inMatch[1].trim();\n\t      }\n\t      this.expression = inMatch[2];\n\t    }\n\t\n\t    if (!this.alias) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n\t      return;\n\t    }\n\t\n\t    // uid as a cache identifier\n\t    this.id = '__v-for__' + ++uid$3;\n\t\n\t    // check if this is an option list,\n\t    // so that we know if we need to update the <select>'s\n\t    // v-model when the option list has changed.\n\t    // because v-model has a lower priority than v-for,\n\t    // the v-model is not bound here yet, so we have to\n\t    // retrive it in the actual updateModel() function.\n\t    var tag = this.el.tagName;\n\t    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\t\n\t    // setup anchor nodes\n\t    this.start = createAnchor('v-for-start');\n\t    this.end = createAnchor('v-for-end');\n\t    replace(this.el, this.end);\n\t    before(this.start, this.end);\n\t\n\t    // cache\n\t    this.cache = Object.create(null);\n\t\n\t    // fragment factory\n\t    this.factory = new FragmentFactory(this.vm, this.el);\n\t  },\n\t\n\t  update: function update(data) {\n\t    this.diff(data);\n\t    this.updateRef();\n\t    this.updateModel();\n\t  },\n\t\n\t  /**\n\t   * Diff, based on new data and old data, determine the\n\t   * minimum amount of DOM manipulations needed to make the\n\t   * DOM reflect the new data Array.\n\t   *\n\t   * The algorithm diffs the new data Array by storing a\n\t   * hidden reference to an owner vm instance on previously\n\t   * seen data. This allows us to achieve O(n) which is\n\t   * better than a levenshtein distance based algorithm,\n\t   * which is O(m * n).\n\t   *\n\t   * @param {Array} data\n\t   */\n\t\n\t  diff: function diff(data) {\n\t    // check if the Array was converted from an Object\n\t    var item = data[0];\n\t    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\t\n\t    var trackByKey = this.params.trackBy;\n\t    var oldFrags = this.frags;\n\t    var frags = this.frags = new Array(data.length);\n\t    var alias = this.alias;\n\t    var iterator = this.iterator;\n\t    var start = this.start;\n\t    var end = this.end;\n\t    var inDocument = inDoc(start);\n\t    var init = !oldFrags;\n\t    var i, l, frag, key, value, primitive;\n\t\n\t    // First pass, go through the new Array and fill up\n\t    // the new frags array. If a piece of data has a cached\n\t    // instance for it, we reuse it. Otherwise build a new\n\t    // instance.\n\t    for (i = 0, l = data.length; i < l; i++) {\n\t      item = data[i];\n\t      key = convertedFromObject ? item.$key : null;\n\t      value = convertedFromObject ? item.$value : item;\n\t      primitive = !isObject(value);\n\t      frag = !init && this.getCachedFrag(value, i, key);\n\t      if (frag) {\n\t        // reusable fragment\n\t        frag.reused = true;\n\t        // update $index\n\t        frag.scope.$index = i;\n\t        // update $key\n\t        if (key) {\n\t          frag.scope.$key = key;\n\t        }\n\t        // update iterator\n\t        if (iterator) {\n\t          frag.scope[iterator] = key !== null ? key : i;\n\t        }\n\t        // update data for track-by, object repeat &\n\t        // primitive values.\n\t        if (trackByKey || convertedFromObject || primitive) {\n\t          withoutConversion(function () {\n\t            frag.scope[alias] = value;\n\t          });\n\t        }\n\t      } else {\n\t        // new isntance\n\t        frag = this.create(value, alias, i, key);\n\t        frag.fresh = !init;\n\t      }\n\t      frags[i] = frag;\n\t      if (init) {\n\t        frag.before(end);\n\t      }\n\t    }\n\t\n\t    // we're done for the initial render.\n\t    if (init) {\n\t      return;\n\t    }\n\t\n\t    // Second pass, go through the old fragments and\n\t    // destroy those who are not reused (and remove them\n\t    // from cache)\n\t    var removalIndex = 0;\n\t    var totalRemoved = oldFrags.length - frags.length;\n\t    // when removing a large number of fragments, watcher removal\n\t    // turns out to be a perf bottleneck, so we batch the watcher\n\t    // removals into a single filter call!\n\t    this.vm._vForRemoving = true;\n\t    for (i = 0, l = oldFrags.length; i < l; i++) {\n\t      frag = oldFrags[i];\n\t      if (!frag.reused) {\n\t        this.deleteCachedFrag(frag);\n\t        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n\t      }\n\t    }\n\t    this.vm._vForRemoving = false;\n\t    if (removalIndex) {\n\t      this.vm._watchers = this.vm._watchers.filter(function (w) {\n\t        return w.active;\n\t      });\n\t    }\n\t\n\t    // Final pass, move/insert new fragments into the\n\t    // right place.\n\t    var targetPrev, prevEl, currentPrev;\n\t    var insertionIndex = 0;\n\t    for (i = 0, l = frags.length; i < l; i++) {\n\t      frag = frags[i];\n\t      // this is the frag that we should be after\n\t      targetPrev = frags[i - 1];\n\t      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n\t      if (frag.reused && !frag.staggerCb) {\n\t        currentPrev = findPrevFrag(frag, start, this.id);\n\t        if (currentPrev !== targetPrev && (!currentPrev ||\n\t        // optimization for moving a single item.\n\t        // thanks to suggestions by @livoras in #1807\n\t        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n\t          this.move(frag, prevEl);\n\t        }\n\t      } else {\n\t        // new instance, or still in stagger.\n\t        // insert with updated stagger index.\n\t        this.insert(frag, insertionIndex++, prevEl, inDocument);\n\t      }\n\t      frag.reused = frag.fresh = false;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Create a new fragment instance.\n\t   *\n\t   * @param {*} value\n\t   * @param {String} alias\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   * @return {Fragment}\n\t   */\n\t\n\t  create: function create(value, alias, index, key) {\n\t    var host = this._host;\n\t    // create iteration scope\n\t    var parentScope = this._scope || this.vm;\n\t    var scope = Object.create(parentScope);\n\t    // ref holder for the scope\n\t    scope.$refs = Object.create(parentScope.$refs);\n\t    scope.$els = Object.create(parentScope.$els);\n\t    // make sure point $parent to parent scope\n\t    scope.$parent = parentScope;\n\t    // for two-way binding on alias\n\t    scope.$forContext = this;\n\t    // define scope properties\n\t    // important: define the scope alias without forced conversion\n\t    // so that frozen data structures remain non-reactive.\n\t    withoutConversion(function () {\n\t      defineReactive(scope, alias, value);\n\t    });\n\t    defineReactive(scope, '$index', index);\n\t    if (key) {\n\t      defineReactive(scope, '$key', key);\n\t    } else if (scope.$key) {\n\t      // avoid accidental fallback\n\t      def(scope, '$key', null);\n\t    }\n\t    if (this.iterator) {\n\t      defineReactive(scope, this.iterator, key !== null ? key : index);\n\t    }\n\t    var frag = this.factory.create(host, scope, this._frag);\n\t    frag.forId = this.id;\n\t    this.cacheFrag(value, frag, index, key);\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Update the v-ref on owner vm.\n\t   */\n\t\n\t  updateRef: function updateRef() {\n\t    var ref = this.descriptor.ref;\n\t    if (!ref) return;\n\t    var hash = (this._scope || this.vm).$refs;\n\t    var refs;\n\t    if (!this.fromObject) {\n\t      refs = this.frags.map(findVmFromFrag);\n\t    } else {\n\t      refs = {};\n\t      this.frags.forEach(function (frag) {\n\t        refs[frag.scope.$key] = findVmFromFrag(frag);\n\t      });\n\t    }\n\t    hash[ref] = refs;\n\t  },\n\t\n\t  /**\n\t   * For option lists, update the containing v-model on\n\t   * parent <select>.\n\t   */\n\t\n\t  updateModel: function updateModel() {\n\t    if (this.isOption) {\n\t      var parent = this.start.parentNode;\n\t      var model = parent && parent.__v_model;\n\t      if (model) {\n\t        model.forceUpdate();\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Insert a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Node} prevEl\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  insert: function insert(frag, index, prevEl, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n\t    if (inDocument && staggerAmount) {\n\t      // create an anchor and insert it synchronously,\n\t      // so that we can resolve the correct order without\n\t      // worrying about some elements not inserted yet\n\t      var anchor = frag.staggerAnchor;\n\t      if (!anchor) {\n\t        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n\t        anchor.__v_frag = frag;\n\t      }\n\t      after(anchor, prevEl);\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.before(anchor);\n\t        remove(anchor);\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      var target = prevEl.nextSibling;\n\t      /* istanbul ignore if */\n\t      if (!target) {\n\t        // reset end anchor position in case the position was messed up\n\t        // by an external drag-n-drop library.\n\t        after(this.end, prevEl);\n\t        target = this.end;\n\t      }\n\t      frag.before(target);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Remove a fragment. Handles staggering.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {Boolean} inDocument\n\t   */\n\t\n\t  remove: function remove(frag, index, total, inDocument) {\n\t    if (frag.staggerCb) {\n\t      frag.staggerCb.cancel();\n\t      frag.staggerCb = null;\n\t      // it's not possible for the same frag to be removed\n\t      // twice, so if we have a pending stagger callback,\n\t      // it means this frag is queued for enter but removed\n\t      // before its transition started. Since it is already\n\t      // destroyed, we can just leave it in detached state.\n\t      return;\n\t    }\n\t    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n\t    if (inDocument && staggerAmount) {\n\t      var op = frag.staggerCb = cancellable(function () {\n\t        frag.staggerCb = null;\n\t        frag.remove();\n\t      });\n\t      setTimeout(op, staggerAmount);\n\t    } else {\n\t      frag.remove();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Move a fragment to a new position.\n\t   * Force no transition.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Node} prevEl\n\t   */\n\t\n\t  move: function move(frag, prevEl) {\n\t    // fix a common issue with Sortable:\n\t    // if prevEl doesn't have nextSibling, this means it's\n\t    // been dragged after the end anchor. Just re-position\n\t    // the end anchor to the end of the container.\n\t    /* istanbul ignore if */\n\t    if (!prevEl.nextSibling) {\n\t      this.end.parentNode.appendChild(this.end);\n\t    }\n\t    frag.before(prevEl.nextSibling, false);\n\t  },\n\t\n\t  /**\n\t   * Cache a fragment using track-by or the object key.\n\t   *\n\t   * @param {*} value\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {String} [key]\n\t   */\n\t\n\t  cacheFrag: function cacheFrag(value, frag, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var cache = this.cache;\n\t    var primitive = !isObject(value);\n\t    var id;\n\t    if (key || trackByKey || primitive) {\n\t      id = getTrackByKey(index, key, value, trackByKey);\n\t      if (!cache[id]) {\n\t        cache[id] = frag;\n\t      } else if (trackByKey !== '$index') {\n\t        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t      }\n\t    } else {\n\t      id = this.id;\n\t      if (hasOwn(value, id)) {\n\t        if (value[id] === null) {\n\t          value[id] = frag;\n\t        } else {\n\t          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t        }\n\t      } else if (Object.isExtensible(value)) {\n\t        def(value, id, frag);\n\t      } else if (process.env.NODE_ENV !== 'production') {\n\t        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n\t      }\n\t    }\n\t    frag.raw = value;\n\t  },\n\t\n\t  /**\n\t   * Get a cached fragment from the value/index/key\n\t   *\n\t   * @param {*} value\n\t   * @param {Number} index\n\t   * @param {String} key\n\t   * @return {Fragment}\n\t   */\n\t\n\t  getCachedFrag: function getCachedFrag(value, index, key) {\n\t    var trackByKey = this.params.trackBy;\n\t    var primitive = !isObject(value);\n\t    var frag;\n\t    if (key || trackByKey || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      frag = this.cache[id];\n\t    } else {\n\t      frag = value[this.id];\n\t    }\n\t    if (frag && (frag.reused || frag.fresh)) {\n\t      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n\t    }\n\t    return frag;\n\t  },\n\t\n\t  /**\n\t   * Delete a fragment from cache.\n\t   *\n\t   * @param {Fragment} frag\n\t   */\n\t\n\t  deleteCachedFrag: function deleteCachedFrag(frag) {\n\t    var value = frag.raw;\n\t    var trackByKey = this.params.trackBy;\n\t    var scope = frag.scope;\n\t    var index = scope.$index;\n\t    // fix #948: avoid accidentally fall through to\n\t    // a parent repeater which happens to have $key.\n\t    var key = hasOwn(scope, '$key') && scope.$key;\n\t    var primitive = !isObject(value);\n\t    if (trackByKey || key || primitive) {\n\t      var id = getTrackByKey(index, key, value, trackByKey);\n\t      this.cache[id] = null;\n\t    } else {\n\t      value[this.id] = null;\n\t      frag.raw = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Get the stagger amount for an insertion/removal.\n\t   *\n\t   * @param {Fragment} frag\n\t   * @param {Number} index\n\t   * @param {Number} total\n\t   * @param {String} type\n\t   */\n\t\n\t  getStagger: function getStagger(frag, index, total, type) {\n\t    type = type + 'Stagger';\n\t    var trans = frag.node.__v_trans;\n\t    var hooks = trans && trans.hooks;\n\t    var hook = hooks && (hooks[type] || hooks.stagger);\n\t    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n\t  },\n\t\n\t  /**\n\t   * Pre-process the value before piping it through the\n\t   * filters. This is passed to and called by the watcher.\n\t   */\n\t\n\t  _preProcess: function _preProcess(value) {\n\t    // regardless of type, store the un-filtered raw value.\n\t    this.rawValue = value;\n\t    return value;\n\t  },\n\t\n\t  /**\n\t   * Post-process the value after it has been piped through\n\t   * the filters. This is passed to and called by the watcher.\n\t   *\n\t   * It is necessary for this to be called during the\n\t   * watcher's dependency collection phase because we want\n\t   * the v-for to update when the source Object is mutated.\n\t   */\n\t\n\t  _postProcess: function _postProcess(value) {\n\t    if (isArray(value)) {\n\t      return value;\n\t    } else if (isPlainObject(value)) {\n\t      // convert plain object to array.\n\t      var keys = Object.keys(value);\n\t      var i = keys.length;\n\t      var res = new Array(i);\n\t      var key;\n\t      while (i--) {\n\t        key = keys[i];\n\t        res[i] = {\n\t          $key: key,\n\t          $value: value[key]\n\t        };\n\t      }\n\t      return res;\n\t    } else {\n\t      if (typeof value === 'number' && !isNaN(value)) {\n\t        value = range(value);\n\t      }\n\t      return value || [];\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.descriptor.ref) {\n\t      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n\t    }\n\t    if (this.frags) {\n\t      var i = this.frags.length;\n\t      var frag;\n\t      while (i--) {\n\t        frag = this.frags[i];\n\t        this.deleteCachedFrag(frag);\n\t        frag.destroy();\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Helper to find the previous element that is a fragment\n\t * anchor. This is necessary because a destroyed frag's\n\t * element could still be lingering in the DOM before its\n\t * leaving transition finishes, but its inserted flag\n\t * should have been set to false so we can skip them.\n\t *\n\t * If this is a block repeat, we want to make sure we only\n\t * return frag that is bound to this v-for. (see #929)\n\t *\n\t * @param {Fragment} frag\n\t * @param {Comment|Text} anchor\n\t * @param {String} id\n\t * @return {Fragment}\n\t */\n\t\n\tfunction findPrevFrag(frag, anchor, id) {\n\t  var el = frag.node.previousSibling;\n\t  /* istanbul ignore if */\n\t  if (!el) return;\n\t  frag = el.__v_frag;\n\t  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n\t    el = el.previousSibling;\n\t    /* istanbul ignore if */\n\t    if (!el) return;\n\t    frag = el.__v_frag;\n\t  }\n\t  return frag;\n\t}\n\t\n\t/**\n\t * Find a vm from a fragment.\n\t *\n\t * @param {Fragment} frag\n\t * @return {Vue|undefined}\n\t */\n\t\n\tfunction findVmFromFrag(frag) {\n\t  var node = frag.node;\n\t  // handle multi-node frag\n\t  if (frag.end) {\n\t    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n\t      node = node.nextSibling;\n\t    }\n\t  }\n\t  return node.__vue__;\n\t}\n\t\n\t/**\n\t * Create a range array from given number.\n\t *\n\t * @param {Number} n\n\t * @return {Array}\n\t */\n\t\n\tfunction range(n) {\n\t  var i = -1;\n\t  var ret = new Array(Math.floor(n));\n\t  while (++i < n) {\n\t    ret[i] = i;\n\t  }\n\t  return ret;\n\t}\n\t\n\t/**\n\t * Get the track by key for an item.\n\t *\n\t * @param {Number} index\n\t * @param {String} key\n\t * @param {*} value\n\t * @param {String} [trackByKey]\n\t */\n\t\n\tfunction getTrackByKey(index, key, value, trackByKey) {\n\t  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n\t}\n\t\n\tif (process.env.NODE_ENV !== 'production') {\n\t  vFor.warnDuplicate = function (value) {\n\t    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n\t  };\n\t}\n\t\n\tvar vIf = {\n\t\n\t  priority: IF,\n\t  terminal: true,\n\t\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    if (!el.__vue__) {\n\t      // check else block\n\t      var next = el.nextElementSibling;\n\t      if (next && getAttr(next, 'v-else') !== null) {\n\t        remove(next);\n\t        this.elseEl = next;\n\t      }\n\t      // check main block\n\t      this.anchor = createAnchor('v-if');\n\t      replace(el, this.anchor);\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n\t      this.invalid = true;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) return;\n\t    if (value) {\n\t      if (!this.frag) {\n\t        this.insert();\n\t      }\n\t    } else {\n\t      this.remove();\n\t    }\n\t  },\n\t\n\t  insert: function insert() {\n\t    if (this.elseFrag) {\n\t      this.elseFrag.remove();\n\t      this.elseFrag = null;\n\t    }\n\t    // lazy init factory\n\t    if (!this.factory) {\n\t      this.factory = new FragmentFactory(this.vm, this.el);\n\t    }\n\t    this.frag = this.factory.create(this._host, this._scope, this._frag);\n\t    this.frag.before(this.anchor);\n\t  },\n\t\n\t  remove: function remove() {\n\t    if (this.frag) {\n\t      this.frag.remove();\n\t      this.frag = null;\n\t    }\n\t    if (this.elseEl && !this.elseFrag) {\n\t      if (!this.elseFactory) {\n\t        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n\t      }\n\t      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n\t      this.elseFrag.before(this.anchor);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t    if (this.elseFrag) {\n\t      this.elseFrag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar show = {\n\t\n\t  bind: function bind() {\n\t    // check else block\n\t    var next = this.el.nextElementSibling;\n\t    if (next && getAttr(next, 'v-else') !== null) {\n\t      this.elseEl = next;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.apply(this.el, value);\n\t    if (this.elseEl) {\n\t      this.apply(this.elseEl, !value);\n\t    }\n\t  },\n\t\n\t  apply: function apply(el, value) {\n\t    if (inDoc(el)) {\n\t      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n\t    } else {\n\t      toggle();\n\t    }\n\t    function toggle() {\n\t      el.style.display = value ? '' : 'none';\n\t    }\n\t  }\n\t};\n\t\n\tvar text$2 = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t    var isRange = el.type === 'range';\n\t    var lazy = this.params.lazy;\n\t    var number = this.params.number;\n\t    var debounce = this.params.debounce;\n\t\n\t    // handle composition events.\n\t    //   http://blog.evanyou.me/2014/01/03/composition-event/\n\t    // skip this for Android because it handles composition\n\t    // events quite differently. Android doesn't trigger\n\t    // composition events for language input methods e.g.\n\t    // Chinese, but instead triggers them for spelling\n\t    // suggestions... (see Discussion/#162)\n\t    var composing = false;\n\t    if (!isAndroid && !isRange) {\n\t      this.on('compositionstart', function () {\n\t        composing = true;\n\t      });\n\t      this.on('compositionend', function () {\n\t        composing = false;\n\t        // in IE11 the \"compositionend\" event fires AFTER\n\t        // the \"input\" event, so the input handler is blocked\n\t        // at the end... have to call it here.\n\t        //\n\t        // #1327: in lazy mode this is unecessary.\n\t        if (!lazy) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // prevent messing with the input when user is typing,\n\t    // and force update on blur.\n\t    this.focused = false;\n\t    if (!isRange && !lazy) {\n\t      this.on('focus', function () {\n\t        self.focused = true;\n\t      });\n\t      this.on('blur', function () {\n\t        self.focused = false;\n\t        // do not sync value after fragment removal (#2017)\n\t        if (!self._frag || self._frag.inserted) {\n\t          self.rawListener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // Now attach the main listener\n\t    this.listener = this.rawListener = function () {\n\t      if (composing || !self._bound) {\n\t        return;\n\t      }\n\t      var val = number || isRange ? toNumber(el.value) : el.value;\n\t      self.set(val);\n\t      // force update on next tick to avoid lock & same value\n\t      // also only update when user is not typing\n\t      nextTick(function () {\n\t        if (self._bound && !self.focused) {\n\t          self.update(self._watcher.value);\n\t        }\n\t      });\n\t    };\n\t\n\t    // apply debounce\n\t    if (debounce) {\n\t      this.listener = _debounce(this.listener, debounce);\n\t    }\n\t\n\t    // Support jQuery events, since jQuery.trigger() doesn't\n\t    // trigger native events in some cases and some plugins\n\t    // rely on $.trigger()\n\t    //\n\t    // We want to make sure if a listener is attached using\n\t    // jQuery, it is also removed with jQuery, that's why\n\t    // we do the check for each directive instance and\n\t    // store that check result on itself. This also allows\n\t    // easier test coverage control by unsetting the global\n\t    // jQuery variable in tests.\n\t    this.hasjQuery = typeof jQuery === 'function';\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.on ? 'on' : 'bind';\n\t      jQuery(el)[method]('change', this.rawListener);\n\t      if (!lazy) {\n\t        jQuery(el)[method]('input', this.listener);\n\t      }\n\t    } else {\n\t      this.on('change', this.rawListener);\n\t      if (!lazy) {\n\t        this.on('input', this.listener);\n\t      }\n\t    }\n\t\n\t    // IE9 doesn't fire input event on backspace/del/cut\n\t    if (!lazy && isIE9) {\n\t      this.on('cut', function () {\n\t        nextTick(self.listener);\n\t      });\n\t      this.on('keyup', function (e) {\n\t        if (e.keyCode === 46 || e.keyCode === 8) {\n\t          self.listener();\n\t        }\n\t      });\n\t    }\n\t\n\t    // set initial value if present\n\t    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    // #3029 only update when the value changes. This prevent\n\t    // browsers from overwriting values like selectionStart\n\t    value = _toString(value);\n\t    if (value !== this.el.value) this.el.value = value;\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var el = this.el;\n\t    if (this.hasjQuery) {\n\t      var method = jQuery.fn.off ? 'off' : 'unbind';\n\t      jQuery(el)[method]('change', this.listener);\n\t      jQuery(el)[method]('input', this.listener);\n\t    }\n\t  }\n\t};\n\t\n\tvar radio = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      // value overwrite via v-bind:value\n\t      if (el.hasOwnProperty('_value')) {\n\t        return el._value;\n\t      }\n\t      var val = el.value;\n\t      if (self.params.number) {\n\t        val = toNumber(val);\n\t      }\n\t      return val;\n\t    };\n\t\n\t    this.listener = function () {\n\t      self.set(self.getValue());\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    this.el.checked = looseEqual(value, this.getValue());\n\t  }\n\t};\n\t\n\tvar select = {\n\t\n\t  bind: function bind() {\n\t    var _this = this;\n\t\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    // method to force update DOM using latest value.\n\t    this.forceUpdate = function () {\n\t      if (self._watcher) {\n\t        self.update(self._watcher.get());\n\t      }\n\t    };\n\t\n\t    // check if this is a multiple select\n\t    var multiple = this.multiple = el.hasAttribute('multiple');\n\t\n\t    // attach listener\n\t    this.listener = function () {\n\t      var value = getValue(el, multiple);\n\t      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n\t      self.set(value);\n\t    };\n\t    this.on('change', this.listener);\n\t\n\t    // if has initial value, set afterBind\n\t    var initValue = getValue(el, multiple, true);\n\t    if (multiple && initValue.length || !multiple && initValue !== null) {\n\t      this.afterBind = this.listener;\n\t    }\n\t\n\t    // All major browsers except Firefox resets\n\t    // selectedIndex with value -1 to 0 when the element\n\t    // is appended to a new parent, therefore we have to\n\t    // force a DOM update whenever that happens...\n\t    this.vm.$on('hook:attached', function () {\n\t      nextTick(_this.forceUpdate);\n\t    });\n\t    if (!inDoc(el)) {\n\t      nextTick(this.forceUpdate);\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    el.selectedIndex = -1;\n\t    var multi = this.multiple && isArray(value);\n\t    var options = el.options;\n\t    var i = options.length;\n\t    var op, val;\n\t    while (i--) {\n\t      op = options[i];\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      /* eslint-disable eqeqeq */\n\t      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n\t      /* eslint-enable eqeqeq */\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    /* istanbul ignore next */\n\t    this.vm.$off('hook:attached', this.forceUpdate);\n\t  }\n\t};\n\t\n\t/**\n\t * Get select value\n\t *\n\t * @param {SelectElement} el\n\t * @param {Boolean} multi\n\t * @param {Boolean} init\n\t * @return {Array|*}\n\t */\n\t\n\tfunction getValue(el, multi, init) {\n\t  var res = multi ? [] : null;\n\t  var op, val, selected;\n\t  for (var i = 0, l = el.options.length; i < l; i++) {\n\t    op = el.options[i];\n\t    selected = init ? op.hasAttribute('selected') : op.selected;\n\t    if (selected) {\n\t      val = op.hasOwnProperty('_value') ? op._value : op.value;\n\t      if (multi) {\n\t        res.push(val);\n\t      } else {\n\t        return val;\n\t      }\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Native Array.indexOf uses strict equal, but in this\n\t * case we need to match string/numbers with custom equal.\n\t *\n\t * @param {Array} arr\n\t * @param {*} val\n\t */\n\t\n\tfunction indexOf$1(arr, val) {\n\t  var i = arr.length;\n\t  while (i--) {\n\t    if (looseEqual(arr[i], val)) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\t\n\tvar checkbox = {\n\t\n\t  bind: function bind() {\n\t    var self = this;\n\t    var el = this.el;\n\t\n\t    this.getValue = function () {\n\t      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n\t    };\n\t\n\t    function getBooleanValue() {\n\t      var val = el.checked;\n\t      if (val && el.hasOwnProperty('_trueValue')) {\n\t        return el._trueValue;\n\t      }\n\t      if (!val && el.hasOwnProperty('_falseValue')) {\n\t        return el._falseValue;\n\t      }\n\t      return val;\n\t    }\n\t\n\t    this.listener = function () {\n\t      var model = self._watcher.value;\n\t      if (isArray(model)) {\n\t        var val = self.getValue();\n\t        if (el.checked) {\n\t          if (indexOf(model, val) < 0) {\n\t            model.push(val);\n\t          }\n\t        } else {\n\t          model.$remove(val);\n\t        }\n\t      } else {\n\t        self.set(getBooleanValue());\n\t      }\n\t    };\n\t\n\t    this.on('change', this.listener);\n\t    if (el.hasAttribute('checked')) {\n\t      this.afterBind = this.listener;\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    var el = this.el;\n\t    if (isArray(value)) {\n\t      el.checked = indexOf(value, this.getValue()) > -1;\n\t    } else {\n\t      if (el.hasOwnProperty('_trueValue')) {\n\t        el.checked = looseEqual(value, el._trueValue);\n\t      } else {\n\t        el.checked = !!value;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\tvar handlers = {\n\t  text: text$2,\n\t  radio: radio,\n\t  select: select,\n\t  checkbox: checkbox\n\t};\n\t\n\tvar model = {\n\t\n\t  priority: MODEL,\n\t  twoWay: true,\n\t  handlers: handlers,\n\t  params: ['lazy', 'number', 'debounce'],\n\t\n\t  /**\n\t   * Possible elements:\n\t   *   <select>\n\t   *   <textarea>\n\t   *   <input type=\"*\">\n\t   *     - text\n\t   *     - checkbox\n\t   *     - radio\n\t   *     - number\n\t   */\n\t\n\t  bind: function bind() {\n\t    // friendly warning...\n\t    this.checkFilters();\n\t    if (this.hasRead && !this.hasWrite) {\n\t      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n\t    }\n\t    var el = this.el;\n\t    var tag = el.tagName;\n\t    var handler;\n\t    if (tag === 'INPUT') {\n\t      handler = handlers[el.type] || handlers.text;\n\t    } else if (tag === 'SELECT') {\n\t      handler = handlers.select;\n\t    } else if (tag === 'TEXTAREA') {\n\t      handler = handlers.text;\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n\t      return;\n\t    }\n\t    el.__v_model = this;\n\t    handler.bind.call(this);\n\t    this.update = handler.update;\n\t    this._unbind = handler.unbind;\n\t  },\n\t\n\t  /**\n\t   * Check read/write filter stats.\n\t   */\n\t\n\t  checkFilters: function checkFilters() {\n\t    var filters = this.filters;\n\t    if (!filters) return;\n\t    var i = filters.length;\n\t    while (i--) {\n\t      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n\t      if (typeof filter === 'function' || filter.read) {\n\t        this.hasRead = true;\n\t      }\n\t      if (filter.write) {\n\t        this.hasWrite = true;\n\t      }\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.el.__v_model = null;\n\t    this._unbind && this._unbind();\n\t  }\n\t};\n\t\n\t// keyCode aliases\n\tvar keyCodes = {\n\t  esc: 27,\n\t  tab: 9,\n\t  enter: 13,\n\t  space: 32,\n\t  'delete': [8, 46],\n\t  up: 38,\n\t  left: 37,\n\t  right: 39,\n\t  down: 40\n\t};\n\t\n\tfunction keyFilter(handler, keys) {\n\t  var codes = keys.map(function (key) {\n\t    var charCode = key.charCodeAt(0);\n\t    if (charCode > 47 && charCode < 58) {\n\t      return parseInt(key, 10);\n\t    }\n\t    if (key.length === 1) {\n\t      charCode = key.toUpperCase().charCodeAt(0);\n\t      if (charCode > 64 && charCode < 91) {\n\t        return charCode;\n\t      }\n\t    }\n\t    return keyCodes[key];\n\t  });\n\t  codes = [].concat.apply([], codes);\n\t  return function keyHandler(e) {\n\t    if (codes.indexOf(e.keyCode) > -1) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tfunction stopFilter(handler) {\n\t  return function stopHandler(e) {\n\t    e.stopPropagation();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction preventFilter(handler) {\n\t  return function preventHandler(e) {\n\t    e.preventDefault();\n\t    return handler.call(this, e);\n\t  };\n\t}\n\t\n\tfunction selfFilter(handler) {\n\t  return function selfHandler(e) {\n\t    if (e.target === e.currentTarget) {\n\t      return handler.call(this, e);\n\t    }\n\t  };\n\t}\n\t\n\tvar on$1 = {\n\t\n\t  priority: ON,\n\t  acceptStatement: true,\n\t  keyCodes: keyCodes,\n\t\n\t  bind: function bind() {\n\t    // deal with iframes\n\t    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n\t      var self = this;\n\t      this.iframeBind = function () {\n\t        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n\t      };\n\t      this.on('load', this.iframeBind);\n\t    }\n\t  },\n\t\n\t  update: function update(handler) {\n\t    // stub a noop for v-on with no value,\n\t    // e.g. @mousedown.prevent\n\t    if (!this.descriptor.raw) {\n\t      handler = function () {};\n\t    }\n\t\n\t    if (typeof handler !== 'function') {\n\t      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n\t      return;\n\t    }\n\t\n\t    // apply modifiers\n\t    if (this.modifiers.stop) {\n\t      handler = stopFilter(handler);\n\t    }\n\t    if (this.modifiers.prevent) {\n\t      handler = preventFilter(handler);\n\t    }\n\t    if (this.modifiers.self) {\n\t      handler = selfFilter(handler);\n\t    }\n\t    // key filter\n\t    var keys = Object.keys(this.modifiers).filter(function (key) {\n\t      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n\t    });\n\t    if (keys.length) {\n\t      handler = keyFilter(handler, keys);\n\t    }\n\t\n\t    this.reset();\n\t    this.handler = handler;\n\t\n\t    if (this.iframeBind) {\n\t      this.iframeBind();\n\t    } else {\n\t      on(this.el, this.arg, this.handler, this.modifiers.capture);\n\t    }\n\t  },\n\t\n\t  reset: function reset() {\n\t    var el = this.iframeBind ? this.el.contentWindow : this.el;\n\t    if (this.handler) {\n\t      off(el, this.arg, this.handler);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.reset();\n\t  }\n\t};\n\t\n\tvar prefixes = ['-webkit-', '-moz-', '-ms-'];\n\tvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\n\tvar importantRE = /!important;?$/;\n\tvar propCache = Object.create(null);\n\t\n\tvar testEl = null;\n\t\n\tvar style = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (typeof value === 'string') {\n\t      this.el.style.cssText = value;\n\t    } else if (isArray(value)) {\n\t      this.handleObject(value.reduce(extend, {}));\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  handleObject: function handleObject(value) {\n\t    // cache object styles so that only changed props\n\t    // are actually updated.\n\t    var cache = this.cache || (this.cache = {});\n\t    var name, val;\n\t    for (name in cache) {\n\t      if (!(name in value)) {\n\t        this.handleSingle(name, null);\n\t        delete cache[name];\n\t      }\n\t    }\n\t    for (name in value) {\n\t      val = value[name];\n\t      if (val !== cache[name]) {\n\t        cache[name] = val;\n\t        this.handleSingle(name, val);\n\t      }\n\t    }\n\t  },\n\t\n\t  handleSingle: function handleSingle(prop, value) {\n\t    prop = normalize(prop);\n\t    if (!prop) return; // unsupported prop\n\t    // cast possible numbers/booleans into strings\n\t    if (value != null) value += '';\n\t    if (value) {\n\t      var isImportant = importantRE.test(value) ? 'important' : '';\n\t      if (isImportant) {\n\t        /* istanbul ignore if */\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n\t        }\n\t        value = value.replace(importantRE, '').trim();\n\t        this.el.style.setProperty(prop.kebab, value, isImportant);\n\t      } else {\n\t        this.el.style[prop.camel] = value;\n\t      }\n\t    } else {\n\t      this.el.style[prop.camel] = '';\n\t    }\n\t  }\n\t\n\t};\n\t\n\t/**\n\t * Normalize a CSS property name.\n\t * - cache result\n\t * - auto prefix\n\t * - camelCase -> dash-case\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction normalize(prop) {\n\t  if (propCache[prop]) {\n\t    return propCache[prop];\n\t  }\n\t  var res = prefix(prop);\n\t  propCache[prop] = propCache[res] = res;\n\t  return res;\n\t}\n\t\n\t/**\n\t * Auto detect the appropriate prefix for a CSS property.\n\t * https://gist.github.com/paulirish/523692\n\t *\n\t * @param {String} prop\n\t * @return {String}\n\t */\n\t\n\tfunction prefix(prop) {\n\t  prop = hyphenate(prop);\n\t  var camel = camelize(prop);\n\t  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n\t  if (!testEl) {\n\t    testEl = document.createElement('div');\n\t  }\n\t  var i = prefixes.length;\n\t  var prefixed;\n\t  if (camel !== 'filter' && camel in testEl.style) {\n\t    return {\n\t      kebab: prop,\n\t      camel: camel\n\t    };\n\t  }\n\t  while (i--) {\n\t    prefixed = camelPrefixes[i] + upper;\n\t    if (prefixed in testEl.style) {\n\t      return {\n\t        kebab: prefixes[i] + prop,\n\t        camel: prefixed\n\t      };\n\t    }\n\t  }\n\t}\n\t\n\t// xlink\n\tvar xlinkNS = 'http://www.w3.org/1999/xlink';\n\tvar xlinkRE = /^xlink:/;\n\t\n\t// check for attributes that prohibit interpolations\n\tvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n\t// these attributes should also set their corresponding properties\n\t// because they only affect the initial state of the element\n\tvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n\t// these attributes expect enumrated values of \"true\" or \"false\"\n\t// but are not boolean attributes\n\tvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\t\n\t// these attributes should set a hidden property for\n\t// binding v-model to object values\n\tvar modelProps = {\n\t  value: '_value',\n\t  'true-value': '_trueValue',\n\t  'false-value': '_falseValue'\n\t};\n\t\n\tvar bind$1 = {\n\t\n\t  priority: BIND,\n\t\n\t  bind: function bind() {\n\t    var attr = this.arg;\n\t    var tag = this.el.tagName;\n\t    // should be deep watch on object mode\n\t    if (!attr) {\n\t      this.deep = true;\n\t    }\n\t    // handle interpolation bindings\n\t    var descriptor = this.descriptor;\n\t    var tokens = descriptor.interp;\n\t    if (tokens) {\n\t      // handle interpolations with one-time tokens\n\t      if (descriptor.hasOneTime) {\n\t        this.expression = tokensToExp(tokens, this._scope || this.vm);\n\t      }\n\t\n\t      // only allow binding on native attributes\n\t      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n\t        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n\t        this.el.removeAttribute(attr);\n\t        this.invalid = true;\n\t      }\n\t\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        var raw = attr + '=\"' + descriptor.raw + '\": ';\n\t        // warn src\n\t        if (attr === 'src') {\n\t          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n\t        }\n\t\n\t        // warn style\n\t        if (attr === 'style') {\n\t          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n\t        }\n\t      }\n\t    }\n\t  },\n\t\n\t  update: function update(value) {\n\t    if (this.invalid) {\n\t      return;\n\t    }\n\t    var attr = this.arg;\n\t    if (this.arg) {\n\t      this.handleSingle(attr, value);\n\t    } else {\n\t      this.handleObject(value || {});\n\t    }\n\t  },\n\t\n\t  // share object handler with v-bind:class\n\t  handleObject: style.handleObject,\n\t\n\t  handleSingle: function handleSingle(attr, value) {\n\t    var el = this.el;\n\t    var interp = this.descriptor.interp;\n\t    if (this.modifiers.camel) {\n\t      attr = camelize(attr);\n\t    }\n\t    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n\t      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n\t      ? '' : value : value;\n\t\n\t      if (el[attr] !== attrValue) {\n\t        el[attr] = attrValue;\n\t      }\n\t    }\n\t    // set model props\n\t    var modelProp = modelProps[attr];\n\t    if (!interp && modelProp) {\n\t      el[modelProp] = value;\n\t      // update v-model if present\n\t      var model = el.__v_model;\n\t      if (model) {\n\t        model.listener();\n\t      }\n\t    }\n\t    // do not set value attribute for textarea\n\t    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n\t      el.removeAttribute(attr);\n\t      return;\n\t    }\n\t    // update attribute\n\t    if (enumeratedAttrRE.test(attr)) {\n\t      el.setAttribute(attr, value ? 'true' : 'false');\n\t    } else if (value != null && value !== false) {\n\t      if (attr === 'class') {\n\t        // handle edge case #1960:\n\t        // class interpolation should not overwrite Vue transition class\n\t        if (el.__v_trans) {\n\t          value += ' ' + el.__v_trans.id + '-transition';\n\t        }\n\t        setClass(el, value);\n\t      } else if (xlinkRE.test(attr)) {\n\t        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n\t      } else {\n\t        el.setAttribute(attr, value === true ? '' : value);\n\t      }\n\t    } else {\n\t      el.removeAttribute(attr);\n\t    }\n\t  }\n\t};\n\t\n\tvar el = {\n\t\n\t  priority: EL,\n\t\n\t  bind: function bind() {\n\t    /* istanbul ignore if */\n\t    if (!this.arg) {\n\t      return;\n\t    }\n\t    var id = this.id = camelize(this.arg);\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (hasOwn(refs, id)) {\n\t      refs[id] = this.el;\n\t    } else {\n\t      defineReactive(refs, id, this.el);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    var refs = (this._scope || this.vm).$els;\n\t    if (refs[this.id] === this.el) {\n\t      refs[this.id] = null;\n\t    }\n\t  }\n\t};\n\t\n\tvar ref = {\n\t  bind: function bind() {\n\t    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n\t  }\n\t};\n\t\n\tvar cloak = {\n\t  bind: function bind() {\n\t    var el = this.el;\n\t    this.vm.$once('pre-hook:compiled', function () {\n\t      el.removeAttribute('v-cloak');\n\t    });\n\t  }\n\t};\n\t\n\t// must export plain object\n\tvar directives = {\n\t  text: text$1,\n\t  html: html,\n\t  'for': vFor,\n\t  'if': vIf,\n\t  show: show,\n\t  model: model,\n\t  on: on$1,\n\t  bind: bind$1,\n\t  el: el,\n\t  ref: ref,\n\t  cloak: cloak\n\t};\n\t\n\tvar vClass = {\n\t\n\t  deep: true,\n\t\n\t  update: function update(value) {\n\t    if (!value) {\n\t      this.cleanup();\n\t    } else if (typeof value === 'string') {\n\t      this.setClass(value.trim().split(/\\s+/));\n\t    } else {\n\t      this.setClass(normalize$1(value));\n\t    }\n\t  },\n\t\n\t  setClass: function setClass(value) {\n\t    this.cleanup(value);\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var val = value[i];\n\t      if (val) {\n\t        apply(this.el, val, addClass);\n\t      }\n\t    }\n\t    this.prevKeys = value;\n\t  },\n\t\n\t  cleanup: function cleanup(value) {\n\t    var prevKeys = this.prevKeys;\n\t    if (!prevKeys) return;\n\t    var i = prevKeys.length;\n\t    while (i--) {\n\t      var key = prevKeys[i];\n\t      if (!value || value.indexOf(key) < 0) {\n\t        apply(this.el, key, removeClass);\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Normalize objects and arrays (potentially containing objects)\n\t * into array of strings.\n\t *\n\t * @param {Object|Array<String|Object>} value\n\t * @return {Array<String>}\n\t */\n\t\n\tfunction normalize$1(value) {\n\t  var res = [];\n\t  if (isArray(value)) {\n\t    for (var i = 0, l = value.length; i < l; i++) {\n\t      var _key = value[i];\n\t      if (_key) {\n\t        if (typeof _key === 'string') {\n\t          res.push(_key);\n\t        } else {\n\t          for (var k in _key) {\n\t            if (_key[k]) res.push(k);\n\t          }\n\t        }\n\t      }\n\t    }\n\t  } else if (isObject(value)) {\n\t    for (var key in value) {\n\t      if (value[key]) res.push(key);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Add or remove a class/classes on an element\n\t *\n\t * @param {Element} el\n\t * @param {String} key The class name. This may or may not\n\t *                     contain a space character, in such a\n\t *                     case we'll deal with multiple class\n\t *                     names at once.\n\t * @param {Function} fn\n\t */\n\t\n\tfunction apply(el, key, fn) {\n\t  key = key.trim();\n\t  if (key.indexOf(' ') === -1) {\n\t    fn(el, key);\n\t    return;\n\t  }\n\t  // The key contains one or more space characters.\n\t  // Since a class name doesn't accept such characters, we\n\t  // treat it as multiple classes.\n\t  var keys = key.split(/\\s+/);\n\t  for (var i = 0, l = keys.length; i < l; i++) {\n\t    fn(el, keys[i]);\n\t  }\n\t}\n\t\n\tvar component = {\n\t\n\t  priority: COMPONENT,\n\t\n\t  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\t\n\t  /**\n\t   * Setup. Two possible usages:\n\t   *\n\t   * - static:\n\t   *   <comp> or <div v-component=\"comp\">\n\t   *\n\t   * - dynamic:\n\t   *   <component :is=\"view\">\n\t   */\n\t\n\t  bind: function bind() {\n\t    if (!this.el.__vue__) {\n\t      // keep-alive cache\n\t      this.keepAlive = this.params.keepAlive;\n\t      if (this.keepAlive) {\n\t        this.cache = {};\n\t      }\n\t      // check inline-template\n\t      if (this.params.inlineTemplate) {\n\t        // extract inline template as a DocumentFragment\n\t        this.inlineTemplate = extractContent(this.el, true);\n\t      }\n\t      // component resolution related state\n\t      this.pendingComponentCb = this.Component = null;\n\t      // transition related state\n\t      this.pendingRemovals = 0;\n\t      this.pendingRemovalCb = null;\n\t      // create a ref anchor\n\t      this.anchor = createAnchor('v-component');\n\t      replace(this.el, this.anchor);\n\t      // remove is attribute.\n\t      // this is removed during compilation, but because compilation is\n\t      // cached, when the component is used elsewhere this attribute\n\t      // will remain at link time.\n\t      this.el.removeAttribute('is');\n\t      this.el.removeAttribute(':is');\n\t      // remove ref, same as above\n\t      if (this.descriptor.ref) {\n\t        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n\t      }\n\t      // if static, build right now.\n\t      if (this.literal) {\n\t        this.setComponent(this.expression);\n\t      }\n\t    } else {\n\t      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Public update, called by the watcher in the dynamic\n\t   * literal scenario, e.g. <component :is=\"view\">\n\t   */\n\t\n\t  update: function update(value) {\n\t    if (!this.literal) {\n\t      this.setComponent(value);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Switch dynamic components. May resolve the component\n\t   * asynchronously, and perform transition based on\n\t   * specified transition mode. Accepts a few additional\n\t   * arguments specifically for vue-router.\n\t   *\n\t   * The callback is called when the full transition is\n\t   * finished.\n\t   *\n\t   * @param {String} value\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  setComponent: function setComponent(value, cb) {\n\t    this.invalidatePending();\n\t    if (!value) {\n\t      // just remove current\n\t      this.unbuild(true);\n\t      this.remove(this.childVM, cb);\n\t      this.childVM = null;\n\t    } else {\n\t      var self = this;\n\t      this.resolveComponent(value, function () {\n\t        self.mountComponent(cb);\n\t      });\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Resolve the component constructor to use when creating\n\t   * the child vm.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  resolveComponent: function resolveComponent(value, cb) {\n\t    var self = this;\n\t    this.pendingComponentCb = cancellable(function (Component) {\n\t      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n\t      self.Component = Component;\n\t      cb();\n\t    });\n\t    this.vm._resolveComponent(value, this.pendingComponentCb);\n\t  },\n\t\n\t  /**\n\t   * Create a new instance using the current constructor and\n\t   * replace the existing instance. This method doesn't care\n\t   * whether the new component and the old one are actually\n\t   * the same.\n\t   *\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  mountComponent: function mountComponent(cb) {\n\t    // actual mount\n\t    this.unbuild(true);\n\t    var self = this;\n\t    var activateHooks = this.Component.options.activate;\n\t    var cached = this.getCached();\n\t    var newComponent = this.build();\n\t    if (activateHooks && !cached) {\n\t      this.waitingFor = newComponent;\n\t      callActivateHooks(activateHooks, newComponent, function () {\n\t        if (self.waitingFor !== newComponent) {\n\t          return;\n\t        }\n\t        self.waitingFor = null;\n\t        self.transition(newComponent, cb);\n\t      });\n\t    } else {\n\t      // update ref for kept-alive component\n\t      if (cached) {\n\t        newComponent._updateRef();\n\t      }\n\t      this.transition(newComponent, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * When the component changes or unbinds before an async\n\t   * constructor is resolved, we need to invalidate its\n\t   * pending callback.\n\t   */\n\t\n\t  invalidatePending: function invalidatePending() {\n\t    if (this.pendingComponentCb) {\n\t      this.pendingComponentCb.cancel();\n\t      this.pendingComponentCb = null;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Instantiate/insert a new child vm.\n\t   * If keep alive and has cached instance, insert that\n\t   * instance; otherwise build a new one and cache it.\n\t   *\n\t   * @param {Object} [extraOptions]\n\t   * @return {Vue} - the created instance\n\t   */\n\t\n\t  build: function build(extraOptions) {\n\t    var cached = this.getCached();\n\t    if (cached) {\n\t      return cached;\n\t    }\n\t    if (this.Component) {\n\t      // default options\n\t      var options = {\n\t        name: this.ComponentName,\n\t        el: cloneNode(this.el),\n\t        template: this.inlineTemplate,\n\t        // make sure to add the child with correct parent\n\t        // if this is a transcluded component, its parent\n\t        // should be the transclusion host.\n\t        parent: this._host || this.vm,\n\t        // if no inline-template, then the compiled\n\t        // linker can be cached for better performance.\n\t        _linkerCachable: !this.inlineTemplate,\n\t        _ref: this.descriptor.ref,\n\t        _asComponent: true,\n\t        _isRouterView: this._isRouterView,\n\t        // if this is a transcluded component, context\n\t        // will be the common parent vm of this instance\n\t        // and its host.\n\t        _context: this.vm,\n\t        // if this is inside an inline v-for, the scope\n\t        // will be the intermediate scope created for this\n\t        // repeat fragment. this is used for linking props\n\t        // and container directives.\n\t        _scope: this._scope,\n\t        // pass in the owner fragment of this component.\n\t        // this is necessary so that the fragment can keep\n\t        // track of its contained components in order to\n\t        // call attach/detach hooks for them.\n\t        _frag: this._frag\n\t      };\n\t      // extra options\n\t      // in 1.0.0 this is used by vue-router only\n\t      /* istanbul ignore if */\n\t      if (extraOptions) {\n\t        extend(options, extraOptions);\n\t      }\n\t      var child = new this.Component(options);\n\t      if (this.keepAlive) {\n\t        this.cache[this.Component.cid] = child;\n\t      }\n\t      /* istanbul ignore if */\n\t      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n\t        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n\t      }\n\t      return child;\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Try to get a cached instance of the current component.\n\t   *\n\t   * @return {Vue|undefined}\n\t   */\n\t\n\t  getCached: function getCached() {\n\t    return this.keepAlive && this.cache[this.Component.cid];\n\t  },\n\t\n\t  /**\n\t   * Teardown the current child, but defers cleanup so\n\t   * that we can separate the destroy and removal steps.\n\t   *\n\t   * @param {Boolean} defer\n\t   */\n\t\n\t  unbuild: function unbuild(defer) {\n\t    if (this.waitingFor) {\n\t      if (!this.keepAlive) {\n\t        this.waitingFor.$destroy();\n\t      }\n\t      this.waitingFor = null;\n\t    }\n\t    var child = this.childVM;\n\t    if (!child || this.keepAlive) {\n\t      if (child) {\n\t        // remove ref\n\t        child._inactive = true;\n\t        child._updateRef(true);\n\t      }\n\t      return;\n\t    }\n\t    // the sole purpose of `deferCleanup` is so that we can\n\t    // \"deactivate\" the vm right now and perform DOM removal\n\t    // later.\n\t    child.$destroy(false, defer);\n\t  },\n\t\n\t  /**\n\t   * Remove current destroyed child and manually do\n\t   * the cleanup after removal.\n\t   *\n\t   * @param {Function} cb\n\t   */\n\t\n\t  remove: function remove(child, cb) {\n\t    var keepAlive = this.keepAlive;\n\t    if (child) {\n\t      // we may have a component switch when a previous\n\t      // component is still being transitioned out.\n\t      // we want to trigger only one lastest insertion cb\n\t      // when the existing transition finishes. (#1119)\n\t      this.pendingRemovals++;\n\t      this.pendingRemovalCb = cb;\n\t      var self = this;\n\t      child.$remove(function () {\n\t        self.pendingRemovals--;\n\t        if (!keepAlive) child._cleanup();\n\t        if (!self.pendingRemovals && self.pendingRemovalCb) {\n\t          self.pendingRemovalCb();\n\t          self.pendingRemovalCb = null;\n\t        }\n\t      });\n\t    } else if (cb) {\n\t      cb();\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Actually swap the components, depending on the\n\t   * transition mode. Defaults to simultaneous.\n\t   *\n\t   * @param {Vue} target\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  transition: function transition(target, cb) {\n\t    var self = this;\n\t    var current = this.childVM;\n\t    // for devtool inspection\n\t    if (current) current._inactive = true;\n\t    target._inactive = false;\n\t    this.childVM = target;\n\t    switch (self.params.transitionMode) {\n\t      case 'in-out':\n\t        target.$before(self.anchor, function () {\n\t          self.remove(current, cb);\n\t        });\n\t        break;\n\t      case 'out-in':\n\t        self.remove(current, function () {\n\t          target.$before(self.anchor, cb);\n\t        });\n\t        break;\n\t      default:\n\t        self.remove(current);\n\t        target.$before(self.anchor, cb);\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Unbind.\n\t   */\n\t\n\t  unbind: function unbind() {\n\t    this.invalidatePending();\n\t    // Do not defer cleanup when unbinding\n\t    this.unbuild();\n\t    // destroy all keep-alive cached instances\n\t    if (this.cache) {\n\t      for (var key in this.cache) {\n\t        this.cache[key].$destroy();\n\t      }\n\t      this.cache = null;\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Call activate hooks in order (asynchronous)\n\t *\n\t * @param {Array} hooks\n\t * @param {Vue} vm\n\t * @param {Function} cb\n\t */\n\t\n\tfunction callActivateHooks(hooks, vm, cb) {\n\t  var total = hooks.length;\n\t  var called = 0;\n\t  hooks[0].call(vm, next);\n\t  function next() {\n\t    if (++called >= total) {\n\t      cb();\n\t    } else {\n\t      hooks[called].call(vm, next);\n\t    }\n\t  }\n\t}\n\t\n\tvar propBindingModes = config._propBindingModes;\n\tvar empty = {};\n\t\n\t// regexes\n\tvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\n\tvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\t\n\t/**\n\t * Compile props on a root element and return\n\t * a props link function.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Array} propOptions\n\t * @param {Vue} vm\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction compileProps(el, propOptions, vm) {\n\t  var props = [];\n\t  var names = Object.keys(propOptions);\n\t  var i = names.length;\n\t  var options, name, attr, value, path, parsed, prop;\n\t  while (i--) {\n\t    name = names[i];\n\t    options = propOptions[name] || empty;\n\t\n\t    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n\t      warn('Do not use $data as prop.', vm);\n\t      continue;\n\t    }\n\t\n\t    // props could contain dashes, which will be\n\t    // interpreted as minus calculations by the parser\n\t    // so we need to camelize the path here\n\t    path = camelize(name);\n\t    if (!identRE$1.test(path)) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n\t      continue;\n\t    }\n\t\n\t    prop = {\n\t      name: name,\n\t      path: path,\n\t      options: options,\n\t      mode: propBindingModes.ONE_WAY,\n\t      raw: null\n\t    };\n\t\n\t    attr = hyphenate(name);\n\t    // first check dynamic version\n\t    if ((value = getBindAttr(el, attr)) === null) {\n\t      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n\t        prop.mode = propBindingModes.TWO_WAY;\n\t      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n\t        prop.mode = propBindingModes.ONE_TIME;\n\t      }\n\t    }\n\t    if (value !== null) {\n\t      // has dynamic binding!\n\t      prop.raw = value;\n\t      parsed = parseDirective(value);\n\t      value = parsed.expression;\n\t      prop.filters = parsed.filters;\n\t      // check binding type\n\t      if (isLiteral(value) && !parsed.filters) {\n\t        // for expressions containing literal numbers and\n\t        // booleans, there's no need to setup a prop binding,\n\t        // so we can optimize them as a one-time set.\n\t        prop.optimizedLiteral = true;\n\t      } else {\n\t        prop.dynamic = true;\n\t        // check non-settable path for two-way bindings\n\t        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n\t          prop.mode = propBindingModes.ONE_WAY;\n\t          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n\t        }\n\t      }\n\t      prop.parentPath = value;\n\t\n\t      // warn required two-way\n\t      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n\t        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n\t      }\n\t    } else if ((value = getAttr(el, attr)) !== null) {\n\t      // has literal binding!\n\t      prop.raw = value;\n\t    } else if (process.env.NODE_ENV !== 'production') {\n\t      // check possible camelCase prop usage\n\t      var lowerCaseName = path.toLowerCase();\n\t      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n\t      if (value) {\n\t        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n\t      } else if (options.required) {\n\t        // warn missing required\n\t        warn('Missing required prop: ' + name, vm);\n\t      }\n\t    }\n\t    // push prop\n\t    props.push(prop);\n\t  }\n\t  return makePropsLinkFn(props);\n\t}\n\t\n\t/**\n\t * Build a function that applies props to a vm.\n\t *\n\t * @param {Array} props\n\t * @return {Function} propsLinkFn\n\t */\n\t\n\tfunction makePropsLinkFn(props) {\n\t  return function propsLinkFn(vm, scope) {\n\t    // store resolved props info\n\t    vm._props = {};\n\t    var inlineProps = vm.$options.propsData;\n\t    var i = props.length;\n\t    var prop, path, options, value, raw;\n\t    while (i--) {\n\t      prop = props[i];\n\t      raw = prop.raw;\n\t      path = prop.path;\n\t      options = prop.options;\n\t      vm._props[path] = prop;\n\t      if (inlineProps && hasOwn(inlineProps, path)) {\n\t        initProp(vm, prop, inlineProps[path]);\n\t      }if (raw === null) {\n\t        // initialize absent prop\n\t        initProp(vm, prop, undefined);\n\t      } else if (prop.dynamic) {\n\t        // dynamic prop\n\t        if (prop.mode === propBindingModes.ONE_TIME) {\n\t          // one time binding\n\t          value = (scope || vm._context || vm).$get(prop.parentPath);\n\t          initProp(vm, prop, value);\n\t        } else {\n\t          if (vm._context) {\n\t            // dynamic binding\n\t            vm._bindDir({\n\t              name: 'prop',\n\t              def: propDef,\n\t              prop: prop\n\t            }, null, null, scope); // el, host, scope\n\t          } else {\n\t              // root instance\n\t              initProp(vm, prop, vm.$get(prop.parentPath));\n\t            }\n\t        }\n\t      } else if (prop.optimizedLiteral) {\n\t        // optimized literal, cast it and just set once\n\t        var stripped = stripQuotes(raw);\n\t        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n\t        initProp(vm, prop, value);\n\t      } else {\n\t        // string literal, but we need to cater for\n\t        // Boolean props with no value, or with same\n\t        // literal value (e.g. disabled=\"disabled\")\n\t        // see https://github.com/vuejs/vue-loader/issues/182\n\t        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n\t        initProp(vm, prop, value);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Process a prop with a rawValue, applying necessary coersions,\n\t * default values & assertions and call the given callback with\n\t * processed value.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} rawValue\n\t * @param {Function} fn\n\t */\n\t\n\tfunction processPropValue(vm, prop, rawValue, fn) {\n\t  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n\t  var value = rawValue;\n\t  if (value === undefined) {\n\t    value = getPropDefaultValue(vm, prop);\n\t  }\n\t  value = coerceProp(prop, value, vm);\n\t  var coerced = value !== rawValue;\n\t  if (!assertProp(prop, value, vm)) {\n\t    value = undefined;\n\t  }\n\t  if (isSimple && !coerced) {\n\t    withoutConversion(function () {\n\t      fn(value);\n\t    });\n\t  } else {\n\t    fn(value);\n\t  }\n\t}\n\t\n\t/**\n\t * Set a prop's initial value on a vm and its data object.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction initProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    defineReactive(vm, prop.path, value);\n\t  });\n\t}\n\t\n\t/**\n\t * Update a prop's value on a vm.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @param {*} value\n\t */\n\t\n\tfunction updateProp(vm, prop, value) {\n\t  processPropValue(vm, prop, value, function (value) {\n\t    vm[prop.path] = value;\n\t  });\n\t}\n\t\n\t/**\n\t * Get the default value of a prop.\n\t *\n\t * @param {Vue} vm\n\t * @param {Object} prop\n\t * @return {*}\n\t */\n\t\n\tfunction getPropDefaultValue(vm, prop) {\n\t  // no default, return undefined\n\t  var options = prop.options;\n\t  if (!hasOwn(options, 'default')) {\n\t    // absent boolean value defaults to false\n\t    return options.type === Boolean ? false : undefined;\n\t  }\n\t  var def = options['default'];\n\t  // warn against non-factory defaults for Object & Array\n\t  if (isObject(def)) {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n\t  }\n\t  // call factory function for non-Function types\n\t  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n\t}\n\t\n\t/**\n\t * Assert whether a prop is valid.\n\t *\n\t * @param {Object} prop\n\t * @param {*} value\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction assertProp(prop, value, vm) {\n\t  if (!prop.options.required && ( // non-required\n\t  prop.raw === null || // abscent\n\t  value == null) // null or undefined\n\t  ) {\n\t      return true;\n\t    }\n\t  var options = prop.options;\n\t  var type = options.type;\n\t  var valid = !type;\n\t  var expectedTypes = [];\n\t  if (type) {\n\t    if (!isArray(type)) {\n\t      type = [type];\n\t    }\n\t    for (var i = 0; i < type.length && !valid; i++) {\n\t      var assertedType = assertType(value, type[i]);\n\t      expectedTypes.push(assertedType.expectedType);\n\t      valid = assertedType.valid;\n\t    }\n\t  }\n\t  if (!valid) {\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n\t    }\n\t    return false;\n\t  }\n\t  var validator = options.validator;\n\t  if (validator) {\n\t    if (!validator(value)) {\n\t      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n\t      return false;\n\t    }\n\t  }\n\t  return true;\n\t}\n\t\n\t/**\n\t * Force parsing value with coerce option.\n\t *\n\t * @param {*} value\n\t * @param {Object} options\n\t * @return {*}\n\t */\n\t\n\tfunction coerceProp(prop, value, vm) {\n\t  var coerce = prop.options.coerce;\n\t  if (!coerce) {\n\t    return value;\n\t  }\n\t  if (typeof coerce === 'function') {\n\t    return coerce(value);\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n\t    return value;\n\t  }\n\t}\n\t\n\t/**\n\t * Assert the type of a value\n\t *\n\t * @param {*} value\n\t * @param {Function} type\n\t * @return {Object}\n\t */\n\t\n\tfunction assertType(value, type) {\n\t  var valid;\n\t  var expectedType;\n\t  if (type === String) {\n\t    expectedType = 'string';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Number) {\n\t    expectedType = 'number';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Boolean) {\n\t    expectedType = 'boolean';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Function) {\n\t    expectedType = 'function';\n\t    valid = typeof value === expectedType;\n\t  } else if (type === Object) {\n\t    expectedType = 'object';\n\t    valid = isPlainObject(value);\n\t  } else if (type === Array) {\n\t    expectedType = 'array';\n\t    valid = isArray(value);\n\t  } else {\n\t    valid = value instanceof type;\n\t  }\n\t  return {\n\t    valid: valid,\n\t    expectedType: expectedType\n\t  };\n\t}\n\t\n\t/**\n\t * Format type for output\n\t *\n\t * @param {String} type\n\t * @return {String}\n\t */\n\t\n\tfunction formatType(type) {\n\t  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n\t}\n\t\n\t/**\n\t * Format value\n\t *\n\t * @param {*} value\n\t * @return {String}\n\t */\n\t\n\tfunction formatValue(val) {\n\t  return Object.prototype.toString.call(val).slice(8, -1);\n\t}\n\t\n\tvar bindingModes = config._propBindingModes;\n\t\n\tvar propDef = {\n\t\n\t  bind: function bind() {\n\t    var child = this.vm;\n\t    var parent = child._context;\n\t    // passed in from compiler directly\n\t    var prop = this.descriptor.prop;\n\t    var childKey = prop.path;\n\t    var parentKey = prop.parentPath;\n\t    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\t\n\t    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n\t      updateProp(child, prop, val);\n\t    }, {\n\t      twoWay: twoWay,\n\t      filters: prop.filters,\n\t      // important: props need to be observed on the\n\t      // v-for scope if present\n\t      scope: this._scope\n\t    });\n\t\n\t    // set the child initial value.\n\t    initProp(child, prop, parentWatcher.value);\n\t\n\t    // setup two-way binding\n\t    if (twoWay) {\n\t      // important: defer the child watcher creation until\n\t      // the created hook (after data observation)\n\t      var self = this;\n\t      child.$once('pre-hook:created', function () {\n\t        self.childWatcher = new Watcher(child, childKey, function (val) {\n\t          parentWatcher.set(val);\n\t        }, {\n\t          // ensure sync upward before parent sync down.\n\t          // this is necessary in cases e.g. the child\n\t          // mutates a prop array, then replaces it. (#1683)\n\t          sync: true\n\t        });\n\t      });\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    this.parentWatcher.teardown();\n\t    if (this.childWatcher) {\n\t      this.childWatcher.teardown();\n\t    }\n\t  }\n\t};\n\t\n\tvar queue$1 = [];\n\tvar queued = false;\n\t\n\t/**\n\t * Push a job into the queue.\n\t *\n\t * @param {Function} job\n\t */\n\t\n\tfunction pushJob(job) {\n\t  queue$1.push(job);\n\t  if (!queued) {\n\t    queued = true;\n\t    nextTick(flush);\n\t  }\n\t}\n\t\n\t/**\n\t * Flush the queue, and do one forced reflow before\n\t * triggering transitions.\n\t */\n\t\n\tfunction flush() {\n\t  // Force layout\n\t  var f = document.documentElement.offsetHeight;\n\t  for (var i = 0; i < queue$1.length; i++) {\n\t    queue$1[i]();\n\t  }\n\t  queue$1 = [];\n\t  queued = false;\n\t  // dummy return, so js linters don't complain about\n\t  // unused variable f\n\t  return f;\n\t}\n\t\n\tvar TYPE_TRANSITION = 'transition';\n\tvar TYPE_ANIMATION = 'animation';\n\tvar transDurationProp = transitionProp + 'Duration';\n\tvar animDurationProp = animationProp + 'Duration';\n\t\n\t/**\n\t * If a just-entered element is applied the\n\t * leave class while its enter transition hasn't started yet,\n\t * and the transitioned property has the same value for both\n\t * enter/leave, then the leave transition will be skipped and\n\t * the transitionend event never fires. This function ensures\n\t * its callback to be called after a transition has started\n\t * by waiting for double raf.\n\t *\n\t * It falls back to setTimeout on devices that support CSS\n\t * transitions but not raf (e.g. Android 4.2 browser) - since\n\t * these environments are usually slow, we are giving it a\n\t * relatively large timeout.\n\t */\n\t\n\tvar raf = inBrowser && window.requestAnimationFrame;\n\tvar waitForTransitionStart = raf\n\t/* istanbul ignore next */\n\t? function (fn) {\n\t  raf(function () {\n\t    raf(fn);\n\t  });\n\t} : function (fn) {\n\t  setTimeout(fn, 50);\n\t};\n\t\n\t/**\n\t * A Transition object that encapsulates the state and logic\n\t * of the transition.\n\t *\n\t * @param {Element} el\n\t * @param {String} id\n\t * @param {Object} hooks\n\t * @param {Vue} vm\n\t */\n\tfunction Transition(el, id, hooks, vm) {\n\t  this.id = id;\n\t  this.el = el;\n\t  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n\t  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n\t  this.hooks = hooks;\n\t  this.vm = vm;\n\t  // async state\n\t  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n\t  this.justEntered = false;\n\t  this.entered = this.left = false;\n\t  this.typeCache = {};\n\t  // check css transition type\n\t  this.type = hooks && hooks.type;\n\t  /* istanbul ignore if */\n\t  if (process.env.NODE_ENV !== 'production') {\n\t    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n\t      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n\t    }\n\t  }\n\t  // bind\n\t  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n\t    self[m] = bind(self[m], self);\n\t  });\n\t}\n\t\n\tvar p$1 = Transition.prototype;\n\t\n\t/**\n\t * Start an entering transition.\n\t *\n\t * 1. enter transition triggered\n\t * 2. call beforeEnter hook\n\t * 3. add enter class\n\t * 4. insert/show element\n\t * 5. call enter hook (with possible explicit js callback)\n\t * 6. reflow\n\t * 7. based on transition type:\n\t *    - transition:\n\t *        remove class now, wait for transitionend,\n\t *        then done if there's no explicit js callback.\n\t *    - animation:\n\t *        wait for animationend, remove class,\n\t *        then done if there's no explicit js callback.\n\t *    - no css transition:\n\t *        done now if there's no explicit js callback.\n\t * 8. wait for either done or js callback, then call\n\t *    afterEnter hook.\n\t *\n\t * @param {Function} op - insert/show the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.enter = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeEnter');\n\t  this.cb = cb;\n\t  addClass(this.el, this.enterClass);\n\t  op();\n\t  this.entered = false;\n\t  this.callHookWithCb('enter');\n\t  if (this.entered) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.enterCancelled;\n\t  pushJob(this.enterNextTick);\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of an entering transition, which is\n\t * to be pushed into a queue and executed after a reflow so\n\t * that removing the class can trigger a CSS transition.\n\t */\n\t\n\tp$1.enterNextTick = function () {\n\t  var _this = this;\n\t\n\t  // prevent transition skipping\n\t  this.justEntered = true;\n\t  waitForTransitionStart(function () {\n\t    _this.justEntered = false;\n\t  });\n\t  var enterDone = this.enterDone;\n\t  var type = this.getCssTransitionType(this.enterClass);\n\t  if (!this.pendingJsCb) {\n\t    if (type === TYPE_TRANSITION) {\n\t      // trigger transition by removing enter class now\n\t      removeClass(this.el, this.enterClass);\n\t      this.setupCssCb(transitionEndEvent, enterDone);\n\t    } else if (type === TYPE_ANIMATION) {\n\t      this.setupCssCb(animationEndEvent, enterDone);\n\t    } else {\n\t      enterDone();\n\t    }\n\t  } else if (type === TYPE_TRANSITION) {\n\t    removeClass(this.el, this.enterClass);\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of an entering transition.\n\t */\n\t\n\tp$1.enterDone = function () {\n\t  this.entered = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  removeClass(this.el, this.enterClass);\n\t  this.callHook('afterEnter');\n\t  if (this.cb) this.cb();\n\t};\n\t\n\t/**\n\t * Start a leaving transition.\n\t *\n\t * 1. leave transition triggered.\n\t * 2. call beforeLeave hook\n\t * 3. add leave class (trigger css transition)\n\t * 4. call leave hook (with possible explicit js callback)\n\t * 5. reflow if no explicit js callback is provided\n\t * 6. based on transition type:\n\t *    - transition or animation:\n\t *        wait for end event, remove class, then done if\n\t *        there's no explicit js callback.\n\t *    - no css transition:\n\t *        done if there's no explicit js callback.\n\t * 7. wait for either done or js callback, then call\n\t *    afterLeave hook.\n\t *\n\t * @param {Function} op - remove/hide the element\n\t * @param {Function} [cb]\n\t */\n\t\n\tp$1.leave = function (op, cb) {\n\t  this.cancelPending();\n\t  this.callHook('beforeLeave');\n\t  this.op = op;\n\t  this.cb = cb;\n\t  addClass(this.el, this.leaveClass);\n\t  this.left = false;\n\t  this.callHookWithCb('leave');\n\t  if (this.left) {\n\t    return; // user called done synchronously.\n\t  }\n\t  this.cancel = this.hooks && this.hooks.leaveCancelled;\n\t  // only need to handle leaveDone if\n\t  // 1. the transition is already done (synchronously called\n\t  //    by the user, which causes this.op set to null)\n\t  // 2. there's no explicit js callback\n\t  if (this.op && !this.pendingJsCb) {\n\t    // if a CSS transition leaves immediately after enter,\n\t    // the transitionend event never fires. therefore we\n\t    // detect such cases and end the leave immediately.\n\t    if (this.justEntered) {\n\t      this.leaveDone();\n\t    } else {\n\t      pushJob(this.leaveNextTick);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * The \"nextTick\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveNextTick = function () {\n\t  var type = this.getCssTransitionType(this.leaveClass);\n\t  if (type) {\n\t    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n\t    this.setupCssCb(event, this.leaveDone);\n\t  } else {\n\t    this.leaveDone();\n\t  }\n\t};\n\t\n\t/**\n\t * The \"cleanup\" phase of a leaving transition.\n\t */\n\t\n\tp$1.leaveDone = function () {\n\t  this.left = true;\n\t  this.cancel = this.pendingJsCb = null;\n\t  this.op();\n\t  removeClass(this.el, this.leaveClass);\n\t  this.callHook('afterLeave');\n\t  if (this.cb) this.cb();\n\t  this.op = null;\n\t};\n\t\n\t/**\n\t * Cancel any pending callbacks from a previously running\n\t * but not finished transition.\n\t */\n\t\n\tp$1.cancelPending = function () {\n\t  this.op = this.cb = null;\n\t  var hasPending = false;\n\t  if (this.pendingCssCb) {\n\t    hasPending = true;\n\t    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n\t    this.pendingCssEvent = this.pendingCssCb = null;\n\t  }\n\t  if (this.pendingJsCb) {\n\t    hasPending = true;\n\t    this.pendingJsCb.cancel();\n\t    this.pendingJsCb = null;\n\t  }\n\t  if (hasPending) {\n\t    removeClass(this.el, this.enterClass);\n\t    removeClass(this.el, this.leaveClass);\n\t  }\n\t  if (this.cancel) {\n\t    this.cancel.call(this.vm, this.el);\n\t    this.cancel = null;\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided synchronous hook function.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHook = function (type) {\n\t  if (this.hooks && this.hooks[type]) {\n\t    this.hooks[type].call(this.vm, this.el);\n\t  }\n\t};\n\t\n\t/**\n\t * Call a user-provided, potentially-async hook function.\n\t * We check for the length of arguments to see if the hook\n\t * expects a `done` callback. If true, the transition's end\n\t * will be determined by when the user calls that callback;\n\t * otherwise, the end is determined by the CSS transition or\n\t * animation.\n\t *\n\t * @param {String} type\n\t */\n\t\n\tp$1.callHookWithCb = function (type) {\n\t  var hook = this.hooks && this.hooks[type];\n\t  if (hook) {\n\t    if (hook.length > 1) {\n\t      this.pendingJsCb = cancellable(this[type + 'Done']);\n\t    }\n\t    hook.call(this.vm, this.el, this.pendingJsCb);\n\t  }\n\t};\n\t\n\t/**\n\t * Get an element's transition type based on the\n\t * calculated styles.\n\t *\n\t * @param {String} className\n\t * @return {Number}\n\t */\n\t\n\tp$1.getCssTransitionType = function (className) {\n\t  /* istanbul ignore if */\n\t  if (!transitionEndEvent ||\n\t  // skip CSS transitions if page is not visible -\n\t  // this solves the issue of transitionend events not\n\t  // firing until the page is visible again.\n\t  // pageVisibility API is supported in IE10+, same as\n\t  // CSS transitions.\n\t  document.hidden ||\n\t  // explicit js-only transition\n\t  this.hooks && this.hooks.css === false ||\n\t  // element is hidden\n\t  isHidden(this.el)) {\n\t    return;\n\t  }\n\t  var type = this.type || this.typeCache[className];\n\t  if (type) return type;\n\t  var inlineStyles = this.el.style;\n\t  var computedStyles = window.getComputedStyle(this.el);\n\t  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n\t  if (transDuration && transDuration !== '0s') {\n\t    type = TYPE_TRANSITION;\n\t  } else {\n\t    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n\t    if (animDuration && animDuration !== '0s') {\n\t      type = TYPE_ANIMATION;\n\t    }\n\t  }\n\t  if (type) {\n\t    this.typeCache[className] = type;\n\t  }\n\t  return type;\n\t};\n\t\n\t/**\n\t * Setup a CSS transitionend/animationend callback.\n\t *\n\t * @param {String} event\n\t * @param {Function} cb\n\t */\n\t\n\tp$1.setupCssCb = function (event, cb) {\n\t  this.pendingCssEvent = event;\n\t  var self = this;\n\t  var el = this.el;\n\t  var onEnd = this.pendingCssCb = function (e) {\n\t    if (e.target === el) {\n\t      off(el, event, onEnd);\n\t      self.pendingCssEvent = self.pendingCssCb = null;\n\t      if (!self.pendingJsCb && cb) {\n\t        cb();\n\t      }\n\t    }\n\t  };\n\t  on(el, event, onEnd);\n\t};\n\t\n\t/**\n\t * Check if an element is hidden - in that case we can just\n\t * skip the transition alltogether.\n\t *\n\t * @param {Element} el\n\t * @return {Boolean}\n\t */\n\t\n\tfunction isHidden(el) {\n\t  if (/svg$/.test(el.namespaceURI)) {\n\t    // SVG elements do not have offset(Width|Height)\n\t    // so we need to check the client rect\n\t    var rect = el.getBoundingClientRect();\n\t    return !(rect.width || rect.height);\n\t  } else {\n\t    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n\t  }\n\t}\n\t\n\tvar transition$1 = {\n\t\n\t  priority: TRANSITION,\n\t\n\t  update: function update(id, oldId) {\n\t    var el = this.el;\n\t    // resolve on owner vm\n\t    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n\t    id = id || 'v';\n\t    oldId = oldId || 'v';\n\t    el.__v_trans = new Transition(el, id, hooks, this.vm);\n\t    removeClass(el, oldId + '-transition');\n\t    addClass(el, id + '-transition');\n\t  }\n\t};\n\t\n\tvar internalDirectives = {\n\t  style: style,\n\t  'class': vClass,\n\t  component: component,\n\t  prop: propDef,\n\t  transition: transition$1\n\t};\n\t\n\t// special binding prefixes\n\tvar bindRE = /^v-bind:|^:/;\n\tvar onRE = /^v-on:|^@/;\n\tvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\n\tvar modifierRE = /\\.[^\\.]+/g;\n\tvar transitionRE = /^(v-bind:|:)?transition$/;\n\t\n\t// default directive priority\n\tvar DEFAULT_PRIORITY = 1000;\n\tvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\t\n\t/**\n\t * Compile a template and return a reusable composite link\n\t * function, which recursively contains more link functions\n\t * inside. This top level compile function would normally\n\t * be called on instance root nodes, but can also be used\n\t * for partial compilation if the partial argument is true.\n\t *\n\t * The returned composite link function, when called, will\n\t * return an unlink function that tearsdown all directives\n\t * created during the linking phase.\n\t *\n\t * @param {Element|DocumentFragment} el\n\t * @param {Object} options\n\t * @param {Boolean} partial\n\t * @return {Function}\n\t */\n\t\n\tfunction compile(el, options, partial) {\n\t  // link function for the node itself.\n\t  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n\t  // link function for the childNodes\n\t  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\t\n\t  /**\n\t   * A composite linker function to be called on a already\n\t   * compiled piece of DOM, which instantiates all directive\n\t   * instances.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host] - host vm of transcluded content\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - link context fragment\n\t   * @return {Function|undefined}\n\t   */\n\t\n\t  return function compositeLinkFn(vm, el, host, scope, frag) {\n\t    // cache childNodes before linking parent, fix #657\n\t    var childNodes = toArray(el.childNodes);\n\t    // link\n\t    var dirs = linkAndCapture(function compositeLinkCapturer() {\n\t      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n\t      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n\t    }, vm);\n\t    return makeUnlinkFn(vm, dirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Apply a linker to a vm/element pair and capture the\n\t * directives created during the process.\n\t *\n\t * @param {Function} linker\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction linkAndCapture(linker, vm) {\n\t  /* istanbul ignore if */\n\t  if (process.env.NODE_ENV === 'production') {\n\t    // reset directives before every capture in production\n\t    // mode, so that when unlinking we don't need to splice\n\t    // them out (which turns out to be a perf hit).\n\t    // they are kept in development mode because they are\n\t    // useful for Vue's own tests.\n\t    vm._directives = [];\n\t  }\n\t  var originalDirCount = vm._directives.length;\n\t  linker();\n\t  var dirs = vm._directives.slice(originalDirCount);\n\t  dirs.sort(directiveComparator);\n\t  for (var i = 0, l = dirs.length; i < l; i++) {\n\t    dirs[i]._bind();\n\t  }\n\t  return dirs;\n\t}\n\t\n\t/**\n\t * Directive priority sort comparator\n\t *\n\t * @param {Object} a\n\t * @param {Object} b\n\t */\n\t\n\tfunction directiveComparator(a, b) {\n\t  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n\t  return a > b ? -1 : a === b ? 0 : 1;\n\t}\n\t\n\t/**\n\t * Linker functions return an unlink function that\n\t * tearsdown all directives instances generated during\n\t * the process.\n\t *\n\t * We create unlink functions with only the necessary\n\t * information to avoid retaining additional closures.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Vue} [context]\n\t * @param {Array} [contextDirs]\n\t * @return {Function}\n\t */\n\t\n\tfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n\t  function unlink(destroying) {\n\t    teardownDirs(vm, dirs, destroying);\n\t    if (context && contextDirs) {\n\t      teardownDirs(context, contextDirs);\n\t    }\n\t  }\n\t  // expose linked directives\n\t  unlink.dirs = dirs;\n\t  return unlink;\n\t}\n\t\n\t/**\n\t * Teardown partial linked directives.\n\t *\n\t * @param {Vue} vm\n\t * @param {Array} dirs\n\t * @param {Boolean} destroying\n\t */\n\t\n\tfunction teardownDirs(vm, dirs, destroying) {\n\t  var i = dirs.length;\n\t  while (i--) {\n\t    dirs[i]._teardown();\n\t    if (process.env.NODE_ENV !== 'production' && !destroying) {\n\t      vm._directives.$remove(dirs[i]);\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Compile link props on an instance.\n\t *\n\t * @param {Vue} vm\n\t * @param {Element} el\n\t * @param {Object} props\n\t * @param {Object} [scope]\n\t * @return {Function}\n\t */\n\t\n\tfunction compileAndLinkProps(vm, el, props, scope) {\n\t  var propsLinkFn = compileProps(el, props, vm);\n\t  var propDirs = linkAndCapture(function () {\n\t    propsLinkFn(vm, scope);\n\t  }, vm);\n\t  return makeUnlinkFn(vm, propDirs);\n\t}\n\t\n\t/**\n\t * Compile the root element of an instance.\n\t *\n\t * 1. attrs on context container (context scope)\n\t * 2. attrs on the component template root node, if\n\t *    replace:true (child scope)\n\t *\n\t * If this is a fragment instance, we only need to compile 1.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @param {Object} contextOptions\n\t * @return {Function}\n\t */\n\t\n\tfunction compileRoot(el, options, contextOptions) {\n\t  var containerAttrs = options._containerAttrs;\n\t  var replacerAttrs = options._replacerAttrs;\n\t  var contextLinkFn, replacerLinkFn;\n\t\n\t  // only need to compile other attributes for\n\t  // non-fragment instances\n\t  if (el.nodeType !== 11) {\n\t    // for components, container and replacer need to be\n\t    // compiled separately and linked in different scopes.\n\t    if (options._asComponent) {\n\t      // 2. container attributes\n\t      if (containerAttrs && contextOptions) {\n\t        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n\t      }\n\t      if (replacerAttrs) {\n\t        // 3. replacer attributes\n\t        replacerLinkFn = compileDirectives(replacerAttrs, options);\n\t      }\n\t    } else {\n\t      // non-component, just compile as a normal element.\n\t      replacerLinkFn = compileDirectives(el.attributes, options);\n\t    }\n\t  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n\t    // warn container directives for fragment instances\n\t    var names = containerAttrs.filter(function (attr) {\n\t      // allow vue-loader/vueify scoped css attributes\n\t      return attr.name.indexOf('_v-') < 0 &&\n\t      // allow event listeners\n\t      !onRE.test(attr.name) &&\n\t      // allow slots\n\t      attr.name !== 'slot';\n\t    }).map(function (attr) {\n\t      return '\"' + attr.name + '\"';\n\t    });\n\t    if (names.length) {\n\t      var plural = names.length > 1;\n\t      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n\t    }\n\t  }\n\t\n\t  options._containerAttrs = options._replacerAttrs = null;\n\t  return function rootLinkFn(vm, el, scope) {\n\t    // link context scope dirs\n\t    var context = vm._context;\n\t    var contextDirs;\n\t    if (context && contextLinkFn) {\n\t      contextDirs = linkAndCapture(function () {\n\t        contextLinkFn(context, el, null, scope);\n\t      }, context);\n\t    }\n\t\n\t    // link self\n\t    var selfDirs = linkAndCapture(function () {\n\t      if (replacerLinkFn) replacerLinkFn(vm, el);\n\t    }, vm);\n\t\n\t    // return the unlink function that tearsdown context\n\t    // container directives.\n\t    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node and return a nodeLinkFn based on the\n\t * node type.\n\t *\n\t * @param {Node} node\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileNode(node, options) {\n\t  var type = node.nodeType;\n\t  if (type === 1 && !isScript(node)) {\n\t    return compileElement(node, options);\n\t  } else if (type === 3 && node.data.trim()) {\n\t    return compileTextNode(node, options);\n\t  } else {\n\t    return null;\n\t  }\n\t}\n\t\n\t/**\n\t * Compile an element and return a nodeLinkFn.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|null}\n\t */\n\t\n\tfunction compileElement(el, options) {\n\t  // preprocess textareas.\n\t  // textarea treats its text content as the initial value.\n\t  // just bind it as an attr directive for value.\n\t  if (el.tagName === 'TEXTAREA') {\n\t    var tokens = parseText(el.value);\n\t    if (tokens) {\n\t      el.setAttribute(':value', tokensToExp(tokens));\n\t      el.value = '';\n\t    }\n\t  }\n\t  var linkFn;\n\t  var hasAttrs = el.hasAttributes();\n\t  var attrs = hasAttrs && toArray(el.attributes);\n\t  // check terminal directives (for & if)\n\t  if (hasAttrs) {\n\t    linkFn = checkTerminalDirectives(el, attrs, options);\n\t  }\n\t  // check element directives\n\t  if (!linkFn) {\n\t    linkFn = checkElementDirectives(el, options);\n\t  }\n\t  // check component\n\t  if (!linkFn) {\n\t    linkFn = checkComponent(el, options);\n\t  }\n\t  // normal directives\n\t  if (!linkFn && hasAttrs) {\n\t    linkFn = compileDirectives(attrs, options);\n\t  }\n\t  return linkFn;\n\t}\n\t\n\t/**\n\t * Compile a textNode and return a nodeLinkFn.\n\t *\n\t * @param {TextNode} node\n\t * @param {Object} options\n\t * @return {Function|null} textNodeLinkFn\n\t */\n\t\n\tfunction compileTextNode(node, options) {\n\t  // skip marked text nodes\n\t  if (node._skip) {\n\t    return removeText;\n\t  }\n\t\n\t  var tokens = parseText(node.wholeText);\n\t  if (!tokens) {\n\t    return null;\n\t  }\n\t\n\t  // mark adjacent text nodes as skipped,\n\t  // because we are using node.wholeText to compile\n\t  // all adjacent text nodes together. This fixes\n\t  // issues in IE where sometimes it splits up a single\n\t  // text node into multiple ones.\n\t  var next = node.nextSibling;\n\t  while (next && next.nodeType === 3) {\n\t    next._skip = true;\n\t    next = next.nextSibling;\n\t  }\n\t\n\t  var frag = document.createDocumentFragment();\n\t  var el, token;\n\t  for (var i = 0, l = tokens.length; i < l; i++) {\n\t    token = tokens[i];\n\t    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n\t    frag.appendChild(el);\n\t  }\n\t  return makeTextNodeLinkFn(tokens, frag, options);\n\t}\n\t\n\t/**\n\t * Linker for an skipped text node.\n\t *\n\t * @param {Vue} vm\n\t * @param {Text} node\n\t */\n\t\n\tfunction removeText(vm, node) {\n\t  remove(node);\n\t}\n\t\n\t/**\n\t * Process a single text token.\n\t *\n\t * @param {Object} token\n\t * @param {Object} options\n\t * @return {Node}\n\t */\n\t\n\tfunction processTextToken(token, options) {\n\t  var el;\n\t  if (token.oneTime) {\n\t    el = document.createTextNode(token.value);\n\t  } else {\n\t    if (token.html) {\n\t      el = document.createComment('v-html');\n\t      setTokenType('html');\n\t    } else {\n\t      // IE will clean up empty textNodes during\n\t      // frag.cloneNode(true), so we have to give it\n\t      // something here...\n\t      el = document.createTextNode(' ');\n\t      setTokenType('text');\n\t    }\n\t  }\n\t  function setTokenType(type) {\n\t    if (token.descriptor) return;\n\t    var parsed = parseDirective(token.value);\n\t    token.descriptor = {\n\t      name: type,\n\t      def: directives[type],\n\t      expression: parsed.expression,\n\t      filters: parsed.filters\n\t    };\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Build a function that processes a textNode.\n\t *\n\t * @param {Array<Object>} tokens\n\t * @param {DocumentFragment} frag\n\t */\n\t\n\tfunction makeTextNodeLinkFn(tokens, frag) {\n\t  return function textNodeLinkFn(vm, el, host, scope) {\n\t    var fragClone = frag.cloneNode(true);\n\t    var childNodes = toArray(fragClone.childNodes);\n\t    var token, value, node;\n\t    for (var i = 0, l = tokens.length; i < l; i++) {\n\t      token = tokens[i];\n\t      value = token.value;\n\t      if (token.tag) {\n\t        node = childNodes[i];\n\t        if (token.oneTime) {\n\t          value = (scope || vm).$eval(value);\n\t          if (token.html) {\n\t            replace(node, parseTemplate(value, true));\n\t          } else {\n\t            node.data = _toString(value);\n\t          }\n\t        } else {\n\t          vm._bindDir(token.descriptor, node, host, scope);\n\t        }\n\t      }\n\t    }\n\t    replace(el, fragClone);\n\t  };\n\t}\n\t\n\t/**\n\t * Compile a node list and return a childLinkFn.\n\t *\n\t * @param {NodeList} nodeList\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction compileNodeList(nodeList, options) {\n\t  var linkFns = [];\n\t  var nodeLinkFn, childLinkFn, node;\n\t  for (var i = 0, l = nodeList.length; i < l; i++) {\n\t    node = nodeList[i];\n\t    nodeLinkFn = compileNode(node, options);\n\t    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n\t    linkFns.push(nodeLinkFn, childLinkFn);\n\t  }\n\t  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n\t}\n\t\n\t/**\n\t * Make a child link function for a node's childNodes.\n\t *\n\t * @param {Array<Function>} linkFns\n\t * @return {Function} childLinkFn\n\t */\n\t\n\tfunction makeChildLinkFn(linkFns) {\n\t  return function childLinkFn(vm, nodes, host, scope, frag) {\n\t    var node, nodeLinkFn, childrenLinkFn;\n\t    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n\t      node = nodes[n];\n\t      nodeLinkFn = linkFns[i++];\n\t      childrenLinkFn = linkFns[i++];\n\t      // cache childNodes before linking parent, fix #657\n\t      var childNodes = toArray(node.childNodes);\n\t      if (nodeLinkFn) {\n\t        nodeLinkFn(vm, node, host, scope, frag);\n\t      }\n\t      if (childrenLinkFn) {\n\t        childrenLinkFn(vm, childNodes, host, scope, frag);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check for element directives (custom elements that should\n\t * be resovled as terminal directives).\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t */\n\t\n\tfunction checkElementDirectives(el, options) {\n\t  var tag = el.tagName.toLowerCase();\n\t  if (commonTagRE.test(tag)) {\n\t    return;\n\t  }\n\t  var def = resolveAsset(options, 'elementDirectives', tag);\n\t  if (def) {\n\t    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n\t  }\n\t}\n\t\n\t/**\n\t * Check if an element is a component. If yes, return\n\t * a component link function.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Function|undefined}\n\t */\n\t\n\tfunction checkComponent(el, options) {\n\t  var component = checkComponentAttr(el, options);\n\t  if (component) {\n\t    var ref = findRef(el);\n\t    var descriptor = {\n\t      name: 'component',\n\t      ref: ref,\n\t      expression: component.id,\n\t      def: internalDirectives.component,\n\t      modifiers: {\n\t        literal: !component.dynamic\n\t      }\n\t    };\n\t    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n\t      if (ref) {\n\t        defineReactive((scope || vm).$refs, ref, null);\n\t      }\n\t      vm._bindDir(descriptor, el, host, scope, frag);\n\t    };\n\t    componentLinkFn.terminal = true;\n\t    return componentLinkFn;\n\t  }\n\t}\n\t\n\t/**\n\t * Check an element for terminal directives in fixed order.\n\t * If it finds one, return a terminal link function.\n\t *\n\t * @param {Element} el\n\t * @param {Array} attrs\n\t * @param {Object} options\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction checkTerminalDirectives(el, attrs, options) {\n\t  // skip v-pre\n\t  if (getAttr(el, 'v-pre') !== null) {\n\t    return skip;\n\t  }\n\t  // skip v-else block, but only if following v-if\n\t  if (el.hasAttribute('v-else')) {\n\t    var prev = el.previousElementSibling;\n\t    if (prev && prev.hasAttribute('v-if')) {\n\t      return skip;\n\t    }\n\t  }\n\t\n\t  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n\t  for (var i = 0, j = attrs.length; i < j; i++) {\n\t    attr = attrs[i];\n\t    name = attr.name.replace(modifierRE, '');\n\t    if (matched = name.match(dirAttrRE)) {\n\t      def = resolveAsset(options, 'directives', matched[1]);\n\t      if (def && def.terminal) {\n\t        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n\t          termDef = def;\n\t          rawName = attr.name;\n\t          modifiers = parseModifiers(attr.name);\n\t          value = attr.value;\n\t          dirName = matched[1];\n\t          arg = matched[2];\n\t        }\n\t      }\n\t    }\n\t  }\n\t\n\t  if (termDef) {\n\t    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n\t  }\n\t}\n\t\n\tfunction skip() {}\n\tskip.terminal = true;\n\t\n\t/**\n\t * Build a node link function for a terminal directive.\n\t * A terminal link function terminates the current\n\t * compilation recursion and handles compilation of the\n\t * subtree in the directive.\n\t *\n\t * @param {Element} el\n\t * @param {String} dirName\n\t * @param {String} value\n\t * @param {Object} options\n\t * @param {Object} def\n\t * @param {String} [rawName]\n\t * @param {String} [arg]\n\t * @param {Object} [modifiers]\n\t * @return {Function} terminalLinkFn\n\t */\n\t\n\tfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n\t  var parsed = parseDirective(value);\n\t  var descriptor = {\n\t    name: dirName,\n\t    arg: arg,\n\t    expression: parsed.expression,\n\t    filters: parsed.filters,\n\t    raw: value,\n\t    attr: rawName,\n\t    modifiers: modifiers,\n\t    def: def\n\t  };\n\t  // check ref for v-for and router-view\n\t  if (dirName === 'for' || dirName === 'router-view') {\n\t    descriptor.ref = findRef(el);\n\t  }\n\t  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n\t    if (descriptor.ref) {\n\t      defineReactive((scope || vm).$refs, descriptor.ref, null);\n\t    }\n\t    vm._bindDir(descriptor, el, host, scope, frag);\n\t  };\n\t  fn.terminal = true;\n\t  return fn;\n\t}\n\t\n\t/**\n\t * Compile the directives on an element and return a linker.\n\t *\n\t * @param {Array|NamedNodeMap} attrs\n\t * @param {Object} options\n\t * @return {Function}\n\t */\n\t\n\tfunction compileDirectives(attrs, options) {\n\t  var i = attrs.length;\n\t  var dirs = [];\n\t  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n\t  while (i--) {\n\t    attr = attrs[i];\n\t    name = rawName = attr.name;\n\t    value = rawValue = attr.value;\n\t    tokens = parseText(value);\n\t    // reset arg\n\t    arg = null;\n\t    // check modifiers\n\t    modifiers = parseModifiers(name);\n\t    name = name.replace(modifierRE, '');\n\t\n\t    // attribute interpolations\n\t    if (tokens) {\n\t      value = tokensToExp(tokens);\n\t      arg = name;\n\t      pushDir('bind', directives.bind, tokens);\n\t      // warn against mixing mustaches with v-bind\n\t      if (process.env.NODE_ENV !== 'production') {\n\t        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n\t          return attr.name === ':class' || attr.name === 'v-bind:class';\n\t        })) {\n\t          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n\t        }\n\t      }\n\t    } else\n\t\n\t      // special attribute: transition\n\t      if (transitionRE.test(name)) {\n\t        modifiers.literal = !bindRE.test(name);\n\t        pushDir('transition', internalDirectives.transition);\n\t      } else\n\t\n\t        // event handlers\n\t        if (onRE.test(name)) {\n\t          arg = name.replace(onRE, '');\n\t          pushDir('on', directives.on);\n\t        } else\n\t\n\t          // attribute bindings\n\t          if (bindRE.test(name)) {\n\t            dirName = name.replace(bindRE, '');\n\t            if (dirName === 'style' || dirName === 'class') {\n\t              pushDir(dirName, internalDirectives[dirName]);\n\t            } else {\n\t              arg = dirName;\n\t              pushDir('bind', directives.bind);\n\t            }\n\t          } else\n\t\n\t            // normal directives\n\t            if (matched = name.match(dirAttrRE)) {\n\t              dirName = matched[1];\n\t              arg = matched[2];\n\t\n\t              // skip v-else (when used with v-show)\n\t              if (dirName === 'else') {\n\t                continue;\n\t              }\n\t\n\t              dirDef = resolveAsset(options, 'directives', dirName, true);\n\t              if (dirDef) {\n\t                pushDir(dirName, dirDef);\n\t              }\n\t            }\n\t  }\n\t\n\t  /**\n\t   * Push a directive.\n\t   *\n\t   * @param {String} dirName\n\t   * @param {Object|Function} def\n\t   * @param {Array} [interpTokens]\n\t   */\n\t\n\t  function pushDir(dirName, def, interpTokens) {\n\t    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n\t    var parsed = !hasOneTimeToken && parseDirective(value);\n\t    dirs.push({\n\t      name: dirName,\n\t      attr: rawName,\n\t      raw: rawValue,\n\t      def: def,\n\t      arg: arg,\n\t      modifiers: modifiers,\n\t      // conversion from interpolation strings with one-time token\n\t      // to expression is differed until directive bind time so that we\n\t      // have access to the actual vm context for one-time bindings.\n\t      expression: parsed && parsed.expression,\n\t      filters: parsed && parsed.filters,\n\t      interp: interpTokens,\n\t      hasOneTime: hasOneTimeToken\n\t    });\n\t  }\n\t\n\t  if (dirs.length) {\n\t    return makeNodeLinkFn(dirs);\n\t  }\n\t}\n\t\n\t/**\n\t * Parse modifiers from directive attribute name.\n\t *\n\t * @param {String} name\n\t * @return {Object}\n\t */\n\t\n\tfunction parseModifiers(name) {\n\t  var res = Object.create(null);\n\t  var match = name.match(modifierRE);\n\t  if (match) {\n\t    var i = match.length;\n\t    while (i--) {\n\t      res[match[i].slice(1)] = true;\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Build a link function for all directives on a single node.\n\t *\n\t * @param {Array} directives\n\t * @return {Function} directivesLinkFn\n\t */\n\t\n\tfunction makeNodeLinkFn(directives) {\n\t  return function nodeLinkFn(vm, el, host, scope, frag) {\n\t    // reverse apply because it's sorted low to high\n\t    var i = directives.length;\n\t    while (i--) {\n\t      vm._bindDir(directives[i], el, host, scope, frag);\n\t    }\n\t  };\n\t}\n\t\n\t/**\n\t * Check if an interpolation string contains one-time tokens.\n\t *\n\t * @param {Array} tokens\n\t * @return {Boolean}\n\t */\n\t\n\tfunction hasOneTime(tokens) {\n\t  var i = tokens.length;\n\t  while (i--) {\n\t    if (tokens[i].oneTime) return true;\n\t  }\n\t}\n\t\n\tfunction isScript(el) {\n\t  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n\t}\n\t\n\tvar specialCharRE = /[^\\w\\-:\\.]/;\n\t\n\t/**\n\t * Process an element or a DocumentFragment based on a\n\t * instance option object. This allows us to transclude\n\t * a template node/fragment before the instance is created,\n\t * so the processed fragment can then be cloned and reused\n\t * in v-for.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transclude(el, options) {\n\t  // extract container attributes to pass them down\n\t  // to compiler, because they need to be compiled in\n\t  // parent scope. we are mutating the options object here\n\t  // assuming the same object will be used for compile\n\t  // right after this.\n\t  if (options) {\n\t    options._containerAttrs = extractAttrs(el);\n\t  }\n\t  // for template tags, what we want is its content as\n\t  // a documentFragment (for fragment instances)\n\t  if (isTemplate(el)) {\n\t    el = parseTemplate(el);\n\t  }\n\t  if (options) {\n\t    if (options._asComponent && !options.template) {\n\t      options.template = '<slot></slot>';\n\t    }\n\t    if (options.template) {\n\t      options._content = extractContent(el);\n\t      el = transcludeTemplate(el, options);\n\t    }\n\t  }\n\t  if (isFragment(el)) {\n\t    // anchors for fragment instance\n\t    // passing in `persist: true` to avoid them being\n\t    // discarded by IE during template cloning\n\t    prepend(createAnchor('v-start', true), el);\n\t    el.appendChild(createAnchor('v-end', true));\n\t  }\n\t  return el;\n\t}\n\t\n\t/**\n\t * Process the template option.\n\t * If the replace option is true this will swap the $el.\n\t *\n\t * @param {Element} el\n\t * @param {Object} options\n\t * @return {Element|DocumentFragment}\n\t */\n\t\n\tfunction transcludeTemplate(el, options) {\n\t  var template = options.template;\n\t  var frag = parseTemplate(template, true);\n\t  if (frag) {\n\t    var replacer = frag.firstChild;\n\t    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n\t    if (options.replace) {\n\t      /* istanbul ignore if */\n\t      if (el === document.body) {\n\t        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n\t      }\n\t      // there are many cases where the instance must\n\t      // become a fragment instance: basically anything that\n\t      // can create more than 1 root nodes.\n\t      if (\n\t      // multi-children template\n\t      frag.childNodes.length > 1 ||\n\t      // non-element template\n\t      replacer.nodeType !== 1 ||\n\t      // single nested component\n\t      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n\t      // element directive\n\t      resolveAsset(options, 'elementDirectives', tag) ||\n\t      // for block\n\t      replacer.hasAttribute('v-for') ||\n\t      // if block\n\t      replacer.hasAttribute('v-if')) {\n\t        return frag;\n\t      } else {\n\t        options._replacerAttrs = extractAttrs(replacer);\n\t        mergeAttrs(el, replacer);\n\t        return replacer;\n\t      }\n\t    } else {\n\t      el.appendChild(frag);\n\t      return el;\n\t    }\n\t  } else {\n\t    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n\t  }\n\t}\n\t\n\t/**\n\t * Helper to extract a component container's attributes\n\t * into a plain object array.\n\t *\n\t * @param {Element} el\n\t * @return {Array}\n\t */\n\t\n\tfunction extractAttrs(el) {\n\t  if (el.nodeType === 1 && el.hasAttributes()) {\n\t    return toArray(el.attributes);\n\t  }\n\t}\n\t\n\t/**\n\t * Merge the attributes of two elements, and make sure\n\t * the class names are merged properly.\n\t *\n\t * @param {Element} from\n\t * @param {Element} to\n\t */\n\t\n\tfunction mergeAttrs(from, to) {\n\t  var attrs = from.attributes;\n\t  var i = attrs.length;\n\t  var name, value;\n\t  while (i--) {\n\t    name = attrs[i].name;\n\t    value = attrs[i].value;\n\t    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n\t      to.setAttribute(name, value);\n\t    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n\t      value.split(/\\s+/).forEach(function (cls) {\n\t        addClass(to, cls);\n\t      });\n\t    }\n\t  }\n\t}\n\t\n\t/**\n\t * Scan and determine slot content distribution.\n\t * We do this during transclusion instead at compile time so that\n\t * the distribution is decoupled from the compilation order of\n\t * the slots.\n\t *\n\t * @param {Element|DocumentFragment} template\n\t * @param {Element} content\n\t * @param {Vue} vm\n\t */\n\t\n\tfunction resolveSlots(vm, content) {\n\t  if (!content) {\n\t    return;\n\t  }\n\t  var contents = vm._slotContents = Object.create(null);\n\t  var el, name;\n\t  for (var i = 0, l = content.children.length; i < l; i++) {\n\t    el = content.children[i];\n\t    /* eslint-disable no-cond-assign */\n\t    if (name = el.getAttribute('slot')) {\n\t      (contents[name] || (contents[name] = [])).push(el);\n\t    }\n\t    /* eslint-enable no-cond-assign */\n\t    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n\t      warn('The \"slot\" attribute must be static.', vm.$parent);\n\t    }\n\t  }\n\t  for (name in contents) {\n\t    contents[name] = extractFragment(contents[name], content);\n\t  }\n\t  if (content.hasChildNodes()) {\n\t    var nodes = content.childNodes;\n\t    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n\t      return;\n\t    }\n\t    contents['default'] = extractFragment(content.childNodes, content);\n\t  }\n\t}\n\t\n\t/**\n\t * Extract qualified content nodes from a node list.\n\t *\n\t * @param {NodeList} nodes\n\t * @return {DocumentFragment}\n\t */\n\t\n\tfunction extractFragment(nodes, parent) {\n\t  var frag = document.createDocumentFragment();\n\t  nodes = toArray(nodes);\n\t  for (var i = 0, l = nodes.length; i < l; i++) {\n\t    var node = nodes[i];\n\t    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n\t      parent.removeChild(node);\n\t      node = parseTemplate(node, true);\n\t    }\n\t    frag.appendChild(node);\n\t  }\n\t  return frag;\n\t}\n\t\n\t\n\t\n\tvar compiler = Object.freeze({\n\t\tcompile: compile,\n\t\tcompileAndLinkProps: compileAndLinkProps,\n\t\tcompileRoot: compileRoot,\n\t\ttransclude: transclude,\n\t\tresolveSlots: resolveSlots\n\t});\n\t\n\tfunction stateMixin (Vue) {\n\t  /**\n\t   * Accessor for `$data` property, since setting $data\n\t   * requires observing the new object and updating\n\t   * proxied properties.\n\t   */\n\t\n\t  Object.defineProperty(Vue.prototype, '$data', {\n\t    get: function get() {\n\t      return this._data;\n\t    },\n\t    set: function set(newData) {\n\t      if (newData !== this._data) {\n\t        this._setData(newData);\n\t      }\n\t    }\n\t  });\n\t\n\t  /**\n\t   * Setup the scope of an instance, which contains:\n\t   * - observed data\n\t   * - computed properties\n\t   * - user methods\n\t   * - meta properties\n\t   */\n\t\n\t  Vue.prototype._initState = function () {\n\t    this._initProps();\n\t    this._initMeta();\n\t    this._initMethods();\n\t    this._initData();\n\t    this._initComputed();\n\t  };\n\t\n\t  /**\n\t   * Initialize props.\n\t   */\n\t\n\t  Vue.prototype._initProps = function () {\n\t    var options = this.$options;\n\t    var el = options.el;\n\t    var props = options.props;\n\t    if (props && !el) {\n\t      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n\t    }\n\t    // make sure to convert string selectors into element now\n\t    el = options.el = query(el);\n\t    this._propsUnlinkFn = el && el.nodeType === 1 && props\n\t    // props must be linked in proper scope if inside v-for\n\t    ? compileAndLinkProps(this, el, props, this._scope) : null;\n\t  };\n\t\n\t  /**\n\t   * Initialize the data.\n\t   */\n\t\n\t  Vue.prototype._initData = function () {\n\t    var dataFn = this.$options.data;\n\t    var data = this._data = dataFn ? dataFn() : {};\n\t    if (!isPlainObject(data)) {\n\t      data = {};\n\t      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n\t    }\n\t    var props = this._props;\n\t    // proxy data on instance\n\t    var keys = Object.keys(data);\n\t    var i, key;\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      // there are two scenarios where we can proxy a data key:\n\t      // 1. it's not already defined as a prop\n\t      // 2. it's provided via a instantiation option AND there are no\n\t      //    template prop present\n\t      if (!props || !hasOwn(props, key)) {\n\t        this._proxy(key);\n\t      } else if (process.env.NODE_ENV !== 'production') {\n\t        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n\t      }\n\t    }\n\t    // observe data\n\t    observe(data, this);\n\t  };\n\t\n\t  /**\n\t   * Swap the instance's $data. Called in $data's setter.\n\t   *\n\t   * @param {Object} newData\n\t   */\n\t\n\t  Vue.prototype._setData = function (newData) {\n\t    newData = newData || {};\n\t    var oldData = this._data;\n\t    this._data = newData;\n\t    var keys, key, i;\n\t    // unproxy keys not present in new data\n\t    keys = Object.keys(oldData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!(key in newData)) {\n\t        this._unproxy(key);\n\t      }\n\t    }\n\t    // proxy keys not already proxied,\n\t    // and trigger change for changed values\n\t    keys = Object.keys(newData);\n\t    i = keys.length;\n\t    while (i--) {\n\t      key = keys[i];\n\t      if (!hasOwn(this, key)) {\n\t        // new property\n\t        this._proxy(key);\n\t      }\n\t    }\n\t    oldData.__ob__.removeVm(this);\n\t    observe(newData, this);\n\t    this._digest();\n\t  };\n\t\n\t  /**\n\t   * Proxy a property, so that\n\t   * vm.prop === vm._data.prop\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._proxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      // need to store ref to self here\n\t      // because these getter/setters might\n\t      // be called by child scopes via\n\t      // prototype inheritance.\n\t      var self = this;\n\t      Object.defineProperty(self, key, {\n\t        configurable: true,\n\t        enumerable: true,\n\t        get: function proxyGetter() {\n\t          return self._data[key];\n\t        },\n\t        set: function proxySetter(val) {\n\t          self._data[key] = val;\n\t        }\n\t      });\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Unproxy a property.\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype._unproxy = function (key) {\n\t    if (!isReserved(key)) {\n\t      delete this[key];\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Force update on every watcher in scope.\n\t   */\n\t\n\t  Vue.prototype._digest = function () {\n\t    for (var i = 0, l = this._watchers.length; i < l; i++) {\n\t      this._watchers[i].update(true); // shallow updates\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Setup computed properties. They are essentially\n\t   * special getter/setters\n\t   */\n\t\n\t  function noop() {}\n\t  Vue.prototype._initComputed = function () {\n\t    var computed = this.$options.computed;\n\t    if (computed) {\n\t      for (var key in computed) {\n\t        var userDef = computed[key];\n\t        var def = {\n\t          enumerable: true,\n\t          configurable: true\n\t        };\n\t        if (typeof userDef === 'function') {\n\t          def.get = makeComputedGetter(userDef, this);\n\t          def.set = noop;\n\t        } else {\n\t          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n\t          def.set = userDef.set ? bind(userDef.set, this) : noop;\n\t        }\n\t        Object.defineProperty(this, key, def);\n\t      }\n\t    }\n\t  };\n\t\n\t  function makeComputedGetter(getter, owner) {\n\t    var watcher = new Watcher(owner, getter, null, {\n\t      lazy: true\n\t    });\n\t    return function computedGetter() {\n\t      if (watcher.dirty) {\n\t        watcher.evaluate();\n\t      }\n\t      if (Dep.target) {\n\t        watcher.depend();\n\t      }\n\t      return watcher.value;\n\t    };\n\t  }\n\t\n\t  /**\n\t   * Setup instance methods. Methods must be bound to the\n\t   * instance since they might be passed down as a prop to\n\t   * child components.\n\t   */\n\t\n\t  Vue.prototype._initMethods = function () {\n\t    var methods = this.$options.methods;\n\t    if (methods) {\n\t      for (var key in methods) {\n\t        this[key] = bind(methods[key], this);\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Initialize meta information like $index, $key & $value.\n\t   */\n\t\n\t  Vue.prototype._initMeta = function () {\n\t    var metas = this.$options._meta;\n\t    if (metas) {\n\t      for (var key in metas) {\n\t        defineReactive(this, key, metas[key]);\n\t      }\n\t    }\n\t  };\n\t}\n\t\n\tvar eventRE = /^v-on:|^@/;\n\t\n\tfunction eventsMixin (Vue) {\n\t  /**\n\t   * Setup the instance's option events & watchers.\n\t   * If the value is a string, we pull it from the\n\t   * instance's methods by name.\n\t   */\n\t\n\t  Vue.prototype._initEvents = function () {\n\t    var options = this.$options;\n\t    if (options._asComponent) {\n\t      registerComponentEvents(this, options.el);\n\t    }\n\t    registerCallbacks(this, '$on', options.events);\n\t    registerCallbacks(this, '$watch', options.watch);\n\t  };\n\t\n\t  /**\n\t   * Register v-on events on a child component\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} el\n\t   */\n\t\n\t  function registerComponentEvents(vm, el) {\n\t    var attrs = el.attributes;\n\t    var name, value, handler;\n\t    for (var i = 0, l = attrs.length; i < l; i++) {\n\t      name = attrs[i].name;\n\t      if (eventRE.test(name)) {\n\t        name = name.replace(eventRE, '');\n\t        // force the expression into a statement so that\n\t        // it always dynamically resolves the method to call (#2670)\n\t        // kinda ugly hack, but does the job.\n\t        value = attrs[i].value;\n\t        if (isSimplePath(value)) {\n\t          value += '.apply(this, $arguments)';\n\t        }\n\t        handler = (vm._scope || vm._context).$eval(value, true);\n\t        handler._fromParent = true;\n\t        vm.$on(name.replace(eventRE), handler);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Register callbacks for option events and watchers.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {Object} hash\n\t   */\n\t\n\t  function registerCallbacks(vm, action, hash) {\n\t    if (!hash) return;\n\t    var handlers, key, i, j;\n\t    for (key in hash) {\n\t      handlers = hash[key];\n\t      if (isArray(handlers)) {\n\t        for (i = 0, j = handlers.length; i < j; i++) {\n\t          register(vm, action, key, handlers[i]);\n\t        }\n\t      } else {\n\t        register(vm, action, key, handlers);\n\t      }\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Helper to register an event/watch callback.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} action\n\t   * @param {String} key\n\t   * @param {Function|String|Object} handler\n\t   * @param {Object} [options]\n\t   */\n\t\n\t  function register(vm, action, key, handler, options) {\n\t    var type = typeof handler;\n\t    if (type === 'function') {\n\t      vm[action](key, handler, options);\n\t    } else if (type === 'string') {\n\t      var methods = vm.$options.methods;\n\t      var method = methods && methods[handler];\n\t      if (method) {\n\t        vm[action](key, method, options);\n\t      } else {\n\t        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n\t      }\n\t    } else if (handler && type === 'object') {\n\t      register(vm, action, key, handler.handler, handler);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Setup recursive attached/detached calls\n\t   */\n\t\n\t  Vue.prototype._initDOMHooks = function () {\n\t    this.$on('hook:attached', onAttached);\n\t    this.$on('hook:detached', onDetached);\n\t  };\n\t\n\t  /**\n\t   * Callback to recursively call attached hook on children\n\t   */\n\t\n\t  function onAttached() {\n\t    if (!this._isAttached) {\n\t      this._isAttached = true;\n\t      this.$children.forEach(callAttach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call attached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callAttach(child) {\n\t    if (!child._isAttached && inDoc(child.$el)) {\n\t      child._callHook('attached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Callback to recursively call detached hook on children\n\t   */\n\t\n\t  function onDetached() {\n\t    if (this._isAttached) {\n\t      this._isAttached = false;\n\t      this.$children.forEach(callDetach);\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Iterator to call detached hook\n\t   *\n\t   * @param {Vue} child\n\t   */\n\t\n\t  function callDetach(child) {\n\t    if (child._isAttached && !inDoc(child.$el)) {\n\t      child._callHook('detached');\n\t    }\n\t  }\n\t\n\t  /**\n\t   * Trigger all handlers for a hook\n\t   *\n\t   * @param {String} hook\n\t   */\n\t\n\t  Vue.prototype._callHook = function (hook) {\n\t    this.$emit('pre-hook:' + hook);\n\t    var handlers = this.$options[hook];\n\t    if (handlers) {\n\t      for (var i = 0, j = handlers.length; i < j; i++) {\n\t        handlers[i].call(this);\n\t      }\n\t    }\n\t    this.$emit('hook:' + hook);\n\t  };\n\t}\n\t\n\tfunction noop$1() {}\n\t\n\t/**\n\t * A directive links a DOM element with a piece of data,\n\t * which is the result of evaluating an expression.\n\t * It registers a watcher with the expression and calls\n\t * the DOM update function when a change is triggered.\n\t *\n\t * @param {Object} descriptor\n\t *                 - {String} name\n\t *                 - {Object} def\n\t *                 - {String} expression\n\t *                 - {Array<Object>} [filters]\n\t *                 - {Object} [modifiers]\n\t *                 - {Boolean} literal\n\t *                 - {String} attr\n\t *                 - {String} arg\n\t *                 - {String} raw\n\t *                 - {String} [ref]\n\t *                 - {Array<Object>} [interp]\n\t *                 - {Boolean} [hasOneTime]\n\t * @param {Vue} vm\n\t * @param {Node} el\n\t * @param {Vue} [host] - transclusion host component\n\t * @param {Object} [scope] - v-for scope\n\t * @param {Fragment} [frag] - owner fragment\n\t * @constructor\n\t */\n\tfunction Directive(descriptor, vm, el, host, scope, frag) {\n\t  this.vm = vm;\n\t  this.el = el;\n\t  // copy descriptor properties\n\t  this.descriptor = descriptor;\n\t  this.name = descriptor.name;\n\t  this.expression = descriptor.expression;\n\t  this.arg = descriptor.arg;\n\t  this.modifiers = descriptor.modifiers;\n\t  this.filters = descriptor.filters;\n\t  this.literal = this.modifiers && this.modifiers.literal;\n\t  // private\n\t  this._locked = false;\n\t  this._bound = false;\n\t  this._listeners = null;\n\t  // link context\n\t  this._host = host;\n\t  this._scope = scope;\n\t  this._frag = frag;\n\t  // store directives on node in dev mode\n\t  if (process.env.NODE_ENV !== 'production' && this.el) {\n\t    this.el._vue_directives = this.el._vue_directives || [];\n\t    this.el._vue_directives.push(this);\n\t  }\n\t}\n\t\n\t/**\n\t * Initialize the directive, mixin definition properties,\n\t * setup the watcher, call definition bind() and update()\n\t * if present.\n\t */\n\t\n\tDirective.prototype._bind = function () {\n\t  var name = this.name;\n\t  var descriptor = this.descriptor;\n\t\n\t  // remove attribute\n\t  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n\t    var attr = descriptor.attr || 'v-' + name;\n\t    this.el.removeAttribute(attr);\n\t  }\n\t\n\t  // copy def properties\n\t  var def = descriptor.def;\n\t  if (typeof def === 'function') {\n\t    this.update = def;\n\t  } else {\n\t    extend(this, def);\n\t  }\n\t\n\t  // setup directive params\n\t  this._setupParams();\n\t\n\t  // initial bind\n\t  if (this.bind) {\n\t    this.bind();\n\t  }\n\t  this._bound = true;\n\t\n\t  if (this.literal) {\n\t    this.update && this.update(descriptor.raw);\n\t  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n\t    // wrapped updater for context\n\t    var dir = this;\n\t    if (this.update) {\n\t      this._update = function (val, oldVal) {\n\t        if (!dir._locked) {\n\t          dir.update(val, oldVal);\n\t        }\n\t      };\n\t    } else {\n\t      this._update = noop$1;\n\t    }\n\t    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n\t    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n\t    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n\t    {\n\t      filters: this.filters,\n\t      twoWay: this.twoWay,\n\t      deep: this.deep,\n\t      preProcess: preProcess,\n\t      postProcess: postProcess,\n\t      scope: this._scope\n\t    });\n\t    // v-model with inital inline value need to sync back to\n\t    // model instead of update to DOM on init. They would\n\t    // set the afterBind hook to indicate that.\n\t    if (this.afterBind) {\n\t      this.afterBind();\n\t    } else if (this.update) {\n\t      this.update(watcher.value);\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup all param attributes, e.g. track-by,\n\t * transition-mode, etc...\n\t */\n\t\n\tDirective.prototype._setupParams = function () {\n\t  if (!this.params) {\n\t    return;\n\t  }\n\t  var params = this.params;\n\t  // swap the params array with a fresh object.\n\t  this.params = Object.create(null);\n\t  var i = params.length;\n\t  var key, val, mappedKey;\n\t  while (i--) {\n\t    key = hyphenate(params[i]);\n\t    mappedKey = camelize(key);\n\t    val = getBindAttr(this.el, key);\n\t    if (val != null) {\n\t      // dynamic\n\t      this._setupParamWatcher(mappedKey, val);\n\t    } else {\n\t      // static\n\t      val = getAttr(this.el, key);\n\t      if (val != null) {\n\t        this.params[mappedKey] = val === '' ? true : val;\n\t      }\n\t    }\n\t  }\n\t};\n\t\n\t/**\n\t * Setup a watcher for a dynamic param.\n\t *\n\t * @param {String} key\n\t * @param {String} expression\n\t */\n\t\n\tDirective.prototype._setupParamWatcher = function (key, expression) {\n\t  var self = this;\n\t  var called = false;\n\t  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n\t    self.params[key] = val;\n\t    // since we are in immediate mode,\n\t    // only call the param change callbacks if this is not the first update.\n\t    if (called) {\n\t      var cb = self.paramWatchers && self.paramWatchers[key];\n\t      if (cb) {\n\t        cb.call(self, val, oldVal);\n\t      }\n\t    } else {\n\t      called = true;\n\t    }\n\t  }, {\n\t    immediate: true,\n\t    user: false\n\t  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n\t};\n\t\n\t/**\n\t * Check if the directive is a function caller\n\t * and if the expression is a callable one. If both true,\n\t * we wrap up the expression and use it as the event\n\t * handler.\n\t *\n\t * e.g. on-click=\"a++\"\n\t *\n\t * @return {Boolean}\n\t */\n\t\n\tDirective.prototype._checkStatement = function () {\n\t  var expression = this.expression;\n\t  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n\t    var fn = parseExpression(expression).get;\n\t    var scope = this._scope || this.vm;\n\t    var handler = function handler(e) {\n\t      scope.$event = e;\n\t      fn.call(scope, scope);\n\t      scope.$event = null;\n\t    };\n\t    if (this.filters) {\n\t      handler = scope._applyFilters(handler, null, this.filters);\n\t    }\n\t    this.update(handler);\n\t    return true;\n\t  }\n\t};\n\t\n\t/**\n\t * Set the corresponding value with the setter.\n\t * This should only be used in two-way directives\n\t * e.g. v-model.\n\t *\n\t * @param {*} value\n\t * @public\n\t */\n\t\n\tDirective.prototype.set = function (value) {\n\t  /* istanbul ignore else */\n\t  if (this.twoWay) {\n\t    this._withLock(function () {\n\t      this._watcher.set(value);\n\t    });\n\t  } else if (process.env.NODE_ENV !== 'production') {\n\t    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n\t  }\n\t};\n\t\n\t/**\n\t * Execute a function while preventing that function from\n\t * triggering updates on this directive instance.\n\t *\n\t * @param {Function} fn\n\t */\n\t\n\tDirective.prototype._withLock = function (fn) {\n\t  var self = this;\n\t  self._locked = true;\n\t  fn.call(self);\n\t  nextTick(function () {\n\t    self._locked = false;\n\t  });\n\t};\n\t\n\t/**\n\t * Convenience method that attaches a DOM event listener\n\t * to the directive element and autometically tears it down\n\t * during unbind.\n\t *\n\t * @param {String} event\n\t * @param {Function} handler\n\t * @param {Boolean} [useCapture]\n\t */\n\t\n\tDirective.prototype.on = function (event, handler, useCapture) {\n\t  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n\t};\n\t\n\t/**\n\t * Teardown the watcher and call unbind.\n\t */\n\t\n\tDirective.prototype._teardown = function () {\n\t  if (this._bound) {\n\t    this._bound = false;\n\t    if (this.unbind) {\n\t      this.unbind();\n\t    }\n\t    if (this._watcher) {\n\t      this._watcher.teardown();\n\t    }\n\t    var listeners = this._listeners;\n\t    var i;\n\t    if (listeners) {\n\t      i = listeners.length;\n\t      while (i--) {\n\t        off(this.el, listeners[i][0], listeners[i][1]);\n\t      }\n\t    }\n\t    var unwatchFns = this._paramUnwatchFns;\n\t    if (unwatchFns) {\n\t      i = unwatchFns.length;\n\t      while (i--) {\n\t        unwatchFns[i]();\n\t      }\n\t    }\n\t    if (process.env.NODE_ENV !== 'production' && this.el) {\n\t      this.el._vue_directives.$remove(this);\n\t    }\n\t    this.vm = this.el = this._watcher = this._listeners = null;\n\t  }\n\t};\n\t\n\tfunction lifecycleMixin (Vue) {\n\t  /**\n\t   * Update v-ref for component.\n\t   *\n\t   * @param {Boolean} remove\n\t   */\n\t\n\t  Vue.prototype._updateRef = function (remove) {\n\t    var ref = this.$options._ref;\n\t    if (ref) {\n\t      var refs = (this._scope || this._context).$refs;\n\t      if (remove) {\n\t        if (refs[ref] === this) {\n\t          refs[ref] = null;\n\t        }\n\t      } else {\n\t        refs[ref] = this;\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Transclude, compile and link element.\n\t   *\n\t   * If a pre-compiled linker is available, that means the\n\t   * passed in element will be pre-transcluded and compiled\n\t   * as well - all we need to do is to call the linker.\n\t   *\n\t   * Otherwise we need to call transclude/compile/link here.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._compile = function (el) {\n\t    var options = this.$options;\n\t\n\t    // transclude and init element\n\t    // transclude can potentially replace original\n\t    // so we need to keep reference; this step also injects\n\t    // the template and caches the original attributes\n\t    // on the container node and replacer node.\n\t    var original = el;\n\t    el = transclude(el, options);\n\t    this._initElement(el);\n\t\n\t    // handle v-pre on root node (#2026)\n\t    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n\t      return;\n\t    }\n\t\n\t    // root is always compiled per-instance, because\n\t    // container attrs and props can be different every time.\n\t    var contextOptions = this._context && this._context.$options;\n\t    var rootLinker = compileRoot(el, options, contextOptions);\n\t\n\t    // resolve slot distribution\n\t    resolveSlots(this, options._content);\n\t\n\t    // compile and link the rest\n\t    var contentLinkFn;\n\t    var ctor = this.constructor;\n\t    // component compilation can be cached\n\t    // as long as it's not using inline-template\n\t    if (options._linkerCachable) {\n\t      contentLinkFn = ctor.linker;\n\t      if (!contentLinkFn) {\n\t        contentLinkFn = ctor.linker = compile(el, options);\n\t      }\n\t    }\n\t\n\t    // link phase\n\t    // make sure to link root with prop scope!\n\t    var rootUnlinkFn = rootLinker(this, el, this._scope);\n\t    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\t\n\t    // register composite unlink function\n\t    // to be called during instance destruction\n\t    this._unlinkFn = function () {\n\t      rootUnlinkFn();\n\t      // passing destroying: true to avoid searching and\n\t      // splicing the directives\n\t      contentUnlinkFn(true);\n\t    };\n\t\n\t    // finally replace original\n\t    if (options.replace) {\n\t      replace(original, el);\n\t    }\n\t\n\t    this._isCompiled = true;\n\t    this._callHook('compiled');\n\t  };\n\t\n\t  /**\n\t   * Initialize instance element. Called in the public\n\t   * $mount() method.\n\t   *\n\t   * @param {Element} el\n\t   */\n\t\n\t  Vue.prototype._initElement = function (el) {\n\t    if (isFragment(el)) {\n\t      this._isFragment = true;\n\t      this.$el = this._fragmentStart = el.firstChild;\n\t      this._fragmentEnd = el.lastChild;\n\t      // set persisted text anchors to empty\n\t      if (this._fragmentStart.nodeType === 3) {\n\t        this._fragmentStart.data = this._fragmentEnd.data = '';\n\t      }\n\t      this._fragment = el;\n\t    } else {\n\t      this.$el = el;\n\t    }\n\t    this.$el.__vue__ = this;\n\t    this._callHook('beforeCompile');\n\t  };\n\t\n\t  /**\n\t   * Create and bind a directive to an element.\n\t   *\n\t   * @param {Object} descriptor - parsed directive descriptor\n\t   * @param {Node} node   - target node\n\t   * @param {Vue} [host] - transclusion host component\n\t   * @param {Object} [scope] - v-for scope\n\t   * @param {Fragment} [frag] - owner fragment\n\t   */\n\t\n\t  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n\t    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n\t  };\n\t\n\t  /**\n\t   * Teardown an instance, unobserves the data, unbind all the\n\t   * directives, turn off all the event listeners, etc.\n\t   *\n\t   * @param {Boolean} remove - whether to remove the DOM node.\n\t   * @param {Boolean} deferCleanup - if true, defer cleanup to\n\t   *                                 be called later\n\t   */\n\t\n\t  Vue.prototype._destroy = function (remove, deferCleanup) {\n\t    if (this._isBeingDestroyed) {\n\t      if (!deferCleanup) {\n\t        this._cleanup();\n\t      }\n\t      return;\n\t    }\n\t\n\t    var destroyReady;\n\t    var pendingRemoval;\n\t\n\t    var self = this;\n\t    // Cleanup should be called either synchronously or asynchronoysly as\n\t    // callback of this.$remove(), or if remove and deferCleanup are false.\n\t    // In any case it should be called after all other removing, unbinding and\n\t    // turning of is done\n\t    var cleanupIfPossible = function cleanupIfPossible() {\n\t      if (destroyReady && !pendingRemoval && !deferCleanup) {\n\t        self._cleanup();\n\t      }\n\t    };\n\t\n\t    // remove DOM element\n\t    if (remove && this.$el) {\n\t      pendingRemoval = true;\n\t      this.$remove(function () {\n\t        pendingRemoval = false;\n\t        cleanupIfPossible();\n\t      });\n\t    }\n\t\n\t    this._callHook('beforeDestroy');\n\t    this._isBeingDestroyed = true;\n\t    var i;\n\t    // remove self from parent. only necessary\n\t    // if parent is not being destroyed as well.\n\t    var parent = this.$parent;\n\t    if (parent && !parent._isBeingDestroyed) {\n\t      parent.$children.$remove(this);\n\t      // unregister ref (remove: true)\n\t      this._updateRef(true);\n\t    }\n\t    // destroy all children.\n\t    i = this.$children.length;\n\t    while (i--) {\n\t      this.$children[i].$destroy();\n\t    }\n\t    // teardown props\n\t    if (this._propsUnlinkFn) {\n\t      this._propsUnlinkFn();\n\t    }\n\t    // teardown all directives. this also tearsdown all\n\t    // directive-owned watchers.\n\t    if (this._unlinkFn) {\n\t      this._unlinkFn();\n\t    }\n\t    i = this._watchers.length;\n\t    while (i--) {\n\t      this._watchers[i].teardown();\n\t    }\n\t    // remove reference to self on $el\n\t    if (this.$el) {\n\t      this.$el.__vue__ = null;\n\t    }\n\t\n\t    destroyReady = true;\n\t    cleanupIfPossible();\n\t  };\n\t\n\t  /**\n\t   * Clean up to ensure garbage collection.\n\t   * This is called after the leave transition if there\n\t   * is any.\n\t   */\n\t\n\t  Vue.prototype._cleanup = function () {\n\t    if (this._isDestroyed) {\n\t      return;\n\t    }\n\t    // remove self from owner fragment\n\t    // do it in cleanup so that we can call $destroy with\n\t    // defer right when a fragment is about to be removed.\n\t    if (this._frag) {\n\t      this._frag.children.$remove(this);\n\t    }\n\t    // remove reference from data ob\n\t    // frozen object may not have observer.\n\t    if (this._data && this._data.__ob__) {\n\t      this._data.__ob__.removeVm(this);\n\t    }\n\t    // Clean up references to private properties and other\n\t    // instances. preserve reference to _data so that proxy\n\t    // accessors still work. The only potential side effect\n\t    // here is that mutating the instance after it's destroyed\n\t    // may affect the state of other components that are still\n\t    // observing the same object, but that seems to be a\n\t    // reasonable responsibility for the user rather than\n\t    // always throwing an error on them.\n\t    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n\t    // call the last hook...\n\t    this._isDestroyed = true;\n\t    this._callHook('destroyed');\n\t    // turn off all instance listeners.\n\t    this.$off();\n\t  };\n\t}\n\t\n\tfunction miscMixin (Vue) {\n\t  /**\n\t   * Apply a list of filter (descriptors) to a value.\n\t   * Using plain for loops here because this will be called in\n\t   * the getter of any watcher with filters so it is very\n\t   * performance sensitive.\n\t   *\n\t   * @param {*} value\n\t   * @param {*} [oldValue]\n\t   * @param {Array} filters\n\t   * @param {Boolean} write\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n\t    var filter, fn, args, arg, offset, i, l, j, k;\n\t    for (i = 0, l = filters.length; i < l; i++) {\n\t      filter = filters[write ? l - i - 1 : i];\n\t      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n\t      if (!fn) continue;\n\t      fn = write ? fn.write : fn.read || fn;\n\t      if (typeof fn !== 'function') continue;\n\t      args = write ? [value, oldValue] : [value];\n\t      offset = write ? 2 : 1;\n\t      if (filter.args) {\n\t        for (j = 0, k = filter.args.length; j < k; j++) {\n\t          arg = filter.args[j];\n\t          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n\t        }\n\t      }\n\t      value = fn.apply(this, args);\n\t    }\n\t    return value;\n\t  };\n\t\n\t  /**\n\t   * Resolve a component, depending on whether the component\n\t   * is defined normally or using an async factory function.\n\t   * Resolves synchronously if already resolved, otherwise\n\t   * resolves asynchronously and caches the resolved\n\t   * constructor on the factory.\n\t   *\n\t   * @param {String|Function} value\n\t   * @param {Function} cb\n\t   */\n\t\n\t  Vue.prototype._resolveComponent = function (value, cb) {\n\t    var factory;\n\t    if (typeof value === 'function') {\n\t      factory = value;\n\t    } else {\n\t      factory = resolveAsset(this.$options, 'components', value, true);\n\t    }\n\t    /* istanbul ignore if */\n\t    if (!factory) {\n\t      return;\n\t    }\n\t    // async component factory\n\t    if (!factory.options) {\n\t      if (factory.resolved) {\n\t        // cached\n\t        cb(factory.resolved);\n\t      } else if (factory.requested) {\n\t        // pool callbacks\n\t        factory.pendingCallbacks.push(cb);\n\t      } else {\n\t        factory.requested = true;\n\t        var cbs = factory.pendingCallbacks = [cb];\n\t        factory.call(this, function resolve(res) {\n\t          if (isPlainObject(res)) {\n\t            res = Vue.extend(res);\n\t          }\n\t          // cache resolved\n\t          factory.resolved = res;\n\t          // invoke callbacks\n\t          for (var i = 0, l = cbs.length; i < l; i++) {\n\t            cbs[i](res);\n\t          }\n\t        }, function reject(reason) {\n\t          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n\t        });\n\t      }\n\t    } else {\n\t      // normal component\n\t      cb(factory);\n\t    }\n\t  };\n\t}\n\t\n\tvar filterRE$1 = /[^|]\\|[^|]/;\n\t\n\tfunction dataAPI (Vue) {\n\t  /**\n\t   * Get the value from an expression on this vm.\n\t   *\n\t   * @param {String} exp\n\t   * @param {Boolean} [asStatement]\n\t   * @return {*}\n\t   */\n\t\n\t  Vue.prototype.$get = function (exp, asStatement) {\n\t    var res = parseExpression(exp);\n\t    if (res) {\n\t      if (asStatement) {\n\t        var self = this;\n\t        return function statementHandler() {\n\t          self.$arguments = toArray(arguments);\n\t          var result = res.get.call(self, self);\n\t          self.$arguments = null;\n\t          return result;\n\t        };\n\t      } else {\n\t        try {\n\t          return res.get.call(this, this);\n\t        } catch (e) {}\n\t      }\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Set the value from an expression on this vm.\n\t   * The expression must be a valid left-hand\n\t   * expression in an assignment.\n\t   *\n\t   * @param {String} exp\n\t   * @param {*} val\n\t   */\n\t\n\t  Vue.prototype.$set = function (exp, val) {\n\t    var res = parseExpression(exp, true);\n\t    if (res && res.set) {\n\t      res.set.call(this, this, val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Delete a property on the VM\n\t   *\n\t   * @param {String} key\n\t   */\n\t\n\t  Vue.prototype.$delete = function (key) {\n\t    del(this._data, key);\n\t  };\n\t\n\t  /**\n\t   * Watch an expression, trigger callback when its\n\t   * value changes.\n\t   *\n\t   * @param {String|Function} expOrFn\n\t   * @param {Function} cb\n\t   * @param {Object} [options]\n\t   *                 - {Boolean} deep\n\t   *                 - {Boolean} immediate\n\t   * @return {Function} - unwatchFn\n\t   */\n\t\n\t  Vue.prototype.$watch = function (expOrFn, cb, options) {\n\t    var vm = this;\n\t    var parsed;\n\t    if (typeof expOrFn === 'string') {\n\t      parsed = parseDirective(expOrFn);\n\t      expOrFn = parsed.expression;\n\t    }\n\t    var watcher = new Watcher(vm, expOrFn, cb, {\n\t      deep: options && options.deep,\n\t      sync: options && options.sync,\n\t      filters: parsed && parsed.filters,\n\t      user: !options || options.user !== false\n\t    });\n\t    if (options && options.immediate) {\n\t      cb.call(vm, watcher.value);\n\t    }\n\t    return function unwatchFn() {\n\t      watcher.teardown();\n\t    };\n\t  };\n\t\n\t  /**\n\t   * Evaluate a text directive, including filters.\n\t   *\n\t   * @param {String} text\n\t   * @param {Boolean} [asStatement]\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$eval = function (text, asStatement) {\n\t    // check for filters.\n\t    if (filterRE$1.test(text)) {\n\t      var dir = parseDirective(text);\n\t      // the filter regex check might give false positive\n\t      // for pipes inside strings, so it's possible that\n\t      // we don't get any filters here\n\t      var val = this.$get(dir.expression, asStatement);\n\t      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n\t    } else {\n\t      // no filter\n\t      return this.$get(text, asStatement);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Interpolate a piece of template text.\n\t   *\n\t   * @param {String} text\n\t   * @return {String}\n\t   */\n\t\n\t  Vue.prototype.$interpolate = function (text) {\n\t    var tokens = parseText(text);\n\t    var vm = this;\n\t    if (tokens) {\n\t      if (tokens.length === 1) {\n\t        return vm.$eval(tokens[0].value) + '';\n\t      } else {\n\t        return tokens.map(function (token) {\n\t          return token.tag ? vm.$eval(token.value) : token.value;\n\t        }).join('');\n\t      }\n\t    } else {\n\t      return text;\n\t    }\n\t  };\n\t\n\t  /**\n\t   * Log instance data as a plain JS object\n\t   * so that it is easier to inspect in console.\n\t   * This method assumes console is available.\n\t   *\n\t   * @param {String} [path]\n\t   */\n\t\n\t  Vue.prototype.$log = function (path) {\n\t    var data = path ? getPath(this._data, path) : this._data;\n\t    if (data) {\n\t      data = clean(data);\n\t    }\n\t    // include computed fields\n\t    if (!path) {\n\t      var key;\n\t      for (key in this.$options.computed) {\n\t        data[key] = clean(this[key]);\n\t      }\n\t      if (this._props) {\n\t        for (key in this._props) {\n\t          data[key] = clean(this[key]);\n\t        }\n\t      }\n\t    }\n\t    console.log(data);\n\t  };\n\t\n\t  /**\n\t   * \"clean\" a getter/setter converted object into a plain\n\t   * object copy.\n\t   *\n\t   * @param {Object} - obj\n\t   * @return {Object}\n\t   */\n\t\n\t  function clean(obj) {\n\t    return JSON.parse(JSON.stringify(obj));\n\t  }\n\t}\n\t\n\tfunction domAPI (Vue) {\n\t  /**\n\t   * Convenience on-instance nextTick. The callback is\n\t   * auto-bound to the instance, and this avoids component\n\t   * modules having to rely on the global Vue.\n\t   *\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$nextTick = function (fn) {\n\t    nextTick(fn, this);\n\t  };\n\t\n\t  /**\n\t   * Append instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, append, appendWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Prepend instance to target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.hasChildNodes()) {\n\t      this.$before(target.firstChild, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Insert instance before target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$before = function (target, cb, withTransition) {\n\t    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n\t  };\n\t\n\t  /**\n\t   * Insert instance after target\n\t   *\n\t   * @param {Node} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$after = function (target, cb, withTransition) {\n\t    target = query(target);\n\t    if (target.nextSibling) {\n\t      this.$before(target.nextSibling, cb, withTransition);\n\t    } else {\n\t      this.$appendTo(target.parentNode, cb, withTransition);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove instance from DOM\n\t   *\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition] - defaults to true\n\t   */\n\t\n\t  Vue.prototype.$remove = function (cb, withTransition) {\n\t    if (!this.$el.parentNode) {\n\t      return cb && cb();\n\t    }\n\t    var inDocument = this._isAttached && inDoc(this.$el);\n\t    // if we are not in document, no need to check\n\t    // for transitions\n\t    if (!inDocument) withTransition = false;\n\t    var self = this;\n\t    var realCb = function realCb() {\n\t      if (inDocument) self._callHook('detached');\n\t      if (cb) cb();\n\t    };\n\t    if (this._isFragment) {\n\t      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n\t    } else {\n\t      var op = withTransition === false ? removeWithCb : removeWithTransition;\n\t      op(this.$el, this, realCb);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Shared DOM insertion function.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {Element} target\n\t   * @param {Function} [cb]\n\t   * @param {Boolean} [withTransition]\n\t   * @param {Function} op1 - op for non-transition insert\n\t   * @param {Function} op2 - op for transition insert\n\t   * @return vm\n\t   */\n\t\n\t  function insert(vm, target, cb, withTransition, op1, op2) {\n\t    target = query(target);\n\t    var targetIsDetached = !inDoc(target);\n\t    var op = withTransition === false || targetIsDetached ? op1 : op2;\n\t    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n\t    if (vm._isFragment) {\n\t      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n\t        op(node, target, vm);\n\t      });\n\t      cb && cb();\n\t    } else {\n\t      op(vm.$el, target, vm, cb);\n\t    }\n\t    if (shouldCallHook) {\n\t      vm._callHook('attached');\n\t    }\n\t    return vm;\n\t  }\n\t\n\t  /**\n\t   * Check for selectors\n\t   *\n\t   * @param {String|Element} el\n\t   */\n\t\n\t  function query(el) {\n\t    return typeof el === 'string' ? document.querySelector(el) : el;\n\t  }\n\t\n\t  /**\n\t   * Append operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function append(el, target, vm, cb) {\n\t    target.appendChild(el);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * InsertBefore operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Node} target\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function beforeWithCb(el, target, vm, cb) {\n\t    before(el, target);\n\t    if (cb) cb();\n\t  }\n\t\n\t  /**\n\t   * Remove operation that takes a callback.\n\t   *\n\t   * @param {Node} el\n\t   * @param {Vue} vm - unused\n\t   * @param {Function} [cb]\n\t   */\n\t\n\t  function removeWithCb(el, vm, cb) {\n\t    remove(el);\n\t    if (cb) cb();\n\t  }\n\t}\n\t\n\tfunction eventsAPI (Vue) {\n\t  /**\n\t   * Listen on the given `event` with `fn`.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$on = function (event, fn) {\n\t    (this._events[event] || (this._events[event] = [])).push(fn);\n\t    modifyListenerCount(this, event, 1);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Adds an `event` listener that will be invoked a single\n\t   * time then automatically removed.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$once = function (event, fn) {\n\t    var self = this;\n\t    function on() {\n\t      self.$off(event, on);\n\t      fn.apply(this, arguments);\n\t    }\n\t    on.fn = fn;\n\t    this.$on(event, on);\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Remove the given callback for `event` or all\n\t   * registered callbacks.\n\t   *\n\t   * @param {String} event\n\t   * @param {Function} fn\n\t   */\n\t\n\t  Vue.prototype.$off = function (event, fn) {\n\t    var cbs;\n\t    // all\n\t    if (!arguments.length) {\n\t      if (this.$parent) {\n\t        for (event in this._events) {\n\t          cbs = this._events[event];\n\t          if (cbs) {\n\t            modifyListenerCount(this, event, -cbs.length);\n\t          }\n\t        }\n\t      }\n\t      this._events = {};\n\t      return this;\n\t    }\n\t    // specific event\n\t    cbs = this._events[event];\n\t    if (!cbs) {\n\t      return this;\n\t    }\n\t    if (arguments.length === 1) {\n\t      modifyListenerCount(this, event, -cbs.length);\n\t      this._events[event] = null;\n\t      return this;\n\t    }\n\t    // specific handler\n\t    var cb;\n\t    var i = cbs.length;\n\t    while (i--) {\n\t      cb = cbs[i];\n\t      if (cb === fn || cb.fn === fn) {\n\t        modifyListenerCount(this, event, -1);\n\t        cbs.splice(i, 1);\n\t        break;\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Trigger an event on self.\n\t   *\n\t   * @param {String|Object} event\n\t   * @return {Boolean} shouldPropagate\n\t   */\n\t\n\t  Vue.prototype.$emit = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    var cbs = this._events[event];\n\t    var shouldPropagate = isSource || !cbs;\n\t    if (cbs) {\n\t      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n\t      // this is a somewhat hacky solution to the question raised\n\t      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n\t      // the propagation handling is somewhat broken. Therefore we\n\t      // need to treat these inline callbacks differently.\n\t      var hasParentCbs = isSource && cbs.some(function (cb) {\n\t        return cb._fromParent;\n\t      });\n\t      if (hasParentCbs) {\n\t        shouldPropagate = false;\n\t      }\n\t      var args = toArray(arguments, 1);\n\t      for (var i = 0, l = cbs.length; i < l; i++) {\n\t        var cb = cbs[i];\n\t        var res = cb.apply(this, args);\n\t        if (res === true && (!hasParentCbs || cb._fromParent)) {\n\t          shouldPropagate = true;\n\t        }\n\t      }\n\t    }\n\t    return shouldPropagate;\n\t  };\n\t\n\t  /**\n\t   * Recursively broadcast an event to all children instances.\n\t   *\n\t   * @param {String|Object} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$broadcast = function (event) {\n\t    var isSource = typeof event === 'string';\n\t    event = isSource ? event : event.name;\n\t    // if no child has registered for this event,\n\t    // then there's no need to broadcast.\n\t    if (!this._eventsCount[event]) return;\n\t    var children = this.$children;\n\t    var args = toArray(arguments);\n\t    if (isSource) {\n\t      // use object event to indicate non-source emit\n\t      // on children\n\t      args[0] = { name: event, source: this };\n\t    }\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      var child = children[i];\n\t      var shouldPropagate = child.$emit.apply(child, args);\n\t      if (shouldPropagate) {\n\t        child.$broadcast.apply(child, args);\n\t      }\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Recursively propagate an event up the parent chain.\n\t   *\n\t   * @param {String} event\n\t   * @param {...*} additional arguments\n\t   */\n\t\n\t  Vue.prototype.$dispatch = function (event) {\n\t    var shouldPropagate = this.$emit.apply(this, arguments);\n\t    if (!shouldPropagate) return;\n\t    var parent = this.$parent;\n\t    var args = toArray(arguments);\n\t    // use object event to indicate non-source emit\n\t    // on parents\n\t    args[0] = { name: event, source: this };\n\t    while (parent) {\n\t      shouldPropagate = parent.$emit.apply(parent, args);\n\t      parent = shouldPropagate ? parent.$parent : null;\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Modify the listener counts on all parents.\n\t   * This bookkeeping allows $broadcast to return early when\n\t   * no child has listened to a certain event.\n\t   *\n\t   * @param {Vue} vm\n\t   * @param {String} event\n\t   * @param {Number} count\n\t   */\n\t\n\t  var hookRE = /^hook:/;\n\t  function modifyListenerCount(vm, event, count) {\n\t    var parent = vm.$parent;\n\t    // hooks do not get broadcasted so no need\n\t    // to do bookkeeping for them\n\t    if (!parent || !count || hookRE.test(event)) return;\n\t    while (parent) {\n\t      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n\t      parent = parent.$parent;\n\t    }\n\t  }\n\t}\n\t\n\tfunction lifecycleAPI (Vue) {\n\t  /**\n\t   * Set instance target element and kick off the compilation\n\t   * process. The passed in `el` can be a selector string, an\n\t   * existing Element, or a DocumentFragment (for block\n\t   * instances).\n\t   *\n\t   * @param {Element|DocumentFragment|string} el\n\t   * @public\n\t   */\n\t\n\t  Vue.prototype.$mount = function (el) {\n\t    if (this._isCompiled) {\n\t      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n\t      return;\n\t    }\n\t    el = query(el);\n\t    if (!el) {\n\t      el = document.createElement('div');\n\t    }\n\t    this._compile(el);\n\t    this._initDOMHooks();\n\t    if (inDoc(this.$el)) {\n\t      this._callHook('attached');\n\t      ready.call(this);\n\t    } else {\n\t      this.$once('hook:attached', ready);\n\t    }\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Mark an instance as ready.\n\t   */\n\t\n\t  function ready() {\n\t    this._isAttached = true;\n\t    this._isReady = true;\n\t    this._callHook('ready');\n\t  }\n\t\n\t  /**\n\t   * Teardown the instance, simply delegate to the internal\n\t   * _destroy.\n\t   *\n\t   * @param {Boolean} remove\n\t   * @param {Boolean} deferCleanup\n\t   */\n\t\n\t  Vue.prototype.$destroy = function (remove, deferCleanup) {\n\t    this._destroy(remove, deferCleanup);\n\t  };\n\t\n\t  /**\n\t   * Partially compile a piece of DOM and return a\n\t   * decompile function.\n\t   *\n\t   * @param {Element|DocumentFragment} el\n\t   * @param {Vue} [host]\n\t   * @param {Object} [scope]\n\t   * @param {Fragment} [frag]\n\t   * @return {Function}\n\t   */\n\t\n\t  Vue.prototype.$compile = function (el, host, scope, frag) {\n\t    return compile(el, this.$options, true)(this, el, host, scope, frag);\n\t  };\n\t}\n\t\n\t/**\n\t * The exposed Vue constructor.\n\t *\n\t * API conventions:\n\t * - public API methods/properties are prefixed with `$`\n\t * - internal methods/properties are prefixed with `_`\n\t * - non-prefixed properties are assumed to be proxied user\n\t *   data.\n\t *\n\t * @constructor\n\t * @param {Object} [options]\n\t * @public\n\t */\n\t\n\tfunction Vue(options) {\n\t  this._init(options);\n\t}\n\t\n\t// install internals\n\tinitMixin(Vue);\n\tstateMixin(Vue);\n\teventsMixin(Vue);\n\tlifecycleMixin(Vue);\n\tmiscMixin(Vue);\n\t\n\t// install instance APIs\n\tdataAPI(Vue);\n\tdomAPI(Vue);\n\teventsAPI(Vue);\n\tlifecycleAPI(Vue);\n\t\n\tvar slot = {\n\t\n\t  priority: SLOT,\n\t  params: ['name'],\n\t\n\t  bind: function bind() {\n\t    // this was resolved during component transclusion\n\t    var name = this.params.name || 'default';\n\t    var content = this.vm._slotContents && this.vm._slotContents[name];\n\t    if (!content || !content.hasChildNodes()) {\n\t      this.fallback();\n\t    } else {\n\t      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n\t    }\n\t  },\n\t\n\t  compile: function compile(content, context, host) {\n\t    if (content && context) {\n\t      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n\t        // if the inserted slot has v-if\n\t        // inject fallback content as the v-else\n\t        var elseBlock = document.createElement('template');\n\t        elseBlock.setAttribute('v-else', '');\n\t        elseBlock.innerHTML = this.el.innerHTML;\n\t        // the else block should be compiled in child scope\n\t        elseBlock._context = this.vm;\n\t        content.appendChild(elseBlock);\n\t      }\n\t      var scope = host ? host._scope : this._scope;\n\t      this.unlink = context.$compile(content, host, scope, this._frag);\n\t    }\n\t    if (content) {\n\t      replace(this.el, content);\n\t    } else {\n\t      remove(this.el);\n\t    }\n\t  },\n\t\n\t  fallback: function fallback() {\n\t    this.compile(extractContent(this.el, true), this.vm);\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.unlink) {\n\t      this.unlink();\n\t    }\n\t  }\n\t};\n\t\n\tvar partial = {\n\t\n\t  priority: PARTIAL,\n\t\n\t  params: ['name'],\n\t\n\t  // watch changes to name for dynamic partials\n\t  paramWatchers: {\n\t    name: function name(value) {\n\t      vIf.remove.call(this);\n\t      if (value) {\n\t        this.insert(value);\n\t      }\n\t    }\n\t  },\n\t\n\t  bind: function bind() {\n\t    this.anchor = createAnchor('v-partial');\n\t    replace(this.el, this.anchor);\n\t    this.insert(this.params.name);\n\t  },\n\t\n\t  insert: function insert(id) {\n\t    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n\t    if (partial) {\n\t      this.factory = new FragmentFactory(this.vm, partial);\n\t      vIf.insert.call(this);\n\t    }\n\t  },\n\t\n\t  unbind: function unbind() {\n\t    if (this.frag) {\n\t      this.frag.destroy();\n\t    }\n\t  }\n\t};\n\t\n\tvar elementDirectives = {\n\t  slot: slot,\n\t  partial: partial\n\t};\n\t\n\tvar convertArray = vFor._postProcess;\n\t\n\t/**\n\t * Limit filter for arrays\n\t *\n\t * @param {Number} n\n\t * @param {Number} offset (Decimal expected)\n\t */\n\t\n\tfunction limitBy(arr, n, offset) {\n\t  offset = offset ? parseInt(offset, 10) : 0;\n\t  n = toNumber(n);\n\t  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String} search\n\t * @param {String} [delimiter]\n\t * @param {String} ...dataKeys\n\t */\n\t\n\tfunction filterBy(arr, search, delimiter) {\n\t  arr = convertArray(arr);\n\t  if (search == null) {\n\t    return arr;\n\t  }\n\t  if (typeof search === 'function') {\n\t    return arr.filter(search);\n\t  }\n\t  // cast to lowercase string\n\t  search = ('' + search).toLowerCase();\n\t  // allow optional `in` delimiter\n\t  // because why not\n\t  var n = delimiter === 'in' ? 3 : 2;\n\t  // extract and flatten keys\n\t  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n\t  var res = [];\n\t  var item, key, val, j;\n\t  for (var i = 0, l = arr.length; i < l; i++) {\n\t    item = arr[i];\n\t    val = item && item.$value || item;\n\t    j = keys.length;\n\t    if (j) {\n\t      while (j--) {\n\t        key = keys[j];\n\t        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n\t          res.push(item);\n\t          break;\n\t        }\n\t      }\n\t    } else if (contains(item, search)) {\n\t      res.push(item);\n\t    }\n\t  }\n\t  return res;\n\t}\n\t\n\t/**\n\t * Filter filter for arrays\n\t *\n\t * @param {String|Array<String>|Function} ...sortKeys\n\t * @param {Number} [order]\n\t */\n\t\n\tfunction orderBy(arr) {\n\t  var comparator = null;\n\t  var sortKeys = undefined;\n\t  arr = convertArray(arr);\n\t\n\t  // determine order (last argument)\n\t  var args = toArray(arguments, 1);\n\t  var order = args[args.length - 1];\n\t  if (typeof order === 'number') {\n\t    order = order < 0 ? -1 : 1;\n\t    args = args.length > 1 ? args.slice(0, -1) : args;\n\t  } else {\n\t    order = 1;\n\t  }\n\t\n\t  // determine sortKeys & comparator\n\t  var firstArg = args[0];\n\t  if (!firstArg) {\n\t    return arr;\n\t  } else if (typeof firstArg === 'function') {\n\t    // custom comparator\n\t    comparator = function (a, b) {\n\t      return firstArg(a, b) * order;\n\t    };\n\t  } else {\n\t    // string keys. flatten first\n\t    sortKeys = Array.prototype.concat.apply([], args);\n\t    comparator = function (a, b, i) {\n\t      i = i || 0;\n\t      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n\t    };\n\t  }\n\t\n\t  function baseCompare(a, b, sortKeyIndex) {\n\t    var sortKey = sortKeys[sortKeyIndex];\n\t    if (sortKey) {\n\t      if (sortKey !== '$key') {\n\t        if (isObject(a) && '$value' in a) a = a.$value;\n\t        if (isObject(b) && '$value' in b) b = b.$value;\n\t      }\n\t      a = isObject(a) ? getPath(a, sortKey) : a;\n\t      b = isObject(b) ? getPath(b, sortKey) : b;\n\t    }\n\t    return a === b ? 0 : a > b ? order : -order;\n\t  }\n\t\n\t  // sort on a copy to avoid mutating original array\n\t  return arr.slice().sort(comparator);\n\t}\n\t\n\t/**\n\t * String contain helper\n\t *\n\t * @param {*} val\n\t * @param {String} search\n\t */\n\t\n\tfunction contains(val, search) {\n\t  var i;\n\t  if (isPlainObject(val)) {\n\t    var keys = Object.keys(val);\n\t    i = keys.length;\n\t    while (i--) {\n\t      if (contains(val[keys[i]], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (isArray(val)) {\n\t    i = val.length;\n\t    while (i--) {\n\t      if (contains(val[i], search)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else if (val != null) {\n\t    return val.toString().toLowerCase().indexOf(search) > -1;\n\t  }\n\t}\n\t\n\tvar digitsRE = /(\\d{3})(?=\\d)/g;\n\t\n\t// asset collections must be a plain object.\n\tvar filters = {\n\t\n\t  orderBy: orderBy,\n\t  filterBy: filterBy,\n\t  limitBy: limitBy,\n\t\n\t  /**\n\t   * Stringify value.\n\t   *\n\t   * @param {Number} indent\n\t   */\n\t\n\t  json: {\n\t    read: function read(value, indent) {\n\t      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n\t    },\n\t    write: function write(value) {\n\t      try {\n\t        return JSON.parse(value);\n\t      } catch (e) {\n\t        return value;\n\t      }\n\t    }\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'Abc'\n\t   */\n\t\n\t  capitalize: function capitalize(value) {\n\t    if (!value && value !== 0) return '';\n\t    value = value.toString();\n\t    return value.charAt(0).toUpperCase() + value.slice(1);\n\t  },\n\t\n\t  /**\n\t   * 'abc' => 'ABC'\n\t   */\n\t\n\t  uppercase: function uppercase(value) {\n\t    return value || value === 0 ? value.toString().toUpperCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 'AbC' => 'abc'\n\t   */\n\t\n\t  lowercase: function lowercase(value) {\n\t    return value || value === 0 ? value.toString().toLowerCase() : '';\n\t  },\n\t\n\t  /**\n\t   * 12345 => $12,345.00\n\t   *\n\t   * @param {String} sign\n\t   * @param {Number} decimals Decimal places\n\t   */\n\t\n\t  currency: function currency(value, _currency, decimals) {\n\t    value = parseFloat(value);\n\t    if (!isFinite(value) || !value && value !== 0) return '';\n\t    _currency = _currency != null ? _currency : '$';\n\t    decimals = decimals != null ? decimals : 2;\n\t    var stringified = Math.abs(value).toFixed(decimals);\n\t    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n\t    var i = _int.length % 3;\n\t    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n\t    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n\t    var sign = value < 0 ? '-' : '';\n\t    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n\t  },\n\t\n\t  /**\n\t   * 'item' => 'items'\n\t   *\n\t   * @params\n\t   *  an array of strings corresponding to\n\t   *  the single, double, triple ... forms of the word to\n\t   *  be pluralized. When the number to be pluralized\n\t   *  exceeds the length of the args, it will use the last\n\t   *  entry in the array.\n\t   *\n\t   *  e.g. ['single', 'double', 'triple', 'multiple']\n\t   */\n\t\n\t  pluralize: function pluralize(value) {\n\t    var args = toArray(arguments, 1);\n\t    var length = args.length;\n\t    if (length > 1) {\n\t      var index = value % 10 - 1;\n\t      return index in args ? args[index] : args[length - 1];\n\t    } else {\n\t      return args[0] + (value === 1 ? '' : 's');\n\t    }\n\t  },\n\t\n\t  /**\n\t   * Debounce a handler function.\n\t   *\n\t   * @param {Function} handler\n\t   * @param {Number} delay = 300\n\t   * @return {Function}\n\t   */\n\t\n\t  debounce: function debounce(handler, delay) {\n\t    if (!handler) return;\n\t    if (!delay) {\n\t      delay = 300;\n\t    }\n\t    return _debounce(handler, delay);\n\t  }\n\t};\n\t\n\tfunction installGlobalAPI (Vue) {\n\t  /**\n\t   * Vue and every constructor that extends Vue has an\n\t   * associated options object, which can be accessed during\n\t   * compilation steps as `this.constructor.options`.\n\t   *\n\t   * These can be seen as the default options of every\n\t   * Vue instance.\n\t   */\n\t\n\t  Vue.options = {\n\t    directives: directives,\n\t    elementDirectives: elementDirectives,\n\t    filters: filters,\n\t    transitions: {},\n\t    components: {},\n\t    partials: {},\n\t    replace: true\n\t  };\n\t\n\t  /**\n\t   * Expose useful internals\n\t   */\n\t\n\t  Vue.util = util;\n\t  Vue.config = config;\n\t  Vue.set = set;\n\t  Vue['delete'] = del;\n\t  Vue.nextTick = nextTick;\n\t\n\t  /**\n\t   * The following are exposed for advanced usage / plugins\n\t   */\n\t\n\t  Vue.compiler = compiler;\n\t  Vue.FragmentFactory = FragmentFactory;\n\t  Vue.internalDirectives = internalDirectives;\n\t  Vue.parsers = {\n\t    path: path,\n\t    text: text,\n\t    template: template,\n\t    directive: directive,\n\t    expression: expression\n\t  };\n\t\n\t  /**\n\t   * Each instance constructor, including Vue, has a unique\n\t   * cid. This enables us to create wrapped \"child\n\t   * constructors\" for prototypal inheritance and cache them.\n\t   */\n\t\n\t  Vue.cid = 0;\n\t  var cid = 1;\n\t\n\t  /**\n\t   * Class inheritance\n\t   *\n\t   * @param {Object} extendOptions\n\t   */\n\t\n\t  Vue.extend = function (extendOptions) {\n\t    extendOptions = extendOptions || {};\n\t    var Super = this;\n\t    var isFirstExtend = Super.cid === 0;\n\t    if (isFirstExtend && extendOptions._Ctor) {\n\t      return extendOptions._Ctor;\n\t    }\n\t    var name = extendOptions.name || Super.options.name;\n\t    if (process.env.NODE_ENV !== 'production') {\n\t      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n\t        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n\t        name = null;\n\t      }\n\t    }\n\t    var Sub = createClass(name || 'VueComponent');\n\t    Sub.prototype = Object.create(Super.prototype);\n\t    Sub.prototype.constructor = Sub;\n\t    Sub.cid = cid++;\n\t    Sub.options = mergeOptions(Super.options, extendOptions);\n\t    Sub['super'] = Super;\n\t    // allow further extension\n\t    Sub.extend = Super.extend;\n\t    // create asset registers, so extended classes\n\t    // can have their private assets too.\n\t    config._assetTypes.forEach(function (type) {\n\t      Sub[type] = Super[type];\n\t    });\n\t    // enable recursive self-lookup\n\t    if (name) {\n\t      Sub.options.components[name] = Sub;\n\t    }\n\t    // cache constructor\n\t    if (isFirstExtend) {\n\t      extendOptions._Ctor = Sub;\n\t    }\n\t    return Sub;\n\t  };\n\t\n\t  /**\n\t   * A function that returns a sub-class constructor with the\n\t   * given name. This gives us much nicer output when\n\t   * logging instances in the console.\n\t   *\n\t   * @param {String} name\n\t   * @return {Function}\n\t   */\n\t\n\t  function createClass(name) {\n\t    /* eslint-disable no-new-func */\n\t    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n\t    /* eslint-enable no-new-func */\n\t  }\n\t\n\t  /**\n\t   * Plugin system\n\t   *\n\t   * @param {Object} plugin\n\t   */\n\t\n\t  Vue.use = function (plugin) {\n\t    /* istanbul ignore if */\n\t    if (plugin.installed) {\n\t      return;\n\t    }\n\t    // additional parameters\n\t    var args = toArray(arguments, 1);\n\t    args.unshift(this);\n\t    if (typeof plugin.install === 'function') {\n\t      plugin.install.apply(plugin, args);\n\t    } else {\n\t      plugin.apply(null, args);\n\t    }\n\t    plugin.installed = true;\n\t    return this;\n\t  };\n\t\n\t  /**\n\t   * Apply a global mixin by merging it into the default\n\t   * options.\n\t   */\n\t\n\t  Vue.mixin = function (mixin) {\n\t    Vue.options = mergeOptions(Vue.options, mixin);\n\t  };\n\t\n\t  /**\n\t   * Create asset registration methods with the following\n\t   * signature:\n\t   *\n\t   * @param {String} id\n\t   * @param {*} definition\n\t   */\n\t\n\t  config._assetTypes.forEach(function (type) {\n\t    Vue[type] = function (id, definition) {\n\t      if (!definition) {\n\t        return this.options[type + 's'][id];\n\t      } else {\n\t        /* istanbul ignore if */\n\t        if (process.env.NODE_ENV !== 'production') {\n\t          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n\t            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n\t          }\n\t        }\n\t        if (type === 'component' && isPlainObject(definition)) {\n\t          if (!definition.name) {\n\t            definition.name = id;\n\t          }\n\t          definition = Vue.extend(definition);\n\t        }\n\t        this.options[type + 's'][id] = definition;\n\t        return definition;\n\t      }\n\t    };\n\t  });\n\t\n\t  // expose internal transition API\n\t  extend(Vue.transition, transition);\n\t}\n\t\n\tinstallGlobalAPI(Vue);\n\t\n\tVue.version = '1.0.26';\n\t\n\t// devtools global hook\n\t/* istanbul ignore next */\n\tsetTimeout(function () {\n\t  if (config.devtools) {\n\t    if (devtools) {\n\t      devtools.emit('init', Vue);\n\t    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n\t      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n\t    }\n\t  }\n\t}, 0);\n\t\n\tmodule.exports = Vue;\n\t/* WEBPACK VAR INJECTION */}.call(exports, (function() { return this; }()), __webpack_require__(7)))\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** main.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/dist/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 25d3a092ffaaefaf91fd\n **/","import Vue from 'vue';\nimport app from './app';\nnew Vue(app);\n\n\n/** WEBPACK FOOTER **\n ** ./example/main.js\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\n// css base code, injected by the css-loader\r\nmodule.exports = function() {\r\n\tvar list = [];\r\n\r\n\t// return the list of modules as css string\r\n\tlist.toString = function toString() {\r\n\t\tvar result = [];\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar item = this[i];\r\n\t\t\tif(item[2]) {\r\n\t\t\t\tresult.push(\"@media \" + item[2] + \"{\" + item[1] + \"}\");\r\n\t\t\t} else {\r\n\t\t\t\tresult.push(item[1]);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn result.join(\"\");\r\n\t};\r\n\r\n\t// import a list of modules into the list\r\n\tlist.i = function(modules, mediaQuery) {\r\n\t\tif(typeof modules === \"string\")\r\n\t\t\tmodules = [[null, modules, \"\"]];\r\n\t\tvar alreadyImportedModules = {};\r\n\t\tfor(var i = 0; i < this.length; i++) {\r\n\t\t\tvar id = this[i][0];\r\n\t\t\tif(typeof id === \"number\")\r\n\t\t\t\talreadyImportedModules[id] = true;\r\n\t\t}\r\n\t\tfor(i = 0; i < modules.length; i++) {\r\n\t\t\tvar item = modules[i];\r\n\t\t\t// skip already imported module\r\n\t\t\t// this implementation is not 100% perfect for weird media query combinations\r\n\t\t\t//  when a module is imported multiple times with different media queries.\r\n\t\t\t//  I hope this will never occur (Hey this way we have smaller bundles)\r\n\t\t\tif(typeof item[0] !== \"number\" || !alreadyImportedModules[item[0]]) {\r\n\t\t\t\tif(mediaQuery && !item[2]) {\r\n\t\t\t\t\titem[2] = mediaQuery;\r\n\t\t\t\t} else if(mediaQuery) {\r\n\t\t\t\t\titem[2] = \"(\" + item[2] + \") and (\" + mediaQuery + \")\";\r\n\t\t\t\t}\r\n\t\t\t\tlist.push(item);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\treturn list;\r\n};\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader/lib/css-base.js\n ** module id = 1\n ** module chunks = 0\n **/","/*\r\n\tMIT License http://www.opensource.org/licenses/mit-license.php\r\n\tAuthor Tobias Koppers @sokra\r\n*/\r\nvar stylesInDom = {},\r\n\tmemoize = function(fn) {\r\n\t\tvar memo;\r\n\t\treturn function () {\r\n\t\t\tif (typeof memo === \"undefined\") memo = fn.apply(this, arguments);\r\n\t\t\treturn memo;\r\n\t\t};\r\n\t},\r\n\tisOldIE = memoize(function() {\r\n\t\treturn /msie [6-9]\\b/.test(window.navigator.userAgent.toLowerCase());\r\n\t}),\r\n\tgetHeadElement = memoize(function () {\r\n\t\treturn document.head || document.getElementsByTagName(\"head\")[0];\r\n\t}),\r\n\tsingletonElement = null,\r\n\tsingletonCounter = 0;\r\n\r\nmodule.exports = function(list, options) {\r\n\tif(typeof DEBUG !== \"undefined\" && DEBUG) {\r\n\t\tif(typeof document !== \"object\") throw new Error(\"The style-loader cannot be used in a non-browser environment\");\r\n\t}\r\n\r\n\toptions = options || {};\r\n\t// Force single-tag solution on IE6-9, which has a hard limit on the # of <style>\r\n\t// tags it will allow on a page\r\n\tif (typeof options.singleton === \"undefined\") options.singleton = isOldIE();\r\n\r\n\tvar styles = listToStyles(list);\r\n\taddStylesToDom(styles, options);\r\n\r\n\treturn function update(newList) {\r\n\t\tvar mayRemove = [];\r\n\t\tfor(var i = 0; i < styles.length; i++) {\r\n\t\t\tvar item = styles[i];\r\n\t\t\tvar domStyle = stylesInDom[item.id];\r\n\t\t\tdomStyle.refs--;\r\n\t\t\tmayRemove.push(domStyle);\r\n\t\t}\r\n\t\tif(newList) {\r\n\t\t\tvar newStyles = listToStyles(newList);\r\n\t\t\taddStylesToDom(newStyles, options);\r\n\t\t}\r\n\t\tfor(var i = 0; i < mayRemove.length; i++) {\r\n\t\t\tvar domStyle = mayRemove[i];\r\n\t\t\tif(domStyle.refs === 0) {\r\n\t\t\t\tfor(var j = 0; j < domStyle.parts.length; j++)\r\n\t\t\t\t\tdomStyle.parts[j]();\r\n\t\t\t\tdelete stylesInDom[domStyle.id];\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n\r\nfunction addStylesToDom(styles, options) {\r\n\tfor(var i = 0; i < styles.length; i++) {\r\n\t\tvar item = styles[i];\r\n\t\tvar domStyle = stylesInDom[item.id];\r\n\t\tif(domStyle) {\r\n\t\t\tdomStyle.refs++;\r\n\t\t\tfor(var j = 0; j < domStyle.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts[j](item.parts[j]);\r\n\t\t\t}\r\n\t\t\tfor(; j < item.parts.length; j++) {\r\n\t\t\t\tdomStyle.parts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\tvar parts = [];\r\n\t\t\tfor(var j = 0; j < item.parts.length; j++) {\r\n\t\t\t\tparts.push(addStyle(item.parts[j], options));\r\n\t\t\t}\r\n\t\t\tstylesInDom[item.id] = {id: item.id, refs: 1, parts: parts};\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction listToStyles(list) {\r\n\tvar styles = [];\r\n\tvar newStyles = {};\r\n\tfor(var i = 0; i < list.length; i++) {\r\n\t\tvar item = list[i];\r\n\t\tvar id = item[0];\r\n\t\tvar css = item[1];\r\n\t\tvar media = item[2];\r\n\t\tvar sourceMap = item[3];\r\n\t\tvar part = {css: css, media: media, sourceMap: sourceMap};\r\n\t\tif(!newStyles[id])\r\n\t\t\tstyles.push(newStyles[id] = {id: id, parts: [part]});\r\n\t\telse\r\n\t\t\tnewStyles[id].parts.push(part);\r\n\t}\r\n\treturn styles;\r\n}\r\n\r\nfunction createStyleElement() {\r\n\tvar styleElement = document.createElement(\"style\");\r\n\tvar head = getHeadElement();\r\n\tstyleElement.type = \"text/css\";\r\n\thead.appendChild(styleElement);\r\n\treturn styleElement;\r\n}\r\n\r\nfunction createLinkElement() {\r\n\tvar linkElement = document.createElement(\"link\");\r\n\tvar head = getHeadElement();\r\n\tlinkElement.rel = \"stylesheet\";\r\n\thead.appendChild(linkElement);\r\n\treturn linkElement;\r\n}\r\n\r\nfunction addStyle(obj, options) {\r\n\tvar styleElement, update, remove;\r\n\r\n\tif (options.singleton) {\r\n\t\tvar styleIndex = singletonCounter++;\r\n\t\tstyleElement = singletonElement || (singletonElement = createStyleElement());\r\n\t\tupdate = applyToSingletonTag.bind(null, styleElement, styleIndex, false);\r\n\t\tremove = applyToSingletonTag.bind(null, styleElement, styleIndex, true);\r\n\t} else if(obj.sourceMap &&\r\n\t\ttypeof URL === \"function\" &&\r\n\t\ttypeof URL.createObjectURL === \"function\" &&\r\n\t\ttypeof URL.revokeObjectURL === \"function\" &&\r\n\t\ttypeof Blob === \"function\" &&\r\n\t\ttypeof btoa === \"function\") {\r\n\t\tstyleElement = createLinkElement();\r\n\t\tupdate = updateLink.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t\tif(styleElement.href)\r\n\t\t\t\tURL.revokeObjectURL(styleElement.href);\r\n\t\t};\r\n\t} else {\r\n\t\tstyleElement = createStyleElement();\r\n\t\tupdate = applyToTag.bind(null, styleElement);\r\n\t\tremove = function() {\r\n\t\t\tstyleElement.parentNode.removeChild(styleElement);\r\n\t\t};\r\n\t}\r\n\r\n\tupdate(obj);\r\n\r\n\treturn function updateStyle(newObj) {\r\n\t\tif(newObj) {\r\n\t\t\tif(newObj.css === obj.css && newObj.media === obj.media && newObj.sourceMap === obj.sourceMap)\r\n\t\t\t\treturn;\r\n\t\t\tupdate(obj = newObj);\r\n\t\t} else {\r\n\t\t\tremove();\r\n\t\t}\r\n\t};\r\n}\r\n\r\nvar replaceText = (function () {\r\n\tvar textStore = [];\r\n\r\n\treturn function (index, replacement) {\r\n\t\ttextStore[index] = replacement;\r\n\t\treturn textStore.filter(Boolean).join('\\n');\r\n\t};\r\n})();\r\n\r\nfunction applyToSingletonTag(styleElement, index, remove, obj) {\r\n\tvar css = remove ? \"\" : obj.css;\r\n\r\n\tif (styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = replaceText(index, css);\r\n\t} else {\r\n\t\tvar cssNode = document.createTextNode(css);\r\n\t\tvar childNodes = styleElement.childNodes;\r\n\t\tif (childNodes[index]) styleElement.removeChild(childNodes[index]);\r\n\t\tif (childNodes.length) {\r\n\t\t\tstyleElement.insertBefore(cssNode, childNodes[index]);\r\n\t\t} else {\r\n\t\t\tstyleElement.appendChild(cssNode);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nfunction applyToTag(styleElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(media) {\r\n\t\tstyleElement.setAttribute(\"media\", media)\r\n\t}\r\n\r\n\tif(styleElement.styleSheet) {\r\n\t\tstyleElement.styleSheet.cssText = css;\r\n\t} else {\r\n\t\twhile(styleElement.firstChild) {\r\n\t\t\tstyleElement.removeChild(styleElement.firstChild);\r\n\t\t}\r\n\t\tstyleElement.appendChild(document.createTextNode(css));\r\n\t}\r\n}\r\n\r\nfunction updateLink(linkElement, obj) {\r\n\tvar css = obj.css;\r\n\tvar media = obj.media;\r\n\tvar sourceMap = obj.sourceMap;\r\n\r\n\tif(sourceMap) {\r\n\t\t// http://stackoverflow.com/a/26603875\r\n\t\tcss += \"\\n/*# sourceMappingURL=data:application/json;base64,\" + btoa(unescape(encodeURIComponent(JSON.stringify(sourceMap)))) + \" */\";\r\n\t}\r\n\r\n\tvar blob = new Blob([css], { type: \"text/css\" });\r\n\r\n\tvar oldSrc = linkElement.href;\r\n\r\n\tlinkElement.href = URL.createObjectURL(blob);\r\n\r\n\tif(oldSrc)\r\n\t\tURL.revokeObjectURL(oldSrc);\r\n}\r\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader/addStyles.js\n ** module id = 2\n ** module chunks = 0\n **/","<script>\n    import Modal from '../src/Modal';\n\n    export default {\n        el: '#page',\n        components: {\n            Modal\n        },\n        events:{\n            MODAL_OK_EVENT(){\n                // you can manual set modal show or hide use this.modal.visible\n                // this.modal.visible = false;\n            },\n            MODAL_CANCEL_EVENT(){\n\n            }\n        },\n        data:{\n            modal:{\n                title:'I am modal title',\n                visible:false,\n                text:''\n            },\n            bgStyle:{\n                'z-index':'4000'\n            }\n        },\n        methods:{\n            onShowModal(){\n                this.modal.visible = !this.modal.visible;\n            }\n        }\n    };\n\n</script>\n\n<template>\n    <div>\n        <button @click=\"onShowModal\">Click Show Modal</button>\n        <modal :title=\"modal.title\" :visible.sync=\"modal.visible\" :bg-click=\"false\" :verify=\"true\" :bg-style=\"bgStyle\">\n            <label class=\"label\">Slot Area,write your code in here</label>\n            <p class=\"control\">\n                <label class=\"label\">Name:</label>\n                <input class=\"input\" type=\"text\" v-model=\"modal.text\" placeholder=\"Your name\">\n            </p>\n        </modal>\n    </div>\n</template>\n\n<style lang=\"less\" scoped>\n    .control {\n        position: relative;\n        text-align: left;\n    }\n    button{\n        -moz-appearance: none;\n        -webkit-appearance: none;\n        -webkit-box-align: center;\n        -ms-flex-align: center;\n        align-items: center;\n        background-color: #fff;\n        border: 1px solid #d3d6db;\n        border-radius: 3px;\n        color: #222324;\n        display: -webkit-inline-box;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n        font-size: 14px;\n        height: 32px;\n        -webkit-box-pack: start;\n        -ms-flex-pack: start;\n        justify-content: flex-start;\n        line-height: 24px;\n        padding-left: 8px;\n        padding-right: 8px;\n        position: relative;\n        vertical-align: top;\n        -webkit-box-pack: center;\n        -ms-flex-pack: center;\n        justify-content: center;\n        padding-left: 10px;\n        padding-right: 10px;\n        text-align: center;\n        white-space: nowrap;\n    }\n    .label {\n        color: #222324;\n        display: block;\n        font-weight: 700;\n    }\n    input{\n        -moz-appearance: none;\n        -webkit-appearance: none;\n        -webkit-box-align: center;\n        -ms-flex-align: center;\n        align-items: center;\n        background-color: #fff;\n        border: 1px solid #d3d6db;\n        border-radius: 3px;\n        color: #222324;\n        display: -webkit-inline-box;\n        display: -ms-inline-flexbox;\n        display: inline-flex;\n        font-size: 14px;\n        height: 32px;\n        -webkit-box-pack: start;\n        -ms-flex-pack: start;\n        justify-content: flex-start;\n        line-height: 24px;\n        padding-left: 8px;\n        padding-right: 8px;\n        position: relative;\n        vertical-align: top;\n        box-shadow: inset 0 1px 2px hsla(0,0%,7%,.1);\n    }\n</style>\n\n\n/** WEBPACK FOOTER **\n ** app.vue?237eee95\n **/","<template>\n    <div v-show=\"visible\" class=\"modal-background\" @click=\"bgClick\" :style=\"bgStyle\"></div>\n    <div v-el:content class=\"modal-content\" v-show=\"visible\" :transition=\"transition\" :style=\"[contentStyle,bodyStyle]\">\n        <header v-if=\"!onlyBody\" class=\"modal-content-head\">\n            <p class=\"modal-content-title\">{{ title }}</p>\n            <button class=\"delete\" @click=\"hide\"></button>\n        </header>\n        <section class=\"modal-content-body\">\n            <slot></slot>\n        </section>\n        <footer v-if=\"!onlyBody\" class=\"modal-content-foot clearfix\">\n            <div class=\"fright\">\n                <a class=\"button\" @click=\"cancel\">{{ cancelText }}</a>\n                <a class=\"button is-primary\" @click=\"ok\">{{ okText }}</a>\n            </div>\n        </footer>\n    </div>\n</template>\n\n<script>\n    export default {\n        props: {\n            title: {\n                type: String,\n                default:'Modal'\n            },\n            okText: {\n                type: String,\n                default: 'Ok'\n            },\n            cancelText: {\n                type: String,\n                default: 'Cancel'\n            },\n            visible: {\n                type: Boolean,\n                default: false\n            },\n            transition: {\n                type: String,\n                default: 'bounce'\n            },\n            verify: {\n                type: Boolean,\n                default: false\n            },\n            bgClick: {\n                type: Boolean,\n                default: true\n            },\n            onlyBody: {\n                type: Boolean,\n                default: false\n            },\n            bgStyle:{\n                type:Object,\n                default(){\n                    return {};\n                }\n            },\n            contentStyle:{\n                type:Object,\n                default(){\n                    return {};\n                }\n            }\n        },\n        data(){\n            return {\n                bodyStyle: {}\n            }\n        },\n        watch: {\n            visible(){\n                if (this.visible) {\n                    this.computeStyle();\n                }\n            }\n        },\n        ready(){\n            this.bind(window,\"resize\",function(){\n                this.computeStyle();\n            }.bind(this));\n        },\n        methods: {\n            show () {\n                this.visible = true\n            },\n            hide () {\n                this.visible = false\n            },\n            bgClick(){\n                if (this.bgClick) {\n                    this.hide();\n                }\n            },\n            ok () {\n                if (!this.verify) {\n                    this.hide();\n                }\n                this.$dispatch('MODAL_OK_EVENT')\n            },\n            cancel () {\n                this.hide();\n                this.$dispatch('MODAL_CANCEL_EVENT')\n            },\n            computeStyle(){\n                this.bodyStyle = {\n                    top: `${Math.max((window.innerHeight - this.$els.content.offsetHeight) / 2,0)}px`,\n                    left: `${Math.max((window.innerWidth - this.$els.content.offsetWidth) / 2,0)}px`\n                }\n            },\n            bind(el,eventName,fn){\n                if (window.addEventListener) {\n                    el.addEventListener(eventName, fn,false);\n                } else if (window.attachEvent) {\n                    el.attachEvent(\"on\" + eventName, fn);\n                }\n            }\n        }\n    }\n</script>\n\n<style lang=\"less\" scoped>\n    .modal-background {\n        position: fixed;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        background-color: rgba(0, 0, 0, .5);\n        z-index: 5000;\n    }\n    .clearfix:after {\n        content: \".\";\n        display: block;\n        height: 0;\n        clear: both;\n        visibility: hidden;\n    }\n\n    .clearfix {\n        _overflow: hidden;\n    }\n    .fright{\n        float:right;\n    }\n    button,.button{\n        background-color: #fff;\n        border: 1px solid #d3d6db;\n        border-radius: 3px;\n        color: #222324;\n        font-size: 14px;\n        height: 32px;\n        line-height: 24px;\n        padding:8px 10px;\n        position: relative;\n        text-align: center;\n        white-space: nowrap;\n        cursor: pointer;\n    &:hover{\n         color: #222324;\n         border-color: #aeb1b5;\n     }\n    }\n    .modal-content {\n        position: fixed;\n        background-color: #fff;\n        width: 640px;\n        border-radius: 5px;\n        z-index: 5001;\n\n    .modal-content-head {\n        position: relative;\n        padding: 15px;\n        background-color: #f5f7fa;\n        border-bottom: 1px solid #d3d6db;\n        border-top-left-radius:5px;\n        border-top-right-radius:5px;\n    .delete {\n        -webkit-appearance: none;\n        background-color: rgba(18, 18, 18, 0.2);\n        border: none;\n        border-radius: 100%;\n        cursor: pointer;\n        display: inline-block;\n        height: 24px;\n        width: 24px;\n        position: absolute;\n        top: 15px;\n        right: 10px;\n    &:before {\n         background-color: #fff;\n         content: \"\";\n         display: block;\n         height: 2px;\n         left: 50%;\n         margin-left: -25%;\n         margin-top: -1px;\n         position: absolute;\n         top: 50%;\n         width: 50%;\n         -webkit-transform: rotate(45deg);\n         transform: rotate(45deg);\n     }\n    &:after {\n         background-color: #fff;\n         content: \"\";\n         display: block;\n         height: 2px;\n         left: 50%;\n         margin-left: -25%;\n         margin-top: -1px;\n         position: absolute;\n         top: 50%;\n         width: 50%;\n         -webkit-transform: rotate(-45deg);\n         transform: rotate(-45deg);\n     }\n    &:hover {\n         background-color: rgba(17, 17, 17, 0.5);\n     }\n    }\n    .modal-content-title {\n        color: #222324;\n        font-size: 20px;\n        line-height: 1;\n        margin: 0;\n        padding: 0;\n    }\n    }\n\n    .modal-content-body {\n        width: 640px;\n        max-height: 600px;\n        padding: 20px;\n    }\n\n    .modal-content-foot {\n        position: relative;\n        padding: 15px;\n        background-color: #f5f7fa;\n        border-top: 1px solid #d3d6db;\n        border-bottom-left-radius:5px;\n        border-bottom-right-radius:5px;\n    .actions{\n        position: absolute;\n        right:15px;\n        top:15px;\n    }\n    .is-primary{\n        background-color: #1fc8db;\n        border-color: transparent;\n        color: #fff;\n        margin-left:5px;\n    &:hover{\n         background-color: #199fae;\n         border-color: transparent;\n         color: #fff;\n     }\n    }\n    .button{\n        min-width:70px;\n    }\n    }\n\n    }\n    .bounce-transition {\n        -webkit-animation-duration: .5s;\n        animation-duration: .5s;\n        -webkit-animation-fill-mode: both;\n        animation-fill-mode: both;\n    }\n\n    .bounce-enter {\n        animation-name: bounceIn;\n    }\n\n    .bounce-leave {\n        animation-name: bounceOut;\n    }\n\n    @-webkit-keyframes bounceIn {\n        from, 20%, 40%, 60%, 80%, to {\n            animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\n        }\n\n        0% {\n            opacity: 0;\n            transform: scale3d(.3, .3, .3);\n        }\n\n        20% {\n            transform: scale3d(1.1, 1.1, 1.1);\n        }\n\n        40% {\n            transform: scale3d(.9, .9, .9);\n        }\n\n        60% {\n            opacity: 1;\n            transform: scale3d(1.03, 1.03, 1.03);\n        }\n\n        80% {\n            transform: scale3d(.97, .97, .97);\n        }\n\n        to {\n            opacity: 1;\n            transform: scale3d(1, 1, 1);\n        }\n    }\n\n    @keyframes bounceIn {\n        from, 20%, 40%, 60%, 80%, to {\n            animation-timing-function: cubic-bezier(0.215, 0.610, 0.355, 1.000);\n        }\n\n        0% {\n            opacity: 0;\n            transform: scale3d(.3, .3, .3);\n        }\n\n        20% {\n            transform: scale3d(1.1, 1.1, 1.1);\n        }\n\n        40% {\n            transform: scale3d(.9, .9, .9);\n        }\n\n        60% {\n            opacity: 1;\n            transform: scale3d(1.03, 1.03, 1.03);\n        }\n\n        80% {\n            transform: scale3d(.97, .97, .97);\n        }\n\n        to {\n            opacity: 1;\n            transform: scale3d(1, 1, 1);\n        }\n    }\n\n    @-webkit-keyframes bounceOut {\n        20% {\n            transform: scale3d(.9, .9, .9);\n        }\n\n        50%, 55% {\n            opacity: 1;\n            transform: scale3d(1.1, 1.1, 1.1);\n        }\n\n        to {\n            opacity: 0;\n            transform: scale3d(.3, .3, .3);\n        }\n    }\n\n    @keyframes bounceOut {\n        20% {\n            transform: scale3d(.9, .9, .9);\n        }\n\n        50%, 55% {\n            opacity: 1;\n            transform: scale3d(1.1, 1.1, 1.1);\n        }\n\n        to {\n            opacity: 0;\n            transform: scale3d(.3, .3, .3);\n        }\n    }\n</style>\n\n\n\n/** WEBPACK FOOTER **\n ** Modal.vue?c421a38e\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".control[_v-3ea48884]{position:relative;text-align:left}button[_v-3ea48884]{-moz-appearance:none;-webkit-appearance:none;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#fff;border:1px solid #d3d6db;border-radius:3px;color:#222324;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:14px;height:2pc;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;line-height:24px;padding-left:8px;padding-right:8px;position:relative;vertical-align:top;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding-left:10px;padding-right:10px;text-align:center;white-space:nowrap}.label[_v-3ea48884]{color:#222324;display:block;font-weight:700}input[_v-3ea48884]{-moz-appearance:none;-webkit-appearance:none;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#fff;border:1px solid #d3d6db;border-radius:3px;color:#222324;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:14px;height:2pc;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;line-height:24px;padding-left:8px;padding-right:8px;position:relative;vertical-align:top;box-shadow:inset 0 1px 2px hsla(0,0%,7%,.1)}\", \"\", {\"version\":3,\"sources\":[\"/../../../../../../../vue-loader/lib/style-rewriter.js?id=_v-3ea48884&file=app.vue&scoped=true!/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/node_modules/less-loader/index.js!/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/node_modules/vue-loader/lib/selector.js?type=style&index=0!/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/example/app.vue.style\"],\"names\":[],\"mappings\":\"AAAA,sBAAS,kBAAkB,eAAe,CAAC,oBAAO,qBAAqB,wBAAwB,yBAAyB,sBAAsB,mBAAmB,sBAAsB,yBAAyB,kBAAkB,cAAc,2BAA2B,2BAA2B,oBAAoB,eAAe,WAAY,uBAAuB,oBAAoB,2BAA2B,iBAAiB,iBAAiB,kBAAkB,kBAAkB,mBAAmB,wBAAwB,qBAAqB,uBAAuB,kBAAkB,mBAAmB,kBAAkB,kBAAkB,CAAC,oBAAO,cAAc,cAAc,eAAe,CAAC,mBAAM,qBAAqB,wBAAwB,yBAAyB,sBAAsB,mBAAmB,sBAAsB,yBAAyB,kBAAkB,cAAc,2BAA2B,2BAA2B,oBAAoB,eAAe,WAAY,uBAAuB,oBAAoB,2BAA2B,iBAAiB,iBAAiB,kBAAkB,kBAAkB,mBAAmB,2CAA6C,CAAC\",\"file\":\"app.vue\",\"sourcesContent\":[\".control{position:relative;text-align:left}button{-moz-appearance:none;-webkit-appearance:none;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#fff;border:1px solid #d3d6db;border-radius:3px;color:#222324;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:14px;height:32px;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;line-height:24px;padding-left:8px;padding-right:8px;position:relative;vertical-align:top;-webkit-box-pack:center;-ms-flex-pack:center;justify-content:center;padding-left:10px;padding-right:10px;text-align:center;white-space:nowrap}.label{color:#222324;display:block;font-weight:700}input{-moz-appearance:none;-webkit-appearance:none;-webkit-box-align:center;-ms-flex-align:center;align-items:center;background-color:#fff;border:1px solid #d3d6db;border-radius:3px;color:#222324;display:-webkit-inline-box;display:-ms-inline-flexbox;display:inline-flex;font-size:14px;height:32px;-webkit-box-pack:start;-ms-flex-pack:start;justify-content:flex-start;line-height:24px;padding-left:8px;padding-right:8px;position:relative;vertical-align:top;box-shadow:inset 0 1px 2px rgba(18,18,18,0.1)}\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=_v-3ea48884&file=app.vue&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./example/app.vue\n ** module id = 5\n ** module chunks = 0\n **/","exports = module.exports = require(\"./../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".modal-background[_v-412529e4]{position:fixed;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,.5);z-index:5000}.clearfix[_v-412529e4]:after{content:\\\".\\\";display:block;height:0;clear:both;visibility:hidden}.clearfix[_v-412529e4]{_overflow:hidden}.fright[_v-412529e4]{float:right}.button[_v-412529e4],button[_v-412529e4]{background-color:#fff;border:1px solid #d3d6db;border-radius:3px;color:#222324;font-size:14px;height:2pc;line-height:24px;padding:8px 10px;position:relative;text-align:center;white-space:nowrap;cursor:pointer}.button[_v-412529e4]:hover,button[_v-412529e4]:hover{color:#222324;border-color:#aeb1b5}.modal-content[_v-412529e4]{position:fixed;background-color:#fff;width:40pc;border-radius:5px;z-index:5001}.modal-content .modal-content-head[_v-412529e4]{position:relative;padding:15px;background-color:#f5f7fa;border-bottom:1px solid #d3d6db;border-top-left-radius:5px;border-top-right-radius:5px}.modal-content .modal-content-head .delete[_v-412529e4]{-webkit-appearance:none;background-color:hsla(0,0%,7%,.2);border:none;border-radius:100%;cursor:pointer;display:inline-block;height:24px;width:24px;position:absolute;top:15px;right:10px}.modal-content .modal-content-head .delete[_v-412529e4]:before{-webkit-transform:rotate(45deg);transform:rotate(45deg)}.modal-content .modal-content-head .delete[_v-412529e4]:after,.modal-content .modal-content-head .delete[_v-412529e4]:before{background-color:#fff;content:\\\"\\\";display:block;height:2px;left:50%;margin-left:-25%;margin-top:-1px;position:absolute;top:50%;width:50%}.modal-content .modal-content-head .delete[_v-412529e4]:after{-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.modal-content .modal-content-head .delete[_v-412529e4]:hover{background-color:hsla(0,0%,7%,.5)}.modal-content .modal-content-head .modal-content-title[_v-412529e4]{color:#222324;font-size:20px;line-height:1;margin:0;padding:0}.modal-content .modal-content-body[_v-412529e4]{width:40pc;max-height:600px;padding:20px}.modal-content .modal-content-foot[_v-412529e4]{position:relative;padding:15px;background-color:#f5f7fa;border-top:1px solid #d3d6db;border-bottom-left-radius:5px;border-bottom-right-radius:5px}.modal-content .modal-content-foot .actions[_v-412529e4]{position:absolute;right:15px;top:15px}.modal-content .modal-content-foot .is-primary[_v-412529e4]{background-color:#1fc8db;border-color:transparent;color:#fff;margin-left:5px}.modal-content .modal-content-foot .is-primary[_v-412529e4]:hover{background-color:#199fae;border-color:transparent;color:#fff}.modal-content .modal-content-foot .button[_v-412529e4]{min-width:70px}.bounce-transition[_v-412529e4]{-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-fill-mode:both;animation-fill-mode:both}.bounce-enter[_v-412529e4]{-webkit-animation-name:bounceIn;animation-name:bounceIn}.bounce-leave[_v-412529e4]{-webkit-animation-name:bounceOut;animation-name:bounceOut}@-webkit-keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}20%{-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}40%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}60%{opacity:1;-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}80%{-webkit-transform:scale3d(.97,.97,.97);transform:scale3d(.97,.97,.97)}to{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@keyframes bounceIn{0%,20%,40%,60%,80%,to{-webkit-animation-timing-function:cubic-bezier(.215,.61,.355,1);animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}20%{-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}40%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}60%{opacity:1;-webkit-transform:scale3d(1.03,1.03,1.03);transform:scale3d(1.03,1.03,1.03)}80%{-webkit-transform:scale3d(.97,.97,.97);transform:scale3d(.97,.97,.97)}to{opacity:1;-webkit-transform:scale3d(1,1,1);transform:scale3d(1,1,1)}}@-webkit-keyframes bounceOut{20%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}50%,55%{opacity:1;-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}to{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}}@keyframes bounceOut{20%{-webkit-transform:scale3d(.9,.9,.9);transform:scale3d(.9,.9,.9)}50%,55%{opacity:1;-webkit-transform:scale3d(1.1,1.1,1.1);transform:scale3d(1.1,1.1,1.1)}to{opacity:0;-webkit-transform:scale3d(.3,.3,.3);transform:scale3d(.3,.3,.3)}}\", \"\", {\"version\":3,\"sources\":[\"/../../../../../../../vue-loader/lib/style-rewriter.js?id=_v-412529e4&file=Modal.vue&scoped=true!/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/node_modules/less-loader/index.js!/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/node_modules/vue-loader/lib/selector.js?type=style&index=0!/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/src/Modal.vue.style\"],\"names\":[],\"mappings\":\"AAAA,+BAAkB,eAAe,MAAM,OAAO,WAAW,YAAY,gCAAiC,YAAY,CAAC,6BAAgB,YAAY,cAAc,SAAS,WAAW,iBAAiB,CAAC,wBAAA,eAA0B,CAAC,qBAAQ,WAAW,CAAC,yCAAe,sBAAsB,yBAAyB,kBAAkB,cAAc,eAAe,WAAY,iBAAiB,iBAAiB,kBAAkB,kBAAkB,mBAAmB,cAAc,CAAC,qDAA2B,cAAc,oBAAoB,CAAC,4BAAe,eAAe,sBAAsB,WAAY,kBAAkB,YAAY,CAAC,gDAAmC,kBAAkB,aAAa,yBAAyB,gCAAgC,2BAA2B,2BAA2B,CAAC,wDAA2C,wBAAwB,kCAAoC,YAAY,mBAAmB,eAAe,qBAAqB,YAAY,WAAW,kBAAkB,SAAS,UAAU,CAAC,+DAA0L,gCAAgC,uBAAuB,CAAC,6HAAhM,sBAAsB,WAAW,cAAc,WAAW,SAAS,iBAAiB,gBAAgB,kBAAkB,QAAQ,SAAU,CAA2S,AAAnP,8DAAyL,iCAAiC,wBAAwB,CAAC,8DAAiD,iCAAmC,CAAC,qEAAwD,cAAc,eAAe,cAAc,SAAS,SAAS,CAAC,gDAAmC,WAAY,iBAAiB,YAAY,CAAC,gDAAmC,kBAAkB,aAAa,yBAAyB,6BAA6B,8BAA8B,8BAA8B,CAAC,yDAA4C,kBAAkB,WAAW,QAAQ,CAAC,4DAA+C,yBAAyB,yBAAyB,WAAW,eAAe,CAAC,kEAAqD,yBAAyB,yBAAyB,UAAU,CAAC,wDAA2C,cAAc,CAAC,gCAAmB,+BAA+B,uBAAuB,iCAAiC,wBAAwB,CAAC,2BAAc,gCAAA,uBAAuB,CAAC,2BAAc,iCAAA,wBAAwB,CAAC,4BAA4B,sBAAwB,gEAAA,uDAA0D,CAAC,GAAG,UAAU,oCAAA,2BAA6B,CAAC,IAAI,uCAAA,8BAAgC,CAAC,IAAI,oCAAA,2BAA6B,CAAC,IAAI,UAAU,0CAAA,iCAAmC,CAAC,IAAI,uCAAA,8BAAgC,CAAC,GAAG,UAAU,iCAAA,wBAA0B,CAAC,CAAC,oBAAoB,sBAAwB,gEAAA,uDAA0D,CAAC,GAAG,UAAU,oCAAA,2BAA6B,CAAC,IAAI,uCAAA,8BAAgC,CAAC,IAAI,oCAAA,2BAA6B,CAAC,IAAI,UAAU,0CAAA,iCAAmC,CAAC,IAAI,uCAAA,8BAAgC,CAAC,GAAG,UAAU,iCAAA,wBAA0B,CAAC,CAAC,6BAA6B,IAAI,oCAAA,2BAA6B,CAAC,QAAQ,UAAU,uCAAA,8BAAgC,CAAC,GAAG,UAAU,oCAAA,2BAA6B,CAAC,CAAC,qBAAqB,IAAI,oCAAA,2BAA6B,CAAC,QAAQ,UAAU,uCAAA,8BAAgC,CAAC,GAAG,UAAU,oCAAA,2BAA6B,CAAC,CAAC\",\"file\":\"Modal.vue\",\"sourcesContent\":[\".modal-background{position:fixed;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,0.5);z-index:5000}.clearfix:after{content:\\\".\\\";display:block;height:0;clear:both;visibility:hidden}.clearfix{_overflow:hidden}.fright{float:right}button,.button{background-color:#fff;border:1px solid #d3d6db;border-radius:3px;color:#222324;font-size:14px;height:32px;line-height:24px;padding:8px 10px;position:relative;text-align:center;white-space:nowrap;cursor:pointer}button:hover,.button:hover{color:#222324;border-color:#aeb1b5}.modal-content{position:fixed;background-color:#fff;width:640px;border-radius:5px;z-index:5001}.modal-content .modal-content-head{position:relative;padding:15px;background-color:#f5f7fa;border-bottom:1px solid #d3d6db;border-top-left-radius:5px;border-top-right-radius:5px}.modal-content .modal-content-head .delete{-webkit-appearance:none;background-color:rgba(18,18,18,0.2);border:none;border-radius:100%;cursor:pointer;display:inline-block;height:24px;width:24px;position:absolute;top:15px;right:10px}.modal-content .modal-content-head .delete:before{background-color:#fff;content:\\\"\\\";display:block;height:2px;left:50%;margin-left:-25%;margin-top:-1px;position:absolute;top:50%;width:50%;-webkit-transform:rotate(45deg);transform:rotate(45deg)}.modal-content .modal-content-head .delete:after{background-color:#fff;content:\\\"\\\";display:block;height:2px;left:50%;margin-left:-25%;margin-top:-1px;position:absolute;top:50%;width:50%;-webkit-transform:rotate(-45deg);transform:rotate(-45deg)}.modal-content .modal-content-head .delete:hover{background-color:rgba(17,17,17,0.5)}.modal-content .modal-content-head .modal-content-title{color:#222324;font-size:20px;line-height:1;margin:0;padding:0}.modal-content .modal-content-body{width:640px;max-height:600px;padding:20px}.modal-content .modal-content-foot{position:relative;padding:15px;background-color:#f5f7fa;border-top:1px solid #d3d6db;border-bottom-left-radius:5px;border-bottom-right-radius:5px}.modal-content .modal-content-foot .actions{position:absolute;right:15px;top:15px}.modal-content .modal-content-foot .is-primary{background-color:#1fc8db;border-color:transparent;color:#fff;margin-left:5px}.modal-content .modal-content-foot .is-primary:hover{background-color:#199fae;border-color:transparent;color:#fff}.modal-content .modal-content-foot .button{min-width:70px}.bounce-transition{-webkit-animation-duration:.5s;animation-duration:.5s;-webkit-animation-fill-mode:both;animation-fill-mode:both}.bounce-enter{animation-name:bounceIn}.bounce-leave{animation-name:bounceOut}@-webkit-keyframes bounceIn{from,20%,40%,60%,80%,to{animation-timing-function:cubic-bezier(.215, .61, .355, 1)}0%{opacity:0;transform:scale3d(.3, .3, .3)}20%{transform:scale3d(1.1, 1.1, 1.1)}40%{transform:scale3d(.9, .9, .9)}60%{opacity:1;transform:scale3d(1.03, 1.03, 1.03)}80%{transform:scale3d(.97, .97, .97)}to{opacity:1;transform:scale3d(1, 1, 1)}}@keyframes bounceIn{from,20%,40%,60%,80%,to{animation-timing-function:cubic-bezier(.215, .61, .355, 1)}0%{opacity:0;transform:scale3d(.3, .3, .3)}20%{transform:scale3d(1.1, 1.1, 1.1)}40%{transform:scale3d(.9, .9, .9)}60%{opacity:1;transform:scale3d(1.03, 1.03, 1.03)}80%{transform:scale3d(.97, .97, .97)}to{opacity:1;transform:scale3d(1, 1, 1)}}@-webkit-keyframes bounceOut{20%{transform:scale3d(.9, .9, .9)}50%,55%{opacity:1;transform:scale3d(1.1, 1.1, 1.1)}to{opacity:0;transform:scale3d(.3, .3, .3)}}@keyframes bounceOut{20%{transform:scale3d(.9, .9, .9)}50%,55%{opacity:1;transform:scale3d(1.1, 1.1, 1.1)}to{opacity:0;transform:scale3d(.3, .3, .3)}}\"],\"sourceRoot\":\"webpack://\"}]);\n\n// exports\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=_v-412529e4&file=Modal.vue&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/Modal.vue\n ** module id = 6\n ** module chunks = 0\n **/","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/process/browser.js\n ** module id = 7\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-3ea48884&file=app.vue&scoped=true!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-3ea48884&file=app.vue&scoped=true!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-3ea48884&file=app.vue&scoped=true!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=_v-3ea48884&file=app.vue&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./example/app.vue\n ** module id = 8\n ** module chunks = 0\n **/","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-412529e4&file=Modal.vue&scoped=true!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Modal.vue\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-412529e4&file=Modal.vue&scoped=true!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Modal.vue\", function() {\n\t\t\tvar newContent = require(\"!!./../node_modules/css-loader/index.js?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-412529e4&file=Modal.vue&scoped=true!./../node_modules/less-loader/index.js!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Modal.vue\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/style-loader!./~/css-loader?sourceMap!./~/vue-loader/lib/style-rewriter.js?id=_v-412529e4&file=Modal.vue&scoped=true!./~/less-loader!./~/vue-loader/lib/selector.js?type=style&index=0!./src/Modal.vue\n ** module id = 9\n ** module chunks = 0\n **/","module.exports = \" <div _v-3ea48884=\\\"\\\"> <button @click=onShowModal _v-3ea48884=\\\"\\\">Click Show Modal</button> <modal :title=modal.title :visible.sync=modal.visible :bg-click=false :verify=true :bg-style=bgStyle _v-3ea48884=\\\"\\\"> <label class=label _v-3ea48884=\\\"\\\">Slot Area,write your code in here</label> <p class=control _v-3ea48884=\\\"\\\"> <label class=label _v-3ea48884=\\\"\\\">Name:</label> <input class=input type=text v-model=modal.text placeholder=\\\"Your name\\\" _v-3ea48884=\\\"\\\"> </p> </modal> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-3ea48884&file=app.vue!./~/vue-loader/lib/selector.js?type=template&index=0!./example/app.vue\n ** module id = 10\n ** module chunks = 0\n **/","module.exports = \" <div v-show=visible class=modal-background @click=bgClick :style=bgStyle _v-412529e4=\\\"\\\"></div> <div v-el:content=\\\"\\\" class=modal-content v-show=visible :transition=transition :style=[contentStyle,bodyStyle] _v-412529e4=\\\"\\\"> <header v-if=!onlyBody class=modal-content-head _v-412529e4=\\\"\\\"> <p class=modal-content-title _v-412529e4=\\\"\\\">{{ title }}</p> <button class=delete @click=hide _v-412529e4=\\\"\\\"></button> </header> <section class=modal-content-body _v-412529e4=\\\"\\\"> <slot _v-412529e4=\\\"\\\"></slot> </section> <footer v-if=!onlyBody class=\\\"modal-content-foot clearfix\\\" _v-412529e4=\\\"\\\"> <div class=fright _v-412529e4=\\\"\\\"> <a class=button @click=cancel _v-412529e4=\\\"\\\">{{ cancelText }}</a> <a class=\\\"button is-primary\\\" @click=ok _v-412529e4=\\\"\\\">{{ okText }}</a> </div> </footer> </div> \";\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue-html-loader!./~/vue-loader/lib/template-rewriter.js?id=_v-412529e4&file=Modal.vue!./~/vue-loader/lib/selector.js?type=template&index=0!./src/Modal.vue\n ** module id = 11\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-3ea48884&file=app.vue&scoped=true!less!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./app.vue\")\n__vue_script__ = require(\"-!babel-loader!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./app.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../node_modules/vue-loader/lib/template-rewriter.js?id=_v-3ea48884&file=app.vue!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./app.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/example/app.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./example/app.vue\n ** module id = 12\n ** module chunks = 0\n **/","var __vue_script__, __vue_template__\nrequire(\"-!style-loader!css-loader?sourceMap!./../node_modules/vue-loader/lib/style-rewriter.js?id=_v-412529e4&file=Modal.vue&scoped=true!less!./../node_modules/vue-loader/lib/selector.js?type=style&index=0!./Modal.vue\")\n__vue_script__ = require(\"-!babel-loader!./../node_modules/vue-loader/lib/selector.js?type=script&index=0!./Modal.vue\")\n__vue_template__ = require(\"-!vue-html-loader!./../node_modules/vue-loader/lib/template-rewriter.js?id=_v-412529e4&file=Modal.vue!./../node_modules/vue-loader/lib/selector.js?type=template&index=0!./Modal.vue\")\nmodule.exports = __vue_script__ || {}\nif (module.exports.__esModule) module.exports = module.exports.default\nif (__vue_template__) { (typeof module.exports === \"function\" ? module.exports.options : module.exports).template = __vue_template__ }\nif (module.hot) {(function () {  module.hot.accept()\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), true)\n  if (!hotAPI.compatible) return\n  var id = \"/Users/Moment/Documents/personalFiles/projectCode/VueJs/vue-flexible-modal/src/Modal.vue\"\n  if (!module.hot.data) {\n    hotAPI.createRecord(id, module.exports)\n  } else {\n    hotAPI.update(id, module.exports, __vue_template__)\n  }\n})()}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/Modal.vue\n ** module id = 13\n ** module chunks = 0\n **/","/*!\n * Vue.js v1.0.26\n * (c) 2016 Evan You\n * Released under the MIT License.\n */\n'use strict';\n\nfunction set(obj, key, val) {\n  if (hasOwn(obj, key)) {\n    obj[key] = val;\n    return;\n  }\n  if (obj._isVue) {\n    set(obj._data, key, val);\n    return;\n  }\n  var ob = obj.__ob__;\n  if (!ob) {\n    obj[key] = val;\n    return;\n  }\n  ob.convert(key, val);\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._proxy(key);\n      vm._digest();\n    }\n  }\n  return val;\n}\n\n/**\n * Delete a property and trigger change if necessary.\n *\n * @param {Object} obj\n * @param {String} key\n */\n\nfunction del(obj, key) {\n  if (!hasOwn(obj, key)) {\n    return;\n  }\n  delete obj[key];\n  var ob = obj.__ob__;\n  if (!ob) {\n    if (obj._isVue) {\n      delete obj._data[key];\n      obj._digest();\n    }\n    return;\n  }\n  ob.dep.notify();\n  if (ob.vms) {\n    var i = ob.vms.length;\n    while (i--) {\n      var vm = ob.vms[i];\n      vm._unproxy(key);\n      vm._digest();\n    }\n  }\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n/**\n * Check whether the object has the property.\n *\n * @param {Object} obj\n * @param {String} key\n * @return {Boolean}\n */\n\nfunction hasOwn(obj, key) {\n  return hasOwnProperty.call(obj, key);\n}\n\n/**\n * Check if an expression is a literal value.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nvar literalValueRE = /^\\s?(true|false|-?[\\d\\.]+|'[^']*'|\"[^\"]*\")\\s?$/;\n\nfunction isLiteral(exp) {\n  return literalValueRE.test(exp);\n}\n\n/**\n * Check if a string starts with $ or _\n *\n * @param {String} str\n * @return {Boolean}\n */\n\nfunction isReserved(str) {\n  var c = (str + '').charCodeAt(0);\n  return c === 0x24 || c === 0x5F;\n}\n\n/**\n * Guard text output, make sure undefined outputs\n * empty string\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction _toString(value) {\n  return value == null ? '' : value.toString();\n}\n\n/**\n * Check and convert possible numeric strings to numbers\n * before setting back to data\n *\n * @param {*} value\n * @return {*|Number}\n */\n\nfunction toNumber(value) {\n  if (typeof value !== 'string') {\n    return value;\n  } else {\n    var parsed = Number(value);\n    return isNaN(parsed) ? value : parsed;\n  }\n}\n\n/**\n * Convert string boolean literals into real booleans.\n *\n * @param {*} value\n * @return {*|Boolean}\n */\n\nfunction toBoolean(value) {\n  return value === 'true' ? true : value === 'false' ? false : value;\n}\n\n/**\n * Strip quotes from a string\n *\n * @param {String} str\n * @return {String | false}\n */\n\nfunction stripQuotes(str) {\n  var a = str.charCodeAt(0);\n  var b = str.charCodeAt(str.length - 1);\n  return a === b && (a === 0x22 || a === 0x27) ? str.slice(1, -1) : str;\n}\n\n/**\n * Camelize a hyphen-delmited string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar camelizeRE = /-(\\w)/g;\n\nfunction camelize(str) {\n  return str.replace(camelizeRE, toUpper);\n}\n\nfunction toUpper(_, c) {\n  return c ? c.toUpperCase() : '';\n}\n\n/**\n * Hyphenate a camelCase string.\n *\n * @param {String} str\n * @return {String}\n */\n\nvar hyphenateRE = /([a-z\\d])([A-Z])/g;\n\nfunction hyphenate(str) {\n  return str.replace(hyphenateRE, '$1-$2').toLowerCase();\n}\n\n/**\n * Converts hyphen/underscore/slash delimitered names into\n * camelized classNames.\n *\n * e.g. my-component => MyComponent\n *      some_else    => SomeElse\n *      some/comp    => SomeComp\n *\n * @param {String} str\n * @return {String}\n */\n\nvar classifyRE = /(?:^|[-_\\/])(\\w)/g;\n\nfunction classify(str) {\n  return str.replace(classifyRE, toUpper);\n}\n\n/**\n * Simple bind, faster than native\n *\n * @param {Function} fn\n * @param {Object} ctx\n * @return {Function}\n */\n\nfunction bind(fn, ctx) {\n  return function (a) {\n    var l = arguments.length;\n    return l ? l > 1 ? fn.apply(ctx, arguments) : fn.call(ctx, a) : fn.call(ctx);\n  };\n}\n\n/**\n * Convert an Array-like object to a real Array.\n *\n * @param {Array-like} list\n * @param {Number} [start] - start index\n * @return {Array}\n */\n\nfunction toArray(list, start) {\n  start = start || 0;\n  var i = list.length - start;\n  var ret = new Array(i);\n  while (i--) {\n    ret[i] = list[i + start];\n  }\n  return ret;\n}\n\n/**\n * Mix properties into target object.\n *\n * @param {Object} to\n * @param {Object} from\n */\n\nfunction extend(to, from) {\n  var keys = Object.keys(from);\n  var i = keys.length;\n  while (i--) {\n    to[keys[i]] = from[keys[i]];\n  }\n  return to;\n}\n\n/**\n * Quick object check - this is primarily used to tell\n * Objects from primitive values when we know the value\n * is a JSON-compliant type.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nfunction isObject(obj) {\n  return obj !== null && typeof obj === 'object';\n}\n\n/**\n * Strict object type check. Only returns true\n * for plain JavaScript objects.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar toString = Object.prototype.toString;\nvar OBJECT_STRING = '[object Object]';\n\nfunction isPlainObject(obj) {\n  return toString.call(obj) === OBJECT_STRING;\n}\n\n/**\n * Array type check.\n *\n * @param {*} obj\n * @return {Boolean}\n */\n\nvar isArray = Array.isArray;\n\n/**\n * Define a property.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n * @param {Boolean} [enumerable]\n */\n\nfunction def(obj, key, val, enumerable) {\n  Object.defineProperty(obj, key, {\n    value: val,\n    enumerable: !!enumerable,\n    writable: true,\n    configurable: true\n  });\n}\n\n/**\n * Debounce a function so it only gets called after the\n * input stops arriving after the given wait period.\n *\n * @param {Function} func\n * @param {Number} wait\n * @return {Function} - the debounced function\n */\n\nfunction _debounce(func, wait) {\n  var timeout, args, context, timestamp, result;\n  var later = function later() {\n    var last = Date.now() - timestamp;\n    if (last < wait && last >= 0) {\n      timeout = setTimeout(later, wait - last);\n    } else {\n      timeout = null;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    }\n  };\n  return function () {\n    context = this;\n    args = arguments;\n    timestamp = Date.now();\n    if (!timeout) {\n      timeout = setTimeout(later, wait);\n    }\n    return result;\n  };\n}\n\n/**\n * Manual indexOf because it's slightly faster than\n * native.\n *\n * @param {Array} arr\n * @param {*} obj\n */\n\nfunction indexOf(arr, obj) {\n  var i = arr.length;\n  while (i--) {\n    if (arr[i] === obj) return i;\n  }\n  return -1;\n}\n\n/**\n * Make a cancellable version of an async callback.\n *\n * @param {Function} fn\n * @return {Function}\n */\n\nfunction cancellable(fn) {\n  var cb = function cb() {\n    if (!cb.cancelled) {\n      return fn.apply(this, arguments);\n    }\n  };\n  cb.cancel = function () {\n    cb.cancelled = true;\n  };\n  return cb;\n}\n\n/**\n * Check if two values are loosely equal - that is,\n * if they are plain objects, do they have the same shape?\n *\n * @param {*} a\n * @param {*} b\n * @return {Boolean}\n */\n\nfunction looseEqual(a, b) {\n  /* eslint-disable eqeqeq */\n  return a == b || (isObject(a) && isObject(b) ? JSON.stringify(a) === JSON.stringify(b) : false);\n  /* eslint-enable eqeqeq */\n}\n\nvar hasProto = ('__proto__' in {});\n\n// Browser environment sniffing\nvar inBrowser = typeof window !== 'undefined' && Object.prototype.toString.call(window) !== '[object Object]';\n\n// detect devtools\nvar devtools = inBrowser && window.__VUE_DEVTOOLS_GLOBAL_HOOK__;\n\n// UA sniffing for working around browser-specific quirks\nvar UA = inBrowser && window.navigator.userAgent.toLowerCase();\nvar isIE = UA && UA.indexOf('trident') > 0;\nvar isIE9 = UA && UA.indexOf('msie 9.0') > 0;\nvar isAndroid = UA && UA.indexOf('android') > 0;\nvar isIos = UA && /(iphone|ipad|ipod|ios)/i.test(UA);\nvar iosVersionMatch = isIos && UA.match(/os ([\\d_]+)/);\nvar iosVersion = iosVersionMatch && iosVersionMatch[1].split('_');\n\n// detecting iOS UIWebView by indexedDB\nvar hasMutationObserverBug = iosVersion && Number(iosVersion[0]) >= 9 && Number(iosVersion[1]) >= 3 && !window.indexedDB;\n\nvar transitionProp = undefined;\nvar transitionEndEvent = undefined;\nvar animationProp = undefined;\nvar animationEndEvent = undefined;\n\n// Transition property/event sniffing\nif (inBrowser && !isIE9) {\n  var isWebkitTrans = window.ontransitionend === undefined && window.onwebkittransitionend !== undefined;\n  var isWebkitAnim = window.onanimationend === undefined && window.onwebkitanimationend !== undefined;\n  transitionProp = isWebkitTrans ? 'WebkitTransition' : 'transition';\n  transitionEndEvent = isWebkitTrans ? 'webkitTransitionEnd' : 'transitionend';\n  animationProp = isWebkitAnim ? 'WebkitAnimation' : 'animation';\n  animationEndEvent = isWebkitAnim ? 'webkitAnimationEnd' : 'animationend';\n}\n\n/**\n * Defer a task to execute it asynchronously. Ideally this\n * should be executed as a microtask, so we leverage\n * MutationObserver if it's available, and fallback to\n * setTimeout(0).\n *\n * @param {Function} cb\n * @param {Object} ctx\n */\n\nvar nextTick = (function () {\n  var callbacks = [];\n  var pending = false;\n  var timerFunc;\n  function nextTickHandler() {\n    pending = false;\n    var copies = callbacks.slice(0);\n    callbacks = [];\n    for (var i = 0; i < copies.length; i++) {\n      copies[i]();\n    }\n  }\n\n  /* istanbul ignore if */\n  if (typeof MutationObserver !== 'undefined' && !hasMutationObserverBug) {\n    var counter = 1;\n    var observer = new MutationObserver(nextTickHandler);\n    var textNode = document.createTextNode(counter);\n    observer.observe(textNode, {\n      characterData: true\n    });\n    timerFunc = function () {\n      counter = (counter + 1) % 2;\n      textNode.data = counter;\n    };\n  } else {\n    // webpack attempts to inject a shim for setImmediate\n    // if it is used as a global, so we have to work around that to\n    // avoid bundling unnecessary code.\n    var context = inBrowser ? window : typeof global !== 'undefined' ? global : {};\n    timerFunc = context.setImmediate || setTimeout;\n  }\n  return function (cb, ctx) {\n    var func = ctx ? function () {\n      cb.call(ctx);\n    } : cb;\n    callbacks.push(func);\n    if (pending) return;\n    pending = true;\n    timerFunc(nextTickHandler, 0);\n  };\n})();\n\nvar _Set = undefined;\n/* istanbul ignore if */\nif (typeof Set !== 'undefined' && Set.toString().match(/native code/)) {\n  // use native Set when available.\n  _Set = Set;\n} else {\n  // a non-standard Set polyfill that only works with primitive keys.\n  _Set = function () {\n    this.set = Object.create(null);\n  };\n  _Set.prototype.has = function (key) {\n    return this.set[key] !== undefined;\n  };\n  _Set.prototype.add = function (key) {\n    this.set[key] = 1;\n  };\n  _Set.prototype.clear = function () {\n    this.set = Object.create(null);\n  };\n}\n\nfunction Cache(limit) {\n  this.size = 0;\n  this.limit = limit;\n  this.head = this.tail = undefined;\n  this._keymap = Object.create(null);\n}\n\nvar p = Cache.prototype;\n\n/**\n * Put <value> into the cache associated with <key>.\n * Returns the entry which was removed to make room for\n * the new entry. Otherwise undefined is returned.\n * (i.e. if there was enough room already).\n *\n * @param {String} key\n * @param {*} value\n * @return {Entry|undefined}\n */\n\np.put = function (key, value) {\n  var removed;\n\n  var entry = this.get(key, true);\n  if (!entry) {\n    if (this.size === this.limit) {\n      removed = this.shift();\n    }\n    entry = {\n      key: key\n    };\n    this._keymap[key] = entry;\n    if (this.tail) {\n      this.tail.newer = entry;\n      entry.older = this.tail;\n    } else {\n      this.head = entry;\n    }\n    this.tail = entry;\n    this.size++;\n  }\n  entry.value = value;\n\n  return removed;\n};\n\n/**\n * Purge the least recently used (oldest) entry from the\n * cache. Returns the removed entry or undefined if the\n * cache was empty.\n */\n\np.shift = function () {\n  var entry = this.head;\n  if (entry) {\n    this.head = this.head.newer;\n    this.head.older = undefined;\n    entry.newer = entry.older = undefined;\n    this._keymap[entry.key] = undefined;\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value\n * associated with <key> or undefined if not in cache.\n *\n * @param {String} key\n * @param {Boolean} returnEntry\n * @return {Entry|*}\n */\n\np.get = function (key, returnEntry) {\n  var entry = this._keymap[key];\n  if (entry === undefined) return;\n  if (entry === this.tail) {\n    return returnEntry ? entry : entry.value;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.head) {\n      this.head = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.tail; // D. --> E\n  if (this.tail) {\n    this.tail.newer = entry; // E. <-- D\n  }\n  this.tail = entry;\n  return returnEntry ? entry : entry.value;\n};\n\nvar cache$1 = new Cache(1000);\nvar filterTokenRE = /[^\\s'\"]+|'[^']*'|\"[^\"]*\"/g;\nvar reservedArgRE = /^in$|^-?\\d+/;\n\n/**\n * Parser state\n */\n\nvar str;\nvar dir;\nvar c;\nvar prev;\nvar i;\nvar l;\nvar lastFilterIndex;\nvar inSingle;\nvar inDouble;\nvar curly;\nvar square;\nvar paren;\n/**\n * Push a filter to the current directive object\n */\n\nfunction pushFilter() {\n  var exp = str.slice(lastFilterIndex, i).trim();\n  var filter;\n  if (exp) {\n    filter = {};\n    var tokens = exp.match(filterTokenRE);\n    filter.name = tokens[0];\n    if (tokens.length > 1) {\n      filter.args = tokens.slice(1).map(processFilterArg);\n    }\n  }\n  if (filter) {\n    (dir.filters = dir.filters || []).push(filter);\n  }\n  lastFilterIndex = i + 1;\n}\n\n/**\n * Check if an argument is dynamic and strip quotes.\n *\n * @param {String} arg\n * @return {Object}\n */\n\nfunction processFilterArg(arg) {\n  if (reservedArgRE.test(arg)) {\n    return {\n      value: toNumber(arg),\n      dynamic: false\n    };\n  } else {\n    var stripped = stripQuotes(arg);\n    var dynamic = stripped === arg;\n    return {\n      value: dynamic ? arg : stripped,\n      dynamic: dynamic\n    };\n  }\n}\n\n/**\n * Parse a directive value and extract the expression\n * and its filters into a descriptor.\n *\n * Example:\n *\n * \"a + 1 | uppercase\" will yield:\n * {\n *   expression: 'a + 1',\n *   filters: [\n *     { name: 'uppercase', args: null }\n *   ]\n * }\n *\n * @param {String} s\n * @return {Object}\n */\n\nfunction parseDirective(s) {\n  var hit = cache$1.get(s);\n  if (hit) {\n    return hit;\n  }\n\n  // reset parser state\n  str = s;\n  inSingle = inDouble = false;\n  curly = square = paren = 0;\n  lastFilterIndex = 0;\n  dir = {};\n\n  for (i = 0, l = str.length; i < l; i++) {\n    prev = c;\n    c = str.charCodeAt(i);\n    if (inSingle) {\n      // check single quote\n      if (c === 0x27 && prev !== 0x5C) inSingle = !inSingle;\n    } else if (inDouble) {\n      // check double quote\n      if (c === 0x22 && prev !== 0x5C) inDouble = !inDouble;\n    } else if (c === 0x7C && // pipe\n    str.charCodeAt(i + 1) !== 0x7C && str.charCodeAt(i - 1) !== 0x7C) {\n      if (dir.expression == null) {\n        // first filter, end of expression\n        lastFilterIndex = i + 1;\n        dir.expression = str.slice(0, i).trim();\n      } else {\n        // already has filter\n        pushFilter();\n      }\n    } else {\n      switch (c) {\n        case 0x22:\n          inDouble = true;break; // \"\n        case 0x27:\n          inSingle = true;break; // '\n        case 0x28:\n          paren++;break; // (\n        case 0x29:\n          paren--;break; // )\n        case 0x5B:\n          square++;break; // [\n        case 0x5D:\n          square--;break; // ]\n        case 0x7B:\n          curly++;break; // {\n        case 0x7D:\n          curly--;break; // }\n      }\n    }\n  }\n\n  if (dir.expression == null) {\n    dir.expression = str.slice(0, i).trim();\n  } else if (lastFilterIndex !== 0) {\n    pushFilter();\n  }\n\n  cache$1.put(s, dir);\n  return dir;\n}\n\nvar directive = Object.freeze({\n  parseDirective: parseDirective\n});\n\nvar regexEscapeRE = /[-.*+?^${}()|[\\]\\/\\\\]/g;\nvar cache = undefined;\nvar tagRE = undefined;\nvar htmlRE = undefined;\n/**\n * Escape a string so it can be used in a RegExp\n * constructor.\n *\n * @param {String} str\n */\n\nfunction escapeRegex(str) {\n  return str.replace(regexEscapeRE, '\\\\$&');\n}\n\nfunction compileRegex() {\n  var open = escapeRegex(config.delimiters[0]);\n  var close = escapeRegex(config.delimiters[1]);\n  var unsafeOpen = escapeRegex(config.unsafeDelimiters[0]);\n  var unsafeClose = escapeRegex(config.unsafeDelimiters[1]);\n  tagRE = new RegExp(unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '|' + open + '((?:.|\\\\n)+?)' + close, 'g');\n  htmlRE = new RegExp('^' + unsafeOpen + '((?:.|\\\\n)+?)' + unsafeClose + '$');\n  // reset cache\n  cache = new Cache(1000);\n}\n\n/**\n * Parse a template text string into an array of tokens.\n *\n * @param {String} text\n * @return {Array<Object> | null}\n *               - {String} type\n *               - {String} value\n *               - {Boolean} [html]\n *               - {Boolean} [oneTime]\n */\n\nfunction parseText(text) {\n  if (!cache) {\n    compileRegex();\n  }\n  var hit = cache.get(text);\n  if (hit) {\n    return hit;\n  }\n  if (!tagRE.test(text)) {\n    return null;\n  }\n  var tokens = [];\n  var lastIndex = tagRE.lastIndex = 0;\n  var match, index, html, value, first, oneTime;\n  /* eslint-disable no-cond-assign */\n  while (match = tagRE.exec(text)) {\n    /* eslint-enable no-cond-assign */\n    index = match.index;\n    // push text token\n    if (index > lastIndex) {\n      tokens.push({\n        value: text.slice(lastIndex, index)\n      });\n    }\n    // tag token\n    html = htmlRE.test(match[0]);\n    value = html ? match[1] : match[2];\n    first = value.charCodeAt(0);\n    oneTime = first === 42; // *\n    value = oneTime ? value.slice(1) : value;\n    tokens.push({\n      tag: true,\n      value: value.trim(),\n      html: html,\n      oneTime: oneTime\n    });\n    lastIndex = index + match[0].length;\n  }\n  if (lastIndex < text.length) {\n    tokens.push({\n      value: text.slice(lastIndex)\n    });\n  }\n  cache.put(text, tokens);\n  return tokens;\n}\n\n/**\n * Format a list of tokens into an expression.\n * e.g. tokens parsed from 'a {{b}} c' can be serialized\n * into one single expression as '\"a \" + b + \" c\"'.\n *\n * @param {Array} tokens\n * @param {Vue} [vm]\n * @return {String}\n */\n\nfunction tokensToExp(tokens, vm) {\n  if (tokens.length > 1) {\n    return tokens.map(function (token) {\n      return formatToken(token, vm);\n    }).join('+');\n  } else {\n    return formatToken(tokens[0], vm, true);\n  }\n}\n\n/**\n * Format a single token.\n *\n * @param {Object} token\n * @param {Vue} [vm]\n * @param {Boolean} [single]\n * @return {String}\n */\n\nfunction formatToken(token, vm, single) {\n  return token.tag ? token.oneTime && vm ? '\"' + vm.$eval(token.value) + '\"' : inlineFilters(token.value, single) : '\"' + token.value + '\"';\n}\n\n/**\n * For an attribute with multiple interpolation tags,\n * e.g. attr=\"some-{{thing | filter}}\", in order to combine\n * the whole thing into a single watchable expression, we\n * have to inline those filters. This function does exactly\n * that. This is a bit hacky but it avoids heavy changes\n * to directive parser and watcher mechanism.\n *\n * @param {String} exp\n * @param {Boolean} single\n * @return {String}\n */\n\nvar filterRE = /[^|]\\|[^|]/;\nfunction inlineFilters(exp, single) {\n  if (!filterRE.test(exp)) {\n    return single ? exp : '(' + exp + ')';\n  } else {\n    var dir = parseDirective(exp);\n    if (!dir.filters) {\n      return '(' + exp + ')';\n    } else {\n      return 'this._applyFilters(' + dir.expression + // value\n      ',null,' + // oldValue (null for read)\n      JSON.stringify(dir.filters) + // filter descriptors\n      ',false)'; // write?\n    }\n  }\n}\n\nvar text = Object.freeze({\n  compileRegex: compileRegex,\n  parseText: parseText,\n  tokensToExp: tokensToExp\n});\n\nvar delimiters = ['{{', '}}'];\nvar unsafeDelimiters = ['{{{', '}}}'];\n\nvar config = Object.defineProperties({\n\n  /**\n   * Whether to print debug messages.\n   * Also enables stack trace for warnings.\n   *\n   * @type {Boolean}\n   */\n\n  debug: false,\n\n  /**\n   * Whether to suppress warnings.\n   *\n   * @type {Boolean}\n   */\n\n  silent: false,\n\n  /**\n   * Whether to use async rendering.\n   */\n\n  async: true,\n\n  /**\n   * Whether to warn against errors caught when evaluating\n   * expressions.\n   */\n\n  warnExpressionErrors: true,\n\n  /**\n   * Whether to allow devtools inspection.\n   * Disabled by default in production builds.\n   */\n\n  devtools: process.env.NODE_ENV !== 'production',\n\n  /**\n   * Internal flag to indicate the delimiters have been\n   * changed.\n   *\n   * @type {Boolean}\n   */\n\n  _delimitersChanged: true,\n\n  /**\n   * List of asset types that a component can own.\n   *\n   * @type {Array}\n   */\n\n  _assetTypes: ['component', 'directive', 'elementDirective', 'filter', 'transition', 'partial'],\n\n  /**\n   * prop binding modes\n   */\n\n  _propBindingModes: {\n    ONE_WAY: 0,\n    TWO_WAY: 1,\n    ONE_TIME: 2\n  },\n\n  /**\n   * Max circular updates allowed in a batcher flush cycle.\n   */\n\n  _maxUpdateCount: 100\n\n}, {\n  delimiters: { /**\n                 * Interpolation delimiters. Changing these would trigger\n                 * the text parser to re-compile the regular expressions.\n                 *\n                 * @type {Array<String>}\n                 */\n\n    get: function get() {\n      return delimiters;\n    },\n    set: function set(val) {\n      delimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  },\n  unsafeDelimiters: {\n    get: function get() {\n      return unsafeDelimiters;\n    },\n    set: function set(val) {\n      unsafeDelimiters = val;\n      compileRegex();\n    },\n    configurable: true,\n    enumerable: true\n  }\n});\n\nvar warn = undefined;\nvar formatComponentName = undefined;\n\nif (process.env.NODE_ENV !== 'production') {\n  (function () {\n    var hasConsole = typeof console !== 'undefined';\n\n    warn = function (msg, vm) {\n      if (hasConsole && !config.silent) {\n        console.error('[Vue warn]: ' + msg + (vm ? formatComponentName(vm) : ''));\n      }\n    };\n\n    formatComponentName = function (vm) {\n      var name = vm._isVue ? vm.$options.name : vm.name;\n      return name ? ' (found in component: <' + hyphenate(name) + '>)' : '';\n    };\n  })();\n}\n\n/**\n * Append with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction appendWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    target.appendChild(el);\n  }, vm, cb);\n}\n\n/**\n * InsertBefore with transition.\n *\n * @param {Element} el\n * @param {Element} target\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction beforeWithTransition(el, target, vm, cb) {\n  applyTransition(el, 1, function () {\n    before(el, target);\n  }, vm, cb);\n}\n\n/**\n * Remove with transition.\n *\n * @param {Element} el\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction removeWithTransition(el, vm, cb) {\n  applyTransition(el, -1, function () {\n    remove(el);\n  }, vm, cb);\n}\n\n/**\n * Apply transitions with an operation callback.\n *\n * @param {Element} el\n * @param {Number} direction\n *                  1: enter\n *                 -1: leave\n * @param {Function} op - the actual DOM operation\n * @param {Vue} vm\n * @param {Function} [cb]\n */\n\nfunction applyTransition(el, direction, op, vm, cb) {\n  var transition = el.__v_trans;\n  if (!transition ||\n  // skip if there are no js hooks and CSS transition is\n  // not supported\n  !transition.hooks && !transitionEndEvent ||\n  // skip transitions for initial compile\n  !vm._isCompiled ||\n  // if the vm is being manipulated by a parent directive\n  // during the parent's compilation phase, skip the\n  // animation.\n  vm.$parent && !vm.$parent._isCompiled) {\n    op();\n    if (cb) cb();\n    return;\n  }\n  var action = direction > 0 ? 'enter' : 'leave';\n  transition[action](op, cb);\n}\n\nvar transition = Object.freeze({\n  appendWithTransition: appendWithTransition,\n  beforeWithTransition: beforeWithTransition,\n  removeWithTransition: removeWithTransition,\n  applyTransition: applyTransition\n});\n\n/**\n * Query an element selector if it's not an element already.\n *\n * @param {String|Element} el\n * @return {Element}\n */\n\nfunction query(el) {\n  if (typeof el === 'string') {\n    var selector = el;\n    el = document.querySelector(el);\n    if (!el) {\n      process.env.NODE_ENV !== 'production' && warn('Cannot find element: ' + selector);\n    }\n  }\n  return el;\n}\n\n/**\n * Check if a node is in the document.\n * Note: document.documentElement.contains should work here\n * but always returns false for comment nodes in phantomjs,\n * making unit tests difficult. This is fixed by doing the\n * contains() check on the node's parentNode instead of\n * the node itself.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction inDoc(node) {\n  if (!node) return false;\n  var doc = node.ownerDocument.documentElement;\n  var parent = node.parentNode;\n  return doc === node || doc === parent || !!(parent && parent.nodeType === 1 && doc.contains(parent));\n}\n\n/**\n * Get and remove an attribute from a node.\n *\n * @param {Node} node\n * @param {String} _attr\n */\n\nfunction getAttr(node, _attr) {\n  var val = node.getAttribute(_attr);\n  if (val !== null) {\n    node.removeAttribute(_attr);\n  }\n  return val;\n}\n\n/**\n * Get an attribute with colon or v-bind: prefix.\n *\n * @param {Node} node\n * @param {String} name\n * @return {String|null}\n */\n\nfunction getBindAttr(node, name) {\n  var val = getAttr(node, ':' + name);\n  if (val === null) {\n    val = getAttr(node, 'v-bind:' + name);\n  }\n  return val;\n}\n\n/**\n * Check the presence of a bind attribute.\n *\n * @param {Node} node\n * @param {String} name\n * @return {Boolean}\n */\n\nfunction hasBindAttr(node, name) {\n  return node.hasAttribute(name) || node.hasAttribute(':' + name) || node.hasAttribute('v-bind:' + name);\n}\n\n/**\n * Insert el before target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction before(el, target) {\n  target.parentNode.insertBefore(el, target);\n}\n\n/**\n * Insert el after target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction after(el, target) {\n  if (target.nextSibling) {\n    before(el, target.nextSibling);\n  } else {\n    target.parentNode.appendChild(el);\n  }\n}\n\n/**\n * Remove el from DOM\n *\n * @param {Element} el\n */\n\nfunction remove(el) {\n  el.parentNode.removeChild(el);\n}\n\n/**\n * Prepend el to target\n *\n * @param {Element} el\n * @param {Element} target\n */\n\nfunction prepend(el, target) {\n  if (target.firstChild) {\n    before(el, target.firstChild);\n  } else {\n    target.appendChild(el);\n  }\n}\n\n/**\n * Replace target with el\n *\n * @param {Element} target\n * @param {Element} el\n */\n\nfunction replace(target, el) {\n  var parent = target.parentNode;\n  if (parent) {\n    parent.replaceChild(el, target);\n  }\n}\n\n/**\n * Add event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n * @param {Boolean} [useCapture]\n */\n\nfunction on(el, event, cb, useCapture) {\n  el.addEventListener(event, cb, useCapture);\n}\n\n/**\n * Remove event listener shorthand.\n *\n * @param {Element} el\n * @param {String} event\n * @param {Function} cb\n */\n\nfunction off(el, event, cb) {\n  el.removeEventListener(event, cb);\n}\n\n/**\n * For IE9 compat: when both class and :class are present\n * getAttribute('class') returns wrong value...\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getClass(el) {\n  var classname = el.className;\n  if (typeof classname === 'object') {\n    classname = classname.baseVal || '';\n  }\n  return classname;\n}\n\n/**\n * In IE9, setAttribute('class') will result in empty class\n * if the element also has the :class attribute; However in\n * PhantomJS, setting `className` does not work on SVG elements...\n * So we have to do a conditional check here.\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction setClass(el, cls) {\n  /* istanbul ignore if */\n  if (isIE9 && !/svg$/.test(el.namespaceURI)) {\n    el.className = cls;\n  } else {\n    el.setAttribute('class', cls);\n  }\n}\n\n/**\n * Add class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction addClass(el, cls) {\n  if (el.classList) {\n    el.classList.add(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    if (cur.indexOf(' ' + cls + ' ') < 0) {\n      setClass(el, (cur + cls).trim());\n    }\n  }\n}\n\n/**\n * Remove class with compatibility for IE & SVG\n *\n * @param {Element} el\n * @param {String} cls\n */\n\nfunction removeClass(el, cls) {\n  if (el.classList) {\n    el.classList.remove(cls);\n  } else {\n    var cur = ' ' + getClass(el) + ' ';\n    var tar = ' ' + cls + ' ';\n    while (cur.indexOf(tar) >= 0) {\n      cur = cur.replace(tar, ' ');\n    }\n    setClass(el, cur.trim());\n  }\n  if (!el.className) {\n    el.removeAttribute('class');\n  }\n}\n\n/**\n * Extract raw content inside an element into a temporary\n * container div\n *\n * @param {Element} el\n * @param {Boolean} asFragment\n * @return {Element|DocumentFragment}\n */\n\nfunction extractContent(el, asFragment) {\n  var child;\n  var rawContent;\n  /* istanbul ignore if */\n  if (isTemplate(el) && isFragment(el.content)) {\n    el = el.content;\n  }\n  if (el.hasChildNodes()) {\n    trimNode(el);\n    rawContent = asFragment ? document.createDocumentFragment() : document.createElement('div');\n    /* eslint-disable no-cond-assign */\n    while (child = el.firstChild) {\n      /* eslint-enable no-cond-assign */\n      rawContent.appendChild(child);\n    }\n  }\n  return rawContent;\n}\n\n/**\n * Trim possible empty head/tail text and comment\n * nodes inside a parent.\n *\n * @param {Node} node\n */\n\nfunction trimNode(node) {\n  var child;\n  /* eslint-disable no-sequences */\n  while ((child = node.firstChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  while ((child = node.lastChild, isTrimmable(child))) {\n    node.removeChild(child);\n  }\n  /* eslint-enable no-sequences */\n}\n\nfunction isTrimmable(node) {\n  return node && (node.nodeType === 3 && !node.data.trim() || node.nodeType === 8);\n}\n\n/**\n * Check if an element is a template tag.\n * Note if the template appears inside an SVG its tagName\n * will be in lowercase.\n *\n * @param {Element} el\n */\n\nfunction isTemplate(el) {\n  return el.tagName && el.tagName.toLowerCase() === 'template';\n}\n\n/**\n * Create an \"anchor\" for performing dom insertion/removals.\n * This is used in a number of scenarios:\n * - fragment instance\n * - v-html\n * - v-if\n * - v-for\n * - component\n *\n * @param {String} content\n * @param {Boolean} persist - IE trashes empty textNodes on\n *                            cloneNode(true), so in certain\n *                            cases the anchor needs to be\n *                            non-empty to be persisted in\n *                            templates.\n * @return {Comment|Text}\n */\n\nfunction createAnchor(content, persist) {\n  var anchor = config.debug ? document.createComment(content) : document.createTextNode(persist ? ' ' : '');\n  anchor.__v_anchor = true;\n  return anchor;\n}\n\n/**\n * Find a component ref attribute that starts with $.\n *\n * @param {Element} node\n * @return {String|undefined}\n */\n\nvar refRE = /^v-ref:/;\n\nfunction findRef(node) {\n  if (node.hasAttributes()) {\n    var attrs = node.attributes;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      var name = attrs[i].name;\n      if (refRE.test(name)) {\n        return camelize(name.replace(refRE, ''));\n      }\n    }\n  }\n}\n\n/**\n * Map a function to a range of nodes .\n *\n * @param {Node} node\n * @param {Node} end\n * @param {Function} op\n */\n\nfunction mapNodeRange(node, end, op) {\n  var next;\n  while (node !== end) {\n    next = node.nextSibling;\n    op(node);\n    node = next;\n  }\n  op(end);\n}\n\n/**\n * Remove a range of nodes with transition, store\n * the nodes in a fragment with correct ordering,\n * and call callback when done.\n *\n * @param {Node} start\n * @param {Node} end\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Function} cb\n */\n\nfunction removeNodeRange(start, end, vm, frag, cb) {\n  var done = false;\n  var removed = 0;\n  var nodes = [];\n  mapNodeRange(start, end, function (node) {\n    if (node === end) done = true;\n    nodes.push(node);\n    removeWithTransition(node, vm, onRemoved);\n  });\n  function onRemoved() {\n    removed++;\n    if (done && removed >= nodes.length) {\n      for (var i = 0; i < nodes.length; i++) {\n        frag.appendChild(nodes[i]);\n      }\n      cb && cb();\n    }\n  }\n}\n\n/**\n * Check if a node is a DocumentFragment.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isFragment(node) {\n  return node && node.nodeType === 11;\n}\n\n/**\n * Get outerHTML of elements, taking care\n * of SVG elements in IE as well.\n *\n * @param {Element} el\n * @return {String}\n */\n\nfunction getOuterHTML(el) {\n  if (el.outerHTML) {\n    return el.outerHTML;\n  } else {\n    var container = document.createElement('div');\n    container.appendChild(el.cloneNode(true));\n    return container.innerHTML;\n  }\n}\n\nvar commonTagRE = /^(div|p|span|img|a|b|i|br|ul|ol|li|h1|h2|h3|h4|h5|h6|code|pre|table|th|td|tr|form|label|input|select|option|nav|article|section|header|footer)$/i;\nvar reservedTagRE = /^(slot|partial|component)$/i;\n\nvar isUnknownElement = undefined;\nif (process.env.NODE_ENV !== 'production') {\n  isUnknownElement = function (el, tag) {\n    if (tag.indexOf('-') > -1) {\n      // http://stackoverflow.com/a/28210364/1070244\n      return el.constructor === window.HTMLUnknownElement || el.constructor === window.HTMLElement;\n    } else {\n      return (/HTMLUnknownElement/.test(el.toString()) &&\n        // Chrome returns unknown for several HTML5 elements.\n        // https://code.google.com/p/chromium/issues/detail?id=540526\n        // Firefox returns unknown for some \"Interactive elements.\"\n        !/^(data|time|rtc|rb|details|dialog|summary)$/.test(tag)\n      );\n    }\n  };\n}\n\n/**\n * Check if an element is a component, if yes return its\n * component id.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction checkComponentAttr(el, options) {\n  var tag = el.tagName.toLowerCase();\n  var hasAttrs = el.hasAttributes();\n  if (!commonTagRE.test(tag) && !reservedTagRE.test(tag)) {\n    if (resolveAsset(options, 'components', tag)) {\n      return { id: tag };\n    } else {\n      var is = hasAttrs && getIsBinding(el, options);\n      if (is) {\n        return is;\n      } else if (process.env.NODE_ENV !== 'production') {\n        var expectedTag = options._componentNameMap && options._componentNameMap[tag];\n        if (expectedTag) {\n          warn('Unknown custom element: <' + tag + '> - ' + 'did you mean <' + expectedTag + '>? ' + 'HTML is case-insensitive, remember to use kebab-case in templates.');\n        } else if (isUnknownElement(el, tag)) {\n          warn('Unknown custom element: <' + tag + '> - did you ' + 'register the component correctly? For recursive components, ' + 'make sure to provide the \"name\" option.');\n        }\n      }\n    }\n  } else if (hasAttrs) {\n    return getIsBinding(el, options);\n  }\n}\n\n/**\n * Get \"is\" binding from an element.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Object|undefined}\n */\n\nfunction getIsBinding(el, options) {\n  // dynamic syntax\n  var exp = el.getAttribute('is');\n  if (exp != null) {\n    if (resolveAsset(options, 'components', exp)) {\n      el.removeAttribute('is');\n      return { id: exp };\n    }\n  } else {\n    exp = getBindAttr(el, 'is');\n    if (exp != null) {\n      return { id: exp, dynamic: true };\n    }\n  }\n}\n\n/**\n * Option overwriting strategies are functions that handle\n * how to merge a parent option value and a child option\n * value into the final value.\n *\n * All strategy functions follow the same signature:\n *\n * @param {*} parentVal\n * @param {*} childVal\n * @param {Vue} [vm]\n */\n\nvar strats = config.optionMergeStrategies = Object.create(null);\n\n/**\n * Helper that recursively merges two data objects together.\n */\n\nfunction mergeData(to, from) {\n  var key, toVal, fromVal;\n  for (key in from) {\n    toVal = to[key];\n    fromVal = from[key];\n    if (!hasOwn(to, key)) {\n      set(to, key, fromVal);\n    } else if (isObject(toVal) && isObject(fromVal)) {\n      mergeData(toVal, fromVal);\n    }\n  }\n  return to;\n}\n\n/**\n * Data\n */\n\nstrats.data = function (parentVal, childVal, vm) {\n  if (!vm) {\n    // in a Vue.extend merge, both should be functions\n    if (!childVal) {\n      return parentVal;\n    }\n    if (typeof childVal !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('The \"data\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n      return parentVal;\n    }\n    if (!parentVal) {\n      return childVal;\n    }\n    // when parentVal & childVal are both present,\n    // we need to return a function that returns the\n    // merged result of both functions... no need to\n    // check if parentVal is a function here because\n    // it has to be a function to pass previous merges.\n    return function mergedDataFn() {\n      return mergeData(childVal.call(this), parentVal.call(this));\n    };\n  } else if (parentVal || childVal) {\n    return function mergedInstanceDataFn() {\n      // instance merge\n      var instanceData = typeof childVal === 'function' ? childVal.call(vm) : childVal;\n      var defaultData = typeof parentVal === 'function' ? parentVal.call(vm) : undefined;\n      if (instanceData) {\n        return mergeData(instanceData, defaultData);\n      } else {\n        return defaultData;\n      }\n    };\n  }\n};\n\n/**\n * El\n */\n\nstrats.el = function (parentVal, childVal, vm) {\n  if (!vm && childVal && typeof childVal !== 'function') {\n    process.env.NODE_ENV !== 'production' && warn('The \"el\" option should be a function ' + 'that returns a per-instance value in component ' + 'definitions.', vm);\n    return;\n  }\n  var ret = childVal || parentVal;\n  // invoke the element factory if this is instance merge\n  return vm && typeof ret === 'function' ? ret.call(vm) : ret;\n};\n\n/**\n * Hooks and param attributes are merged as arrays.\n */\n\nstrats.init = strats.created = strats.ready = strats.attached = strats.detached = strats.beforeCompile = strats.compiled = strats.beforeDestroy = strats.destroyed = strats.activate = function (parentVal, childVal) {\n  return childVal ? parentVal ? parentVal.concat(childVal) : isArray(childVal) ? childVal : [childVal] : parentVal;\n};\n\n/**\n * Assets\n *\n * When a vm is present (instance creation), we need to do\n * a three-way merge between constructor options, instance\n * options and parent options.\n */\n\nfunction mergeAssets(parentVal, childVal) {\n  var res = Object.create(parentVal || null);\n  return childVal ? extend(res, guardArrayAssets(childVal)) : res;\n}\n\nconfig._assetTypes.forEach(function (type) {\n  strats[type + 's'] = mergeAssets;\n});\n\n/**\n * Events & Watchers.\n *\n * Events & watchers hashes should not overwrite one\n * another, so we merge them as arrays.\n */\n\nstrats.watch = strats.events = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = {};\n  extend(ret, parentVal);\n  for (var key in childVal) {\n    var parent = ret[key];\n    var child = childVal[key];\n    if (parent && !isArray(parent)) {\n      parent = [parent];\n    }\n    ret[key] = parent ? parent.concat(child) : [child];\n  }\n  return ret;\n};\n\n/**\n * Other object hashes.\n */\n\nstrats.props = strats.methods = strats.computed = function (parentVal, childVal) {\n  if (!childVal) return parentVal;\n  if (!parentVal) return childVal;\n  var ret = Object.create(null);\n  extend(ret, parentVal);\n  extend(ret, childVal);\n  return ret;\n};\n\n/**\n * Default strategy.\n */\n\nvar defaultStrat = function defaultStrat(parentVal, childVal) {\n  return childVal === undefined ? parentVal : childVal;\n};\n\n/**\n * Make sure component options get converted to actual\n * constructors.\n *\n * @param {Object} options\n */\n\nfunction guardComponents(options) {\n  if (options.components) {\n    var components = options.components = guardArrayAssets(options.components);\n    var ids = Object.keys(components);\n    var def;\n    if (process.env.NODE_ENV !== 'production') {\n      var map = options._componentNameMap = {};\n    }\n    for (var i = 0, l = ids.length; i < l; i++) {\n      var key = ids[i];\n      if (commonTagRE.test(key) || reservedTagRE.test(key)) {\n        process.env.NODE_ENV !== 'production' && warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + key);\n        continue;\n      }\n      // record a all lowercase <-> kebab-case mapping for\n      // possible custom element case error warning\n      if (process.env.NODE_ENV !== 'production') {\n        map[key.replace(/-/g, '').toLowerCase()] = hyphenate(key);\n      }\n      def = components[key];\n      if (isPlainObject(def)) {\n        components[key] = Vue.extend(def);\n      }\n    }\n  }\n}\n\n/**\n * Ensure all props option syntax are normalized into the\n * Object-based format.\n *\n * @param {Object} options\n */\n\nfunction guardProps(options) {\n  var props = options.props;\n  var i, val;\n  if (isArray(props)) {\n    options.props = {};\n    i = props.length;\n    while (i--) {\n      val = props[i];\n      if (typeof val === 'string') {\n        options.props[val] = null;\n      } else if (val.name) {\n        options.props[val.name] = val;\n      }\n    }\n  } else if (isPlainObject(props)) {\n    var keys = Object.keys(props);\n    i = keys.length;\n    while (i--) {\n      val = props[keys[i]];\n      if (typeof val === 'function') {\n        props[keys[i]] = { type: val };\n      }\n    }\n  }\n}\n\n/**\n * Guard an Array-format assets option and converted it\n * into the key-value Object format.\n *\n * @param {Object|Array} assets\n * @return {Object}\n */\n\nfunction guardArrayAssets(assets) {\n  if (isArray(assets)) {\n    var res = {};\n    var i = assets.length;\n    var asset;\n    while (i--) {\n      asset = assets[i];\n      var id = typeof asset === 'function' ? asset.options && asset.options.name || asset.id : asset.name || asset.id;\n      if (!id) {\n        process.env.NODE_ENV !== 'production' && warn('Array-syntax assets must provide a \"name\" or \"id\" field.');\n      } else {\n        res[id] = asset;\n      }\n    }\n    return res;\n  }\n  return assets;\n}\n\n/**\n * Merge two option objects into a new one.\n * Core utility used in both instantiation and inheritance.\n *\n * @param {Object} parent\n * @param {Object} child\n * @param {Vue} [vm] - if vm is present, indicates this is\n *                     an instantiation merge.\n */\n\nfunction mergeOptions(parent, child, vm) {\n  guardComponents(child);\n  guardProps(child);\n  if (process.env.NODE_ENV !== 'production') {\n    if (child.propsData && !vm) {\n      warn('propsData can only be used as an instantiation option.');\n    }\n  }\n  var options = {};\n  var key;\n  if (child['extends']) {\n    parent = typeof child['extends'] === 'function' ? mergeOptions(parent, child['extends'].options, vm) : mergeOptions(parent, child['extends'], vm);\n  }\n  if (child.mixins) {\n    for (var i = 0, l = child.mixins.length; i < l; i++) {\n      var mixin = child.mixins[i];\n      var mixinOptions = mixin.prototype instanceof Vue ? mixin.options : mixin;\n      parent = mergeOptions(parent, mixinOptions, vm);\n    }\n  }\n  for (key in parent) {\n    mergeField(key);\n  }\n  for (key in child) {\n    if (!hasOwn(parent, key)) {\n      mergeField(key);\n    }\n  }\n  function mergeField(key) {\n    var strat = strats[key] || defaultStrat;\n    options[key] = strat(parent[key], child[key], vm, key);\n  }\n  return options;\n}\n\n/**\n * Resolve an asset.\n * This function is used because child instances need access\n * to assets defined in its ancestor chain.\n *\n * @param {Object} options\n * @param {String} type\n * @param {String} id\n * @param {Boolean} warnMissing\n * @return {Object|Function}\n */\n\nfunction resolveAsset(options, type, id, warnMissing) {\n  /* istanbul ignore if */\n  if (typeof id !== 'string') {\n    return;\n  }\n  var assets = options[type];\n  var camelizedId;\n  var res = assets[id] ||\n  // camelCase ID\n  assets[camelizedId = camelize(id)] ||\n  // Pascal Case ID\n  assets[camelizedId.charAt(0).toUpperCase() + camelizedId.slice(1)];\n  if (process.env.NODE_ENV !== 'production' && warnMissing && !res) {\n    warn('Failed to resolve ' + type.slice(0, -1) + ': ' + id, options);\n  }\n  return res;\n}\n\nvar uid$1 = 0;\n\n/**\n * A dep is an observable that can have multiple\n * directives subscribing to it.\n *\n * @constructor\n */\nfunction Dep() {\n  this.id = uid$1++;\n  this.subs = [];\n}\n\n// the current target watcher being evaluated.\n// this is globally unique because there could be only one\n// watcher being evaluated at any time.\nDep.target = null;\n\n/**\n * Add a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.addSub = function (sub) {\n  this.subs.push(sub);\n};\n\n/**\n * Remove a directive subscriber.\n *\n * @param {Directive} sub\n */\n\nDep.prototype.removeSub = function (sub) {\n  this.subs.$remove(sub);\n};\n\n/**\n * Add self as a dependency to the target watcher.\n */\n\nDep.prototype.depend = function () {\n  Dep.target.addDep(this);\n};\n\n/**\n * Notify all subscribers of a new value.\n */\n\nDep.prototype.notify = function () {\n  // stablize the subscriber list first\n  var subs = toArray(this.subs);\n  for (var i = 0, l = subs.length; i < l; i++) {\n    subs[i].update();\n  }\n};\n\nvar arrayProto = Array.prototype;\nvar arrayMethods = Object.create(arrayProto)\n\n/**\n * Intercept mutating methods and emit events\n */\n\n;['push', 'pop', 'shift', 'unshift', 'splice', 'sort', 'reverse'].forEach(function (method) {\n  // cache original method\n  var original = arrayProto[method];\n  def(arrayMethods, method, function mutator() {\n    // avoid leaking arguments:\n    // http://jsperf.com/closure-with-arguments\n    var i = arguments.length;\n    var args = new Array(i);\n    while (i--) {\n      args[i] = arguments[i];\n    }\n    var result = original.apply(this, args);\n    var ob = this.__ob__;\n    var inserted;\n    switch (method) {\n      case 'push':\n        inserted = args;\n        break;\n      case 'unshift':\n        inserted = args;\n        break;\n      case 'splice':\n        inserted = args.slice(2);\n        break;\n    }\n    if (inserted) ob.observeArray(inserted);\n    // notify change\n    ob.dep.notify();\n    return result;\n  });\n});\n\n/**\n * Swap the element at the given index with a new value\n * and emits corresponding event.\n *\n * @param {Number} index\n * @param {*} val\n * @return {*} - replaced element\n */\n\ndef(arrayProto, '$set', function $set(index, val) {\n  if (index >= this.length) {\n    this.length = Number(index) + 1;\n  }\n  return this.splice(index, 1, val)[0];\n});\n\n/**\n * Convenience method to remove the element at given index or target element reference.\n *\n * @param {*} item\n */\n\ndef(arrayProto, '$remove', function $remove(item) {\n  /* istanbul ignore if */\n  if (!this.length) return;\n  var index = indexOf(this, item);\n  if (index > -1) {\n    return this.splice(index, 1);\n  }\n});\n\nvar arrayKeys = Object.getOwnPropertyNames(arrayMethods);\n\n/**\n * By default, when a reactive property is set, the new value is\n * also converted to become reactive. However in certain cases, e.g.\n * v-for scope alias and props, we don't want to force conversion\n * because the value may be a nested value under a frozen data structure.\n *\n * So whenever we want to set a reactive property without forcing\n * conversion on the new value, we wrap that call inside this function.\n */\n\nvar shouldConvert = true;\n\nfunction withoutConversion(fn) {\n  shouldConvert = false;\n  fn();\n  shouldConvert = true;\n}\n\n/**\n * Observer class that are attached to each observed\n * object. Once attached, the observer converts target\n * object's property keys into getter/setters that\n * collect dependencies and dispatches updates.\n *\n * @param {Array|Object} value\n * @constructor\n */\n\nfunction Observer(value) {\n  this.value = value;\n  this.dep = new Dep();\n  def(value, '__ob__', this);\n  if (isArray(value)) {\n    var augment = hasProto ? protoAugment : copyAugment;\n    augment(value, arrayMethods, arrayKeys);\n    this.observeArray(value);\n  } else {\n    this.walk(value);\n  }\n}\n\n// Instance methods\n\n/**\n * Walk through each property and convert them into\n * getter/setters. This method should only be called when\n * value type is Object.\n *\n * @param {Object} obj\n */\n\nObserver.prototype.walk = function (obj) {\n  var keys = Object.keys(obj);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    this.convert(keys[i], obj[keys[i]]);\n  }\n};\n\n/**\n * Observe a list of Array items.\n *\n * @param {Array} items\n */\n\nObserver.prototype.observeArray = function (items) {\n  for (var i = 0, l = items.length; i < l; i++) {\n    observe(items[i]);\n  }\n};\n\n/**\n * Convert a property into getter/setter so we can emit\n * the events when the property is accessed/changed.\n *\n * @param {String} key\n * @param {*} val\n */\n\nObserver.prototype.convert = function (key, val) {\n  defineReactive(this.value, key, val);\n};\n\n/**\n * Add an owner vm, so that when $set/$delete mutations\n * happen we can notify owner vms to proxy the keys and\n * digest the watchers. This is only called when the object\n * is observed as an instance's root $data.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.addVm = function (vm) {\n  (this.vms || (this.vms = [])).push(vm);\n};\n\n/**\n * Remove an owner vm. This is called when the object is\n * swapped out as an instance's $data object.\n *\n * @param {Vue} vm\n */\n\nObserver.prototype.removeVm = function (vm) {\n  this.vms.$remove(vm);\n};\n\n// helpers\n\n/**\n * Augment an target Object or Array by intercepting\n * the prototype chain using __proto__\n *\n * @param {Object|Array} target\n * @param {Object} src\n */\n\nfunction protoAugment(target, src) {\n  /* eslint-disable no-proto */\n  target.__proto__ = src;\n  /* eslint-enable no-proto */\n}\n\n/**\n * Augment an target Object or Array by defining\n * hidden properties.\n *\n * @param {Object|Array} target\n * @param {Object} proto\n */\n\nfunction copyAugment(target, src, keys) {\n  for (var i = 0, l = keys.length; i < l; i++) {\n    var key = keys[i];\n    def(target, key, src[key]);\n  }\n}\n\n/**\n * Attempt to create an observer instance for a value,\n * returns the new observer if successfully observed,\n * or the existing observer if the value already has one.\n *\n * @param {*} value\n * @param {Vue} [vm]\n * @return {Observer|undefined}\n * @static\n */\n\nfunction observe(value, vm) {\n  if (!value || typeof value !== 'object') {\n    return;\n  }\n  var ob;\n  if (hasOwn(value, '__ob__') && value.__ob__ instanceof Observer) {\n    ob = value.__ob__;\n  } else if (shouldConvert && (isArray(value) || isPlainObject(value)) && Object.isExtensible(value) && !value._isVue) {\n    ob = new Observer(value);\n  }\n  if (ob && vm) {\n    ob.addVm(vm);\n  }\n  return ob;\n}\n\n/**\n * Define a reactive property on an Object.\n *\n * @param {Object} obj\n * @param {String} key\n * @param {*} val\n */\n\nfunction defineReactive(obj, key, val) {\n  var dep = new Dep();\n\n  var property = Object.getOwnPropertyDescriptor(obj, key);\n  if (property && property.configurable === false) {\n    return;\n  }\n\n  // cater for pre-defined getter/setters\n  var getter = property && property.get;\n  var setter = property && property.set;\n\n  var childOb = observe(val);\n  Object.defineProperty(obj, key, {\n    enumerable: true,\n    configurable: true,\n    get: function reactiveGetter() {\n      var value = getter ? getter.call(obj) : val;\n      if (Dep.target) {\n        dep.depend();\n        if (childOb) {\n          childOb.dep.depend();\n        }\n        if (isArray(value)) {\n          for (var e, i = 0, l = value.length; i < l; i++) {\n            e = value[i];\n            e && e.__ob__ && e.__ob__.dep.depend();\n          }\n        }\n      }\n      return value;\n    },\n    set: function reactiveSetter(newVal) {\n      var value = getter ? getter.call(obj) : val;\n      if (newVal === value) {\n        return;\n      }\n      if (setter) {\n        setter.call(obj, newVal);\n      } else {\n        val = newVal;\n      }\n      childOb = observe(newVal);\n      dep.notify();\n    }\n  });\n}\n\n\n\nvar util = Object.freeze({\n\tdefineReactive: defineReactive,\n\tset: set,\n\tdel: del,\n\thasOwn: hasOwn,\n\tisLiteral: isLiteral,\n\tisReserved: isReserved,\n\t_toString: _toString,\n\ttoNumber: toNumber,\n\ttoBoolean: toBoolean,\n\tstripQuotes: stripQuotes,\n\tcamelize: camelize,\n\thyphenate: hyphenate,\n\tclassify: classify,\n\tbind: bind,\n\ttoArray: toArray,\n\textend: extend,\n\tisObject: isObject,\n\tisPlainObject: isPlainObject,\n\tdef: def,\n\tdebounce: _debounce,\n\tindexOf: indexOf,\n\tcancellable: cancellable,\n\tlooseEqual: looseEqual,\n\tisArray: isArray,\n\thasProto: hasProto,\n\tinBrowser: inBrowser,\n\tdevtools: devtools,\n\tisIE: isIE,\n\tisIE9: isIE9,\n\tisAndroid: isAndroid,\n\tisIos: isIos,\n\tiosVersionMatch: iosVersionMatch,\n\tiosVersion: iosVersion,\n\thasMutationObserverBug: hasMutationObserverBug,\n\tget transitionProp () { return transitionProp; },\n\tget transitionEndEvent () { return transitionEndEvent; },\n\tget animationProp () { return animationProp; },\n\tget animationEndEvent () { return animationEndEvent; },\n\tnextTick: nextTick,\n\tget _Set () { return _Set; },\n\tquery: query,\n\tinDoc: inDoc,\n\tgetAttr: getAttr,\n\tgetBindAttr: getBindAttr,\n\thasBindAttr: hasBindAttr,\n\tbefore: before,\n\tafter: after,\n\tremove: remove,\n\tprepend: prepend,\n\treplace: replace,\n\ton: on,\n\toff: off,\n\tsetClass: setClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\textractContent: extractContent,\n\ttrimNode: trimNode,\n\tisTemplate: isTemplate,\n\tcreateAnchor: createAnchor,\n\tfindRef: findRef,\n\tmapNodeRange: mapNodeRange,\n\tremoveNodeRange: removeNodeRange,\n\tisFragment: isFragment,\n\tgetOuterHTML: getOuterHTML,\n\tmergeOptions: mergeOptions,\n\tresolveAsset: resolveAsset,\n\tcheckComponentAttr: checkComponentAttr,\n\tcommonTagRE: commonTagRE,\n\treservedTagRE: reservedTagRE,\n\tget warn () { return warn; }\n});\n\nvar uid = 0;\n\nfunction initMixin (Vue) {\n  /**\n   * The main init sequence. This is called for every\n   * instance, including ones that are created from extended\n   * constructors.\n   *\n   * @param {Object} options - this options object should be\n   *                           the result of merging class\n   *                           options and the options passed\n   *                           in to the constructor.\n   */\n\n  Vue.prototype._init = function (options) {\n    options = options || {};\n\n    this.$el = null;\n    this.$parent = options.parent;\n    this.$root = this.$parent ? this.$parent.$root : this;\n    this.$children = [];\n    this.$refs = {}; // child vm references\n    this.$els = {}; // element references\n    this._watchers = []; // all watchers as an array\n    this._directives = []; // all directives\n\n    // a uid\n    this._uid = uid++;\n\n    // a flag to avoid this being observed\n    this._isVue = true;\n\n    // events bookkeeping\n    this._events = {}; // registered callbacks\n    this._eventsCount = {}; // for $broadcast optimization\n\n    // fragment instance properties\n    this._isFragment = false;\n    this._fragment = // @type {DocumentFragment}\n    this._fragmentStart = // @type {Text|Comment}\n    this._fragmentEnd = null; // @type {Text|Comment}\n\n    // lifecycle state\n    this._isCompiled = this._isDestroyed = this._isReady = this._isAttached = this._isBeingDestroyed = this._vForRemoving = false;\n    this._unlinkFn = null;\n\n    // context:\n    // if this is a transcluded component, context\n    // will be the common parent vm of this instance\n    // and its host.\n    this._context = options._context || this.$parent;\n\n    // scope:\n    // if this is inside an inline v-for, the scope\n    // will be the intermediate scope created for this\n    // repeat fragment. this is used for linking props\n    // and container directives.\n    this._scope = options._scope;\n\n    // fragment:\n    // if this instance is compiled inside a Fragment, it\n    // needs to reigster itself as a child of that fragment\n    // for attach/detach to work properly.\n    this._frag = options._frag;\n    if (this._frag) {\n      this._frag.children.push(this);\n    }\n\n    // push self into parent / transclusion host\n    if (this.$parent) {\n      this.$parent.$children.push(this);\n    }\n\n    // merge options.\n    options = this.$options = mergeOptions(this.constructor.options, options, this);\n\n    // set ref\n    this._updateRef();\n\n    // initialize data as empty object.\n    // it will be filled up in _initData().\n    this._data = {};\n\n    // call init hook\n    this._callHook('init');\n\n    // initialize data observation and scope inheritance.\n    this._initState();\n\n    // setup event system and option events.\n    this._initEvents();\n\n    // call created hook\n    this._callHook('created');\n\n    // if `el` option is passed, start compilation.\n    if (options.el) {\n      this.$mount(options.el);\n    }\n  };\n}\n\nvar pathCache = new Cache(1000);\n\n// actions\nvar APPEND = 0;\nvar PUSH = 1;\nvar INC_SUB_PATH_DEPTH = 2;\nvar PUSH_SUB_PATH = 3;\n\n// states\nvar BEFORE_PATH = 0;\nvar IN_PATH = 1;\nvar BEFORE_IDENT = 2;\nvar IN_IDENT = 3;\nvar IN_SUB_PATH = 4;\nvar IN_SINGLE_QUOTE = 5;\nvar IN_DOUBLE_QUOTE = 6;\nvar AFTER_PATH = 7;\nvar ERROR = 8;\n\nvar pathStateMachine = [];\n\npathStateMachine[BEFORE_PATH] = {\n  'ws': [BEFORE_PATH],\n  'ident': [IN_IDENT, APPEND],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[IN_PATH] = {\n  'ws': [IN_PATH],\n  '.': [BEFORE_IDENT],\n  '[': [IN_SUB_PATH],\n  'eof': [AFTER_PATH]\n};\n\npathStateMachine[BEFORE_IDENT] = {\n  'ws': [BEFORE_IDENT],\n  'ident': [IN_IDENT, APPEND]\n};\n\npathStateMachine[IN_IDENT] = {\n  'ident': [IN_IDENT, APPEND],\n  '0': [IN_IDENT, APPEND],\n  'number': [IN_IDENT, APPEND],\n  'ws': [IN_PATH, PUSH],\n  '.': [BEFORE_IDENT, PUSH],\n  '[': [IN_SUB_PATH, PUSH],\n  'eof': [AFTER_PATH, PUSH]\n};\n\npathStateMachine[IN_SUB_PATH] = {\n  \"'\": [IN_SINGLE_QUOTE, APPEND],\n  '\"': [IN_DOUBLE_QUOTE, APPEND],\n  '[': [IN_SUB_PATH, INC_SUB_PATH_DEPTH],\n  ']': [IN_PATH, PUSH_SUB_PATH],\n  'eof': ERROR,\n  'else': [IN_SUB_PATH, APPEND]\n};\n\npathStateMachine[IN_SINGLE_QUOTE] = {\n  \"'\": [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_SINGLE_QUOTE, APPEND]\n};\n\npathStateMachine[IN_DOUBLE_QUOTE] = {\n  '\"': [IN_SUB_PATH, APPEND],\n  'eof': ERROR,\n  'else': [IN_DOUBLE_QUOTE, APPEND]\n};\n\n/**\n * Determine the type of a character in a keypath.\n *\n * @param {Char} ch\n * @return {String} type\n */\n\nfunction getPathCharType(ch) {\n  if (ch === undefined) {\n    return 'eof';\n  }\n\n  var code = ch.charCodeAt(0);\n\n  switch (code) {\n    case 0x5B: // [\n    case 0x5D: // ]\n    case 0x2E: // .\n    case 0x22: // \"\n    case 0x27: // '\n    case 0x30:\n      // 0\n      return ch;\n\n    case 0x5F: // _\n    case 0x24:\n      // $\n      return 'ident';\n\n    case 0x20: // Space\n    case 0x09: // Tab\n    case 0x0A: // Newline\n    case 0x0D: // Return\n    case 0xA0: // No-break space\n    case 0xFEFF: // Byte Order Mark\n    case 0x2028: // Line Separator\n    case 0x2029:\n      // Paragraph Separator\n      return 'ws';\n  }\n\n  // a-z, A-Z\n  if (code >= 0x61 && code <= 0x7A || code >= 0x41 && code <= 0x5A) {\n    return 'ident';\n  }\n\n  // 1-9\n  if (code >= 0x31 && code <= 0x39) {\n    return 'number';\n  }\n\n  return 'else';\n}\n\n/**\n * Format a subPath, return its plain form if it is\n * a literal string or number. Otherwise prepend the\n * dynamic indicator (*).\n *\n * @param {String} path\n * @return {String}\n */\n\nfunction formatSubPath(path) {\n  var trimmed = path.trim();\n  // invalid leading 0\n  if (path.charAt(0) === '0' && isNaN(path)) {\n    return false;\n  }\n  return isLiteral(trimmed) ? stripQuotes(trimmed) : '*' + trimmed;\n}\n\n/**\n * Parse a string path into an array of segments\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parse(path) {\n  var keys = [];\n  var index = -1;\n  var mode = BEFORE_PATH;\n  var subPathDepth = 0;\n  var c, newChar, key, type, transition, action, typeMap;\n\n  var actions = [];\n\n  actions[PUSH] = function () {\n    if (key !== undefined) {\n      keys.push(key);\n      key = undefined;\n    }\n  };\n\n  actions[APPEND] = function () {\n    if (key === undefined) {\n      key = newChar;\n    } else {\n      key += newChar;\n    }\n  };\n\n  actions[INC_SUB_PATH_DEPTH] = function () {\n    actions[APPEND]();\n    subPathDepth++;\n  };\n\n  actions[PUSH_SUB_PATH] = function () {\n    if (subPathDepth > 0) {\n      subPathDepth--;\n      mode = IN_SUB_PATH;\n      actions[APPEND]();\n    } else {\n      subPathDepth = 0;\n      key = formatSubPath(key);\n      if (key === false) {\n        return false;\n      } else {\n        actions[PUSH]();\n      }\n    }\n  };\n\n  function maybeUnescapeQuote() {\n    var nextChar = path[index + 1];\n    if (mode === IN_SINGLE_QUOTE && nextChar === \"'\" || mode === IN_DOUBLE_QUOTE && nextChar === '\"') {\n      index++;\n      newChar = '\\\\' + nextChar;\n      actions[APPEND]();\n      return true;\n    }\n  }\n\n  while (mode != null) {\n    index++;\n    c = path[index];\n\n    if (c === '\\\\' && maybeUnescapeQuote()) {\n      continue;\n    }\n\n    type = getPathCharType(c);\n    typeMap = pathStateMachine[mode];\n    transition = typeMap[type] || typeMap['else'] || ERROR;\n\n    if (transition === ERROR) {\n      return; // parse error\n    }\n\n    mode = transition[0];\n    action = actions[transition[1]];\n    if (action) {\n      newChar = transition[2];\n      newChar = newChar === undefined ? c : newChar;\n      if (action() === false) {\n        return;\n      }\n    }\n\n    if (mode === AFTER_PATH) {\n      keys.raw = path;\n      return keys;\n    }\n  }\n}\n\n/**\n * External parse that check for a cache hit first\n *\n * @param {String} path\n * @return {Array|undefined}\n */\n\nfunction parsePath(path) {\n  var hit = pathCache.get(path);\n  if (!hit) {\n    hit = parse(path);\n    if (hit) {\n      pathCache.put(path, hit);\n    }\n  }\n  return hit;\n}\n\n/**\n * Get from an object from a path string\n *\n * @param {Object} obj\n * @param {String} path\n */\n\nfunction getPath(obj, path) {\n  return parseExpression(path).get(obj);\n}\n\n/**\n * Warn against setting non-existent root path on a vm.\n */\n\nvar warnNonExistent;\nif (process.env.NODE_ENV !== 'production') {\n  warnNonExistent = function (path, vm) {\n    warn('You are setting a non-existent path \"' + path.raw + '\" ' + 'on a vm instance. Consider pre-initializing the property ' + 'with the \"data\" option for more reliable reactivity ' + 'and better performance.', vm);\n  };\n}\n\n/**\n * Set on an object from a path\n *\n * @param {Object} obj\n * @param {String | Array} path\n * @param {*} val\n */\n\nfunction setPath(obj, path, val) {\n  var original = obj;\n  if (typeof path === 'string') {\n    path = parse(path);\n  }\n  if (!path || !isObject(obj)) {\n    return false;\n  }\n  var last, key;\n  for (var i = 0, l = path.length; i < l; i++) {\n    last = obj;\n    key = path[i];\n    if (key.charAt(0) === '*') {\n      key = parseExpression(key.slice(1)).get.call(original, original);\n    }\n    if (i < l - 1) {\n      obj = obj[key];\n      if (!isObject(obj)) {\n        obj = {};\n        if (process.env.NODE_ENV !== 'production' && last._isVue) {\n          warnNonExistent(path, last);\n        }\n        set(last, key, obj);\n      }\n    } else {\n      if (isArray(obj)) {\n        obj.$set(key, val);\n      } else if (key in obj) {\n        obj[key] = val;\n      } else {\n        if (process.env.NODE_ENV !== 'production' && obj._isVue) {\n          warnNonExistent(path, obj);\n        }\n        set(obj, key, val);\n      }\n    }\n  }\n  return true;\n}\n\nvar path = Object.freeze({\n  parsePath: parsePath,\n  getPath: getPath,\n  setPath: setPath\n});\n\nvar expressionCache = new Cache(1000);\n\nvar allowedKeywords = 'Math,Date,this,true,false,null,undefined,Infinity,NaN,' + 'isNaN,isFinite,decodeURI,decodeURIComponent,encodeURI,' + 'encodeURIComponent,parseInt,parseFloat';\nvar allowedKeywordsRE = new RegExp('^(' + allowedKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\n// keywords that don't make sense inside expressions\nvar improperKeywords = 'break,case,class,catch,const,continue,debugger,default,' + 'delete,do,else,export,extends,finally,for,function,if,' + 'import,in,instanceof,let,return,super,switch,throw,try,' + 'var,while,with,yield,enum,await,implements,package,' + 'protected,static,interface,private,public';\nvar improperKeywordsRE = new RegExp('^(' + improperKeywords.replace(/,/g, '\\\\b|') + '\\\\b)');\n\nvar wsRE = /\\s/g;\nvar newlineRE = /\\n/g;\nvar saveRE = /[\\{,]\\s*[\\w\\$_]+\\s*:|('(?:[^'\\\\]|\\\\.)*'|\"(?:[^\"\\\\]|\\\\.)*\"|`(?:[^`\\\\]|\\\\.)*\\$\\{|\\}(?:[^`\\\\]|\\\\.)*`|`(?:[^`\\\\]|\\\\.)*`)|new |typeof |void /g;\nvar restoreRE = /\"(\\d+)\"/g;\nvar pathTestRE = /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['.*?'\\]|\\[\".*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/;\nvar identRE = /[^\\w$\\.](?:[A-Za-z_$][\\w$]*)/g;\nvar literalValueRE$1 = /^(?:true|false|null|undefined|Infinity|NaN)$/;\n\nfunction noop() {}\n\n/**\n * Save / Rewrite / Restore\n *\n * When rewriting paths found in an expression, it is\n * possible for the same letter sequences to be found in\n * strings and Object literal property keys. Therefore we\n * remove and store these parts in a temporary array, and\n * restore them after the path rewrite.\n */\n\nvar saved = [];\n\n/**\n * Save replacer\n *\n * The save regex can match two possible cases:\n * 1. An opening object literal\n * 2. A string\n * If matched as a plain string, we need to escape its\n * newlines, since the string needs to be preserved when\n * generating the function body.\n *\n * @param {String} str\n * @param {String} isString - str if matched as a string\n * @return {String} - placeholder with index\n */\n\nfunction save(str, isString) {\n  var i = saved.length;\n  saved[i] = isString ? str.replace(newlineRE, '\\\\n') : str;\n  return '\"' + i + '\"';\n}\n\n/**\n * Path rewrite replacer\n *\n * @param {String} raw\n * @return {String}\n */\n\nfunction rewrite(raw) {\n  var c = raw.charAt(0);\n  var path = raw.slice(1);\n  if (allowedKeywordsRE.test(path)) {\n    return raw;\n  } else {\n    path = path.indexOf('\"') > -1 ? path.replace(restoreRE, restore) : path;\n    return c + 'scope.' + path;\n  }\n}\n\n/**\n * Restore replacer\n *\n * @param {String} str\n * @param {String} i - matched save index\n * @return {String}\n */\n\nfunction restore(str, i) {\n  return saved[i];\n}\n\n/**\n * Rewrite an expression, prefixing all path accessors with\n * `scope.` and generate getter/setter functions.\n *\n * @param {String} exp\n * @return {Function}\n */\n\nfunction compileGetter(exp) {\n  if (improperKeywordsRE.test(exp)) {\n    process.env.NODE_ENV !== 'production' && warn('Avoid using reserved keywords in expression: ' + exp);\n  }\n  // reset state\n  saved.length = 0;\n  // save strings and object literal keys\n  var body = exp.replace(saveRE, save).replace(wsRE, '');\n  // rewrite all paths\n  // pad 1 space here because the regex matches 1 extra char\n  body = (' ' + body).replace(identRE, rewrite).replace(restoreRE, restore);\n  return makeGetterFn(body);\n}\n\n/**\n * Build a getter function. Requires eval.\n *\n * We isolate the try/catch so it doesn't affect the\n * optimization of the parse function when it is not called.\n *\n * @param {String} body\n * @return {Function|undefined}\n */\n\nfunction makeGetterFn(body) {\n  try {\n    /* eslint-disable no-new-func */\n    return new Function('scope', 'return ' + body + ';');\n    /* eslint-enable no-new-func */\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production') {\n      /* istanbul ignore if */\n      if (e.toString().match(/unsafe-eval|CSP/)) {\n        warn('It seems you are using the default build of Vue.js in an environment ' + 'with Content Security Policy that prohibits unsafe-eval. ' + 'Use the CSP-compliant build instead: ' + 'http://vuejs.org/guide/installation.html#CSP-compliant-build');\n      } else {\n        warn('Invalid expression. ' + 'Generated function body: ' + body);\n      }\n    }\n    return noop;\n  }\n}\n\n/**\n * Compile a setter function for the expression.\n *\n * @param {String} exp\n * @return {Function|undefined}\n */\n\nfunction compileSetter(exp) {\n  var path = parsePath(exp);\n  if (path) {\n    return function (scope, val) {\n      setPath(scope, path, val);\n    };\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid setter expression: ' + exp);\n  }\n}\n\n/**\n * Parse an expression into re-written getter/setters.\n *\n * @param {String} exp\n * @param {Boolean} needSet\n * @return {Function}\n */\n\nfunction parseExpression(exp, needSet) {\n  exp = exp.trim();\n  // try cache\n  var hit = expressionCache.get(exp);\n  if (hit) {\n    if (needSet && !hit.set) {\n      hit.set = compileSetter(hit.exp);\n    }\n    return hit;\n  }\n  var res = { exp: exp };\n  res.get = isSimplePath(exp) && exp.indexOf('[') < 0\n  // optimized super simple getter\n  ? makeGetterFn('scope.' + exp)\n  // dynamic getter\n  : compileGetter(exp);\n  if (needSet) {\n    res.set = compileSetter(exp);\n  }\n  expressionCache.put(exp, res);\n  return res;\n}\n\n/**\n * Check if an expression is a simple path.\n *\n * @param {String} exp\n * @return {Boolean}\n */\n\nfunction isSimplePath(exp) {\n  return pathTestRE.test(exp) &&\n  // don't treat literal values as paths\n  !literalValueRE$1.test(exp) &&\n  // Math constants e.g. Math.PI, Math.E etc.\n  exp.slice(0, 5) !== 'Math.';\n}\n\nvar expression = Object.freeze({\n  parseExpression: parseExpression,\n  isSimplePath: isSimplePath\n});\n\n// we have two separate queues: one for directive updates\n// and one for user watcher registered via $watch().\n// we want to guarantee directive updates to be called\n// before user watchers so that when user watchers are\n// triggered, the DOM would have already been in updated\n// state.\n\nvar queue = [];\nvar userQueue = [];\nvar has = {};\nvar circular = {};\nvar waiting = false;\n\n/**\n * Reset the batcher's state.\n */\n\nfunction resetBatcherState() {\n  queue.length = 0;\n  userQueue.length = 0;\n  has = {};\n  circular = {};\n  waiting = false;\n}\n\n/**\n * Flush both queues and run the watchers.\n */\n\nfunction flushBatcherQueue() {\n  var _again = true;\n\n  _function: while (_again) {\n    _again = false;\n\n    runBatcherQueue(queue);\n    runBatcherQueue(userQueue);\n    // user watchers triggered more watchers,\n    // keep flushing until it depletes\n    if (queue.length) {\n      _again = true;\n      continue _function;\n    }\n    // dev tool hook\n    /* istanbul ignore if */\n    if (devtools && config.devtools) {\n      devtools.emit('flush');\n    }\n    resetBatcherState();\n  }\n}\n\n/**\n * Run the watchers in a single queue.\n *\n * @param {Array} queue\n */\n\nfunction runBatcherQueue(queue) {\n  // do not cache length because more watchers might be pushed\n  // as we run existing watchers\n  for (var i = 0; i < queue.length; i++) {\n    var watcher = queue[i];\n    var id = watcher.id;\n    has[id] = null;\n    watcher.run();\n    // in dev build, check and stop circular updates.\n    if (process.env.NODE_ENV !== 'production' && has[id] != null) {\n      circular[id] = (circular[id] || 0) + 1;\n      if (circular[id] > config._maxUpdateCount) {\n        warn('You may have an infinite update loop for watcher ' + 'with expression \"' + watcher.expression + '\"', watcher.vm);\n        break;\n      }\n    }\n  }\n  queue.length = 0;\n}\n\n/**\n * Push a watcher into the watcher queue.\n * Jobs with duplicate IDs will be skipped unless it's\n * pushed when the queue is being flushed.\n *\n * @param {Watcher} watcher\n *   properties:\n *   - {Number} id\n *   - {Function} run\n */\n\nfunction pushWatcher(watcher) {\n  var id = watcher.id;\n  if (has[id] == null) {\n    // push watcher into appropriate queue\n    var q = watcher.user ? userQueue : queue;\n    has[id] = q.length;\n    q.push(watcher);\n    // queue the flush\n    if (!waiting) {\n      waiting = true;\n      nextTick(flushBatcherQueue);\n    }\n  }\n}\n\nvar uid$2 = 0;\n\n/**\n * A watcher parses an expression, collects dependencies,\n * and fires callback when the expression value changes.\n * This is used for both the $watch() api and directives.\n *\n * @param {Vue} vm\n * @param {String|Function} expOrFn\n * @param {Function} cb\n * @param {Object} options\n *                 - {Array} filters\n *                 - {Boolean} twoWay\n *                 - {Boolean} deep\n *                 - {Boolean} user\n *                 - {Boolean} sync\n *                 - {Boolean} lazy\n *                 - {Function} [preProcess]\n *                 - {Function} [postProcess]\n * @constructor\n */\nfunction Watcher(vm, expOrFn, cb, options) {\n  // mix in options\n  if (options) {\n    extend(this, options);\n  }\n  var isFn = typeof expOrFn === 'function';\n  this.vm = vm;\n  vm._watchers.push(this);\n  this.expression = expOrFn;\n  this.cb = cb;\n  this.id = ++uid$2; // uid for batching\n  this.active = true;\n  this.dirty = this.lazy; // for lazy watchers\n  this.deps = [];\n  this.newDeps = [];\n  this.depIds = new _Set();\n  this.newDepIds = new _Set();\n  this.prevError = null; // for async error stacks\n  // parse expression for getter/setter\n  if (isFn) {\n    this.getter = expOrFn;\n    this.setter = undefined;\n  } else {\n    var res = parseExpression(expOrFn, this.twoWay);\n    this.getter = res.get;\n    this.setter = res.set;\n  }\n  this.value = this.lazy ? undefined : this.get();\n  // state for avoiding false triggers for deep and Array\n  // watchers during vm._digest()\n  this.queued = this.shallow = false;\n}\n\n/**\n * Evaluate the getter, and re-collect dependencies.\n */\n\nWatcher.prototype.get = function () {\n  this.beforeGet();\n  var scope = this.scope || this.vm;\n  var value;\n  try {\n    value = this.getter.call(scope, scope);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating expression ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // \"touch\" every property so they are all tracked as\n  // dependencies for deep watching\n  if (this.deep) {\n    traverse(value);\n  }\n  if (this.preProcess) {\n    value = this.preProcess(value);\n  }\n  if (this.filters) {\n    value = scope._applyFilters(value, null, this.filters, false);\n  }\n  if (this.postProcess) {\n    value = this.postProcess(value);\n  }\n  this.afterGet();\n  return value;\n};\n\n/**\n * Set the corresponding value with the setter.\n *\n * @param {*} value\n */\n\nWatcher.prototype.set = function (value) {\n  var scope = this.scope || this.vm;\n  if (this.filters) {\n    value = scope._applyFilters(value, this.value, this.filters, true);\n  }\n  try {\n    this.setter.call(scope, scope, value);\n  } catch (e) {\n    if (process.env.NODE_ENV !== 'production' && config.warnExpressionErrors) {\n      warn('Error when evaluating setter ' + '\"' + this.expression + '\": ' + e.toString(), this.vm);\n    }\n  }\n  // two-way sync for v-for alias\n  var forContext = scope.$forContext;\n  if (forContext && forContext.alias === this.expression) {\n    if (forContext.filters) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using two-way binding on ' + 'a v-for alias (' + this.expression + '), and the ' + 'v-for has filters. This will not work properly. ' + 'Either remove the filters or use an array of ' + 'objects and bind to object properties instead.', this.vm);\n      return;\n    }\n    forContext._withLock(function () {\n      if (scope.$key) {\n        // original is an object\n        forContext.rawValue[scope.$key] = value;\n      } else {\n        forContext.rawValue.$set(scope.$index, value);\n      }\n    });\n  }\n};\n\n/**\n * Prepare for dependency collection.\n */\n\nWatcher.prototype.beforeGet = function () {\n  Dep.target = this;\n};\n\n/**\n * Add a dependency to this directive.\n *\n * @param {Dep} dep\n */\n\nWatcher.prototype.addDep = function (dep) {\n  var id = dep.id;\n  if (!this.newDepIds.has(id)) {\n    this.newDepIds.add(id);\n    this.newDeps.push(dep);\n    if (!this.depIds.has(id)) {\n      dep.addSub(this);\n    }\n  }\n};\n\n/**\n * Clean up for dependency collection.\n */\n\nWatcher.prototype.afterGet = function () {\n  Dep.target = null;\n  var i = this.deps.length;\n  while (i--) {\n    var dep = this.deps[i];\n    if (!this.newDepIds.has(dep.id)) {\n      dep.removeSub(this);\n    }\n  }\n  var tmp = this.depIds;\n  this.depIds = this.newDepIds;\n  this.newDepIds = tmp;\n  this.newDepIds.clear();\n  tmp = this.deps;\n  this.deps = this.newDeps;\n  this.newDeps = tmp;\n  this.newDeps.length = 0;\n};\n\n/**\n * Subscriber interface.\n * Will be called when a dependency changes.\n *\n * @param {Boolean} shallow\n */\n\nWatcher.prototype.update = function (shallow) {\n  if (this.lazy) {\n    this.dirty = true;\n  } else if (this.sync || !config.async) {\n    this.run();\n  } else {\n    // if queued, only overwrite shallow with non-shallow,\n    // but not the other way around.\n    this.shallow = this.queued ? shallow ? this.shallow : false : !!shallow;\n    this.queued = true;\n    // record before-push error stack in debug mode\n    /* istanbul ignore if */\n    if (process.env.NODE_ENV !== 'production' && config.debug) {\n      this.prevError = new Error('[vue] async stack trace');\n    }\n    pushWatcher(this);\n  }\n};\n\n/**\n * Batcher job interface.\n * Will be called by the batcher.\n */\n\nWatcher.prototype.run = function () {\n  if (this.active) {\n    var value = this.get();\n    if (value !== this.value ||\n    // Deep watchers and watchers on Object/Arrays should fire even\n    // when the value is the same, because the value may\n    // have mutated; but only do so if this is a\n    // non-shallow update (caused by a vm digest).\n    (isObject(value) || this.deep) && !this.shallow) {\n      // set new value\n      var oldValue = this.value;\n      this.value = value;\n      // in debug + async mode, when a watcher callbacks\n      // throws, we also throw the saved before-push error\n      // so the full cross-tick stack trace is available.\n      var prevError = this.prevError;\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && config.debug && prevError) {\n        this.prevError = null;\n        try {\n          this.cb.call(this.vm, value, oldValue);\n        } catch (e) {\n          nextTick(function () {\n            throw prevError;\n          }, 0);\n          throw e;\n        }\n      } else {\n        this.cb.call(this.vm, value, oldValue);\n      }\n    }\n    this.queued = this.shallow = false;\n  }\n};\n\n/**\n * Evaluate the value of the watcher.\n * This only gets called for lazy watchers.\n */\n\nWatcher.prototype.evaluate = function () {\n  // avoid overwriting another watcher that is being\n  // collected.\n  var current = Dep.target;\n  this.value = this.get();\n  this.dirty = false;\n  Dep.target = current;\n};\n\n/**\n * Depend on all deps collected by this watcher.\n */\n\nWatcher.prototype.depend = function () {\n  var i = this.deps.length;\n  while (i--) {\n    this.deps[i].depend();\n  }\n};\n\n/**\n * Remove self from all dependencies' subcriber list.\n */\n\nWatcher.prototype.teardown = function () {\n  if (this.active) {\n    // remove self from vm's watcher list\n    // this is a somewhat expensive operation so we skip it\n    // if the vm is being destroyed or is performing a v-for\n    // re-render (the watcher list is then filtered by v-for).\n    if (!this.vm._isBeingDestroyed && !this.vm._vForRemoving) {\n      this.vm._watchers.$remove(this);\n    }\n    var i = this.deps.length;\n    while (i--) {\n      this.deps[i].removeSub(this);\n    }\n    this.active = false;\n    this.vm = this.cb = this.value = null;\n  }\n};\n\n/**\n * Recrusively traverse an object to evoke all converted\n * getters, so that every nested property inside the object\n * is collected as a \"deep\" dependency.\n *\n * @param {*} val\n */\n\nvar seenObjects = new _Set();\nfunction traverse(val, seen) {\n  var i = undefined,\n      keys = undefined;\n  if (!seen) {\n    seen = seenObjects;\n    seen.clear();\n  }\n  var isA = isArray(val);\n  var isO = isObject(val);\n  if ((isA || isO) && Object.isExtensible(val)) {\n    if (val.__ob__) {\n      var depId = val.__ob__.dep.id;\n      if (seen.has(depId)) {\n        return;\n      } else {\n        seen.add(depId);\n      }\n    }\n    if (isA) {\n      i = val.length;\n      while (i--) traverse(val[i], seen);\n    } else if (isO) {\n      keys = Object.keys(val);\n      i = keys.length;\n      while (i--) traverse(val[keys[i]], seen);\n    }\n  }\n}\n\nvar text$1 = {\n\n  bind: function bind() {\n    this.attr = this.el.nodeType === 3 ? 'data' : 'textContent';\n  },\n\n  update: function update(value) {\n    this.el[this.attr] = _toString(value);\n  }\n};\n\nvar templateCache = new Cache(1000);\nvar idSelectorCache = new Cache(1000);\n\nvar map = {\n  efault: [0, '', ''],\n  legend: [1, '<fieldset>', '</fieldset>'],\n  tr: [2, '<table><tbody>', '</tbody></table>'],\n  col: [2, '<table><tbody></tbody><colgroup>', '</colgroup></table>']\n};\n\nmap.td = map.th = [3, '<table><tbody><tr>', '</tr></tbody></table>'];\n\nmap.option = map.optgroup = [1, '<select multiple=\"multiple\">', '</select>'];\n\nmap.thead = map.tbody = map.colgroup = map.caption = map.tfoot = [1, '<table>', '</table>'];\n\nmap.g = map.defs = map.symbol = map.use = map.image = map.text = map.circle = map.ellipse = map.line = map.path = map.polygon = map.polyline = map.rect = [1, '<svg ' + 'xmlns=\"http://www.w3.org/2000/svg\" ' + 'xmlns:xlink=\"http://www.w3.org/1999/xlink\" ' + 'xmlns:ev=\"http://www.w3.org/2001/xml-events\"' + 'version=\"1.1\">', '</svg>'];\n\n/**\n * Check if a node is a supported template node with a\n * DocumentFragment content.\n *\n * @param {Node} node\n * @return {Boolean}\n */\n\nfunction isRealTemplate(node) {\n  return isTemplate(node) && isFragment(node.content);\n}\n\nvar tagRE$1 = /<([\\w:-]+)/;\nvar entityRE = /&#?\\w+?;/;\nvar commentRE = /<!--/;\n\n/**\n * Convert a string template to a DocumentFragment.\n * Determines correct wrapping by tag types. Wrapping\n * strategy found in jQuery & component/domify.\n *\n * @param {String} templateString\n * @param {Boolean} raw\n * @return {DocumentFragment}\n */\n\nfunction stringToFragment(templateString, raw) {\n  // try a cache hit first\n  var cacheKey = raw ? templateString : templateString.trim();\n  var hit = templateCache.get(cacheKey);\n  if (hit) {\n    return hit;\n  }\n\n  var frag = document.createDocumentFragment();\n  var tagMatch = templateString.match(tagRE$1);\n  var entityMatch = entityRE.test(templateString);\n  var commentMatch = commentRE.test(templateString);\n\n  if (!tagMatch && !entityMatch && !commentMatch) {\n    // text only, return a single text node.\n    frag.appendChild(document.createTextNode(templateString));\n  } else {\n    var tag = tagMatch && tagMatch[1];\n    var wrap = map[tag] || map.efault;\n    var depth = wrap[0];\n    var prefix = wrap[1];\n    var suffix = wrap[2];\n    var node = document.createElement('div');\n\n    node.innerHTML = prefix + templateString + suffix;\n    while (depth--) {\n      node = node.lastChild;\n    }\n\n    var child;\n    /* eslint-disable no-cond-assign */\n    while (child = node.firstChild) {\n      /* eslint-enable no-cond-assign */\n      frag.appendChild(child);\n    }\n  }\n  if (!raw) {\n    trimNode(frag);\n  }\n  templateCache.put(cacheKey, frag);\n  return frag;\n}\n\n/**\n * Convert a template node to a DocumentFragment.\n *\n * @param {Node} node\n * @return {DocumentFragment}\n */\n\nfunction nodeToFragment(node) {\n  // if its a template tag and the browser supports it,\n  // its content is already a document fragment. However, iOS Safari has\n  // bug when using directly cloned template content with touch\n  // events and can cause crashes when the nodes are removed from DOM, so we\n  // have to treat template elements as string templates. (#2805)\n  /* istanbul ignore if */\n  if (isRealTemplate(node)) {\n    return stringToFragment(node.innerHTML);\n  }\n  // script template\n  if (node.tagName === 'SCRIPT') {\n    return stringToFragment(node.textContent);\n  }\n  // normal node, clone it to avoid mutating the original\n  var clonedNode = cloneNode(node);\n  var frag = document.createDocumentFragment();\n  var child;\n  /* eslint-disable no-cond-assign */\n  while (child = clonedNode.firstChild) {\n    /* eslint-enable no-cond-assign */\n    frag.appendChild(child);\n  }\n  trimNode(frag);\n  return frag;\n}\n\n// Test for the presence of the Safari template cloning bug\n// https://bugs.webkit.org/showug.cgi?id=137755\nvar hasBrokenTemplate = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var a = document.createElement('div');\n    a.innerHTML = '<template>1</template>';\n    return !a.cloneNode(true).firstChild.innerHTML;\n  } else {\n    return false;\n  }\n})();\n\n// Test for IE10/11 textarea placeholder clone bug\nvar hasTextareaCloneBug = (function () {\n  /* istanbul ignore else */\n  if (inBrowser) {\n    var t = document.createElement('textarea');\n    t.placeholder = 't';\n    return t.cloneNode(true).value === 't';\n  } else {\n    return false;\n  }\n})();\n\n/**\n * 1. Deal with Safari cloning nested <template> bug by\n *    manually cloning all template instances.\n * 2. Deal with IE10/11 textarea placeholder bug by setting\n *    the correct value after cloning.\n *\n * @param {Element|DocumentFragment} node\n * @return {Element|DocumentFragment}\n */\n\nfunction cloneNode(node) {\n  /* istanbul ignore if */\n  if (!node.querySelectorAll) {\n    return node.cloneNode();\n  }\n  var res = node.cloneNode(true);\n  var i, original, cloned;\n  /* istanbul ignore if */\n  if (hasBrokenTemplate) {\n    var tempClone = res;\n    if (isRealTemplate(node)) {\n      node = node.content;\n      tempClone = res.content;\n    }\n    original = node.querySelectorAll('template');\n    if (original.length) {\n      cloned = tempClone.querySelectorAll('template');\n      i = cloned.length;\n      while (i--) {\n        cloned[i].parentNode.replaceChild(cloneNode(original[i]), cloned[i]);\n      }\n    }\n  }\n  /* istanbul ignore if */\n  if (hasTextareaCloneBug) {\n    if (node.tagName === 'TEXTAREA') {\n      res.value = node.value;\n    } else {\n      original = node.querySelectorAll('textarea');\n      if (original.length) {\n        cloned = res.querySelectorAll('textarea');\n        i = cloned.length;\n        while (i--) {\n          cloned[i].value = original[i].value;\n        }\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Process the template option and normalizes it into a\n * a DocumentFragment that can be used as a partial or a\n * instance template.\n *\n * @param {*} template\n *        Possible values include:\n *        - DocumentFragment object\n *        - Node object of type Template\n *        - id selector: '#some-template-id'\n *        - template string: '<div><span>{{msg}}</span></div>'\n * @param {Boolean} shouldClone\n * @param {Boolean} raw\n *        inline HTML interpolation. Do not check for id\n *        selector and keep whitespace in the string.\n * @return {DocumentFragment|undefined}\n */\n\nfunction parseTemplate(template, shouldClone, raw) {\n  var node, frag;\n\n  // if the template is already a document fragment,\n  // do nothing\n  if (isFragment(template)) {\n    trimNode(template);\n    return shouldClone ? cloneNode(template) : template;\n  }\n\n  if (typeof template === 'string') {\n    // id selector\n    if (!raw && template.charAt(0) === '#') {\n      // id selector can be cached too\n      frag = idSelectorCache.get(template);\n      if (!frag) {\n        node = document.getElementById(template.slice(1));\n        if (node) {\n          frag = nodeToFragment(node);\n          // save selector to cache\n          idSelectorCache.put(template, frag);\n        }\n      }\n    } else {\n      // normal string template\n      frag = stringToFragment(template, raw);\n    }\n  } else if (template.nodeType) {\n    // a direct node\n    frag = nodeToFragment(template);\n  }\n\n  return frag && shouldClone ? cloneNode(frag) : frag;\n}\n\nvar template = Object.freeze({\n  cloneNode: cloneNode,\n  parseTemplate: parseTemplate\n});\n\nvar html = {\n\n  bind: function bind() {\n    // a comment node means this is a binding for\n    // {{{ inline unescaped html }}}\n    if (this.el.nodeType === 8) {\n      // hold nodes\n      this.nodes = [];\n      // replace the placeholder with proper anchor\n      this.anchor = createAnchor('v-html');\n      replace(this.el, this.anchor);\n    }\n  },\n\n  update: function update(value) {\n    value = _toString(value);\n    if (this.nodes) {\n      this.swap(value);\n    } else {\n      this.el.innerHTML = value;\n    }\n  },\n\n  swap: function swap(value) {\n    // remove old nodes\n    var i = this.nodes.length;\n    while (i--) {\n      remove(this.nodes[i]);\n    }\n    // convert new value to a fragment\n    // do not attempt to retrieve from id selector\n    var frag = parseTemplate(value, true, true);\n    // save a reference to these nodes so we can remove later\n    this.nodes = toArray(frag.childNodes);\n    before(frag, this.anchor);\n  }\n};\n\n/**\n * Abstraction for a partially-compiled fragment.\n * Can optionally compile content with a child scope.\n *\n * @param {Function} linker\n * @param {Vue} vm\n * @param {DocumentFragment} frag\n * @param {Vue} [host]\n * @param {Object} [scope]\n * @param {Fragment} [parentFrag]\n */\nfunction Fragment(linker, vm, frag, host, scope, parentFrag) {\n  this.children = [];\n  this.childFrags = [];\n  this.vm = vm;\n  this.scope = scope;\n  this.inserted = false;\n  this.parentFrag = parentFrag;\n  if (parentFrag) {\n    parentFrag.childFrags.push(this);\n  }\n  this.unlink = linker(vm, frag, host, scope, this);\n  var single = this.single = frag.childNodes.length === 1 &&\n  // do not go single mode if the only node is an anchor\n  !frag.childNodes[0].__v_anchor;\n  if (single) {\n    this.node = frag.childNodes[0];\n    this.before = singleBefore;\n    this.remove = singleRemove;\n  } else {\n    this.node = createAnchor('fragment-start');\n    this.end = createAnchor('fragment-end');\n    this.frag = frag;\n    prepend(this.node, frag);\n    frag.appendChild(this.end);\n    this.before = multiBefore;\n    this.remove = multiRemove;\n  }\n  this.node.__v_frag = this;\n}\n\n/**\n * Call attach/detach for all components contained within\n * this fragment. Also do so recursively for all child\n * fragments.\n *\n * @param {Function} hook\n */\n\nFragment.prototype.callHook = function (hook) {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    this.childFrags[i].callHook(hook);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    hook(this.children[i]);\n  }\n};\n\n/**\n * Insert fragment before target, single node version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction singleBefore(target, withTransition) {\n  this.inserted = true;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  method(this.node, target, this.vm);\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, single node version\n */\n\nfunction singleRemove() {\n  this.inserted = false;\n  var shouldCallRemove = inDoc(this.node);\n  var self = this;\n  this.beforeRemove();\n  removeWithTransition(this.node, this.vm, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Insert fragment before target, multi-nodes version\n *\n * @param {Node} target\n * @param {Boolean} withTransition\n */\n\nfunction multiBefore(target, withTransition) {\n  this.inserted = true;\n  var vm = this.vm;\n  var method = withTransition !== false ? beforeWithTransition : before;\n  mapNodeRange(this.node, this.end, function (node) {\n    method(node, target, vm);\n  });\n  if (inDoc(this.node)) {\n    this.callHook(attach);\n  }\n}\n\n/**\n * Remove fragment, multi-nodes version\n */\n\nfunction multiRemove() {\n  this.inserted = false;\n  var self = this;\n  var shouldCallRemove = inDoc(this.node);\n  this.beforeRemove();\n  removeNodeRange(this.node, this.end, this.vm, this.frag, function () {\n    if (shouldCallRemove) {\n      self.callHook(detach);\n    }\n    self.destroy();\n  });\n}\n\n/**\n * Prepare the fragment for removal.\n */\n\nFragment.prototype.beforeRemove = function () {\n  var i, l;\n  for (i = 0, l = this.childFrags.length; i < l; i++) {\n    // call the same method recursively on child\n    // fragments, depth-first\n    this.childFrags[i].beforeRemove(false);\n  }\n  for (i = 0, l = this.children.length; i < l; i++) {\n    // Call destroy for all contained instances,\n    // with remove:false and defer:true.\n    // Defer is necessary because we need to\n    // keep the children to call detach hooks\n    // on them.\n    this.children[i].$destroy(false, true);\n  }\n  var dirs = this.unlink.dirs;\n  for (i = 0, l = dirs.length; i < l; i++) {\n    // disable the watchers on all the directives\n    // so that the rendered content stays the same\n    // during removal.\n    dirs[i]._watcher && dirs[i]._watcher.teardown();\n  }\n};\n\n/**\n * Destroy the fragment.\n */\n\nFragment.prototype.destroy = function () {\n  if (this.parentFrag) {\n    this.parentFrag.childFrags.$remove(this);\n  }\n  this.node.__v_frag = null;\n  this.unlink();\n};\n\n/**\n * Call attach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction attach(child) {\n  if (!child._isAttached && inDoc(child.$el)) {\n    child._callHook('attached');\n  }\n}\n\n/**\n * Call detach hook for a Vue instance.\n *\n * @param {Vue} child\n */\n\nfunction detach(child) {\n  if (child._isAttached && !inDoc(child.$el)) {\n    child._callHook('detached');\n  }\n}\n\nvar linkerCache = new Cache(5000);\n\n/**\n * A factory that can be used to create instances of a\n * fragment. Caches the compiled linker if possible.\n *\n * @param {Vue} vm\n * @param {Element|String} el\n */\nfunction FragmentFactory(vm, el) {\n  this.vm = vm;\n  var template;\n  var isString = typeof el === 'string';\n  if (isString || isTemplate(el) && !el.hasAttribute('v-if')) {\n    template = parseTemplate(el, true);\n  } else {\n    template = document.createDocumentFragment();\n    template.appendChild(el);\n  }\n  this.template = template;\n  // linker can be cached, but only for components\n  var linker;\n  var cid = vm.constructor.cid;\n  if (cid > 0) {\n    var cacheId = cid + (isString ? el : getOuterHTML(el));\n    linker = linkerCache.get(cacheId);\n    if (!linker) {\n      linker = compile(template, vm.$options, true);\n      linkerCache.put(cacheId, linker);\n    }\n  } else {\n    linker = compile(template, vm.$options, true);\n  }\n  this.linker = linker;\n}\n\n/**\n * Create a fragment instance with given host and scope.\n *\n * @param {Vue} host\n * @param {Object} scope\n * @param {Fragment} parentFrag\n */\n\nFragmentFactory.prototype.create = function (host, scope, parentFrag) {\n  var frag = cloneNode(this.template);\n  return new Fragment(this.linker, this.vm, frag, host, scope, parentFrag);\n};\n\nvar ON = 700;\nvar MODEL = 800;\nvar BIND = 850;\nvar TRANSITION = 1100;\nvar EL = 1500;\nvar COMPONENT = 1500;\nvar PARTIAL = 1750;\nvar IF = 2100;\nvar FOR = 2200;\nvar SLOT = 2300;\n\nvar uid$3 = 0;\n\nvar vFor = {\n\n  priority: FOR,\n  terminal: true,\n\n  params: ['track-by', 'stagger', 'enter-stagger', 'leave-stagger'],\n\n  bind: function bind() {\n    // support \"item in/of items\" syntax\n    var inMatch = this.expression.match(/(.*) (?:in|of) (.*)/);\n    if (inMatch) {\n      var itMatch = inMatch[1].match(/\\((.*),(.*)\\)/);\n      if (itMatch) {\n        this.iterator = itMatch[1].trim();\n        this.alias = itMatch[2].trim();\n      } else {\n        this.alias = inMatch[1].trim();\n      }\n      this.expression = inMatch[2];\n    }\n\n    if (!this.alias) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid v-for expression \"' + this.descriptor.raw + '\": ' + 'alias is required.', this.vm);\n      return;\n    }\n\n    // uid as a cache identifier\n    this.id = '__v-for__' + ++uid$3;\n\n    // check if this is an option list,\n    // so that we know if we need to update the <select>'s\n    // v-model when the option list has changed.\n    // because v-model has a lower priority than v-for,\n    // the v-model is not bound here yet, so we have to\n    // retrive it in the actual updateModel() function.\n    var tag = this.el.tagName;\n    this.isOption = (tag === 'OPTION' || tag === 'OPTGROUP') && this.el.parentNode.tagName === 'SELECT';\n\n    // setup anchor nodes\n    this.start = createAnchor('v-for-start');\n    this.end = createAnchor('v-for-end');\n    replace(this.el, this.end);\n    before(this.start, this.end);\n\n    // cache\n    this.cache = Object.create(null);\n\n    // fragment factory\n    this.factory = new FragmentFactory(this.vm, this.el);\n  },\n\n  update: function update(data) {\n    this.diff(data);\n    this.updateRef();\n    this.updateModel();\n  },\n\n  /**\n   * Diff, based on new data and old data, determine the\n   * minimum amount of DOM manipulations needed to make the\n   * DOM reflect the new data Array.\n   *\n   * The algorithm diffs the new data Array by storing a\n   * hidden reference to an owner vm instance on previously\n   * seen data. This allows us to achieve O(n) which is\n   * better than a levenshtein distance based algorithm,\n   * which is O(m * n).\n   *\n   * @param {Array} data\n   */\n\n  diff: function diff(data) {\n    // check if the Array was converted from an Object\n    var item = data[0];\n    var convertedFromObject = this.fromObject = isObject(item) && hasOwn(item, '$key') && hasOwn(item, '$value');\n\n    var trackByKey = this.params.trackBy;\n    var oldFrags = this.frags;\n    var frags = this.frags = new Array(data.length);\n    var alias = this.alias;\n    var iterator = this.iterator;\n    var start = this.start;\n    var end = this.end;\n    var inDocument = inDoc(start);\n    var init = !oldFrags;\n    var i, l, frag, key, value, primitive;\n\n    // First pass, go through the new Array and fill up\n    // the new frags array. If a piece of data has a cached\n    // instance for it, we reuse it. Otherwise build a new\n    // instance.\n    for (i = 0, l = data.length; i < l; i++) {\n      item = data[i];\n      key = convertedFromObject ? item.$key : null;\n      value = convertedFromObject ? item.$value : item;\n      primitive = !isObject(value);\n      frag = !init && this.getCachedFrag(value, i, key);\n      if (frag) {\n        // reusable fragment\n        frag.reused = true;\n        // update $index\n        frag.scope.$index = i;\n        // update $key\n        if (key) {\n          frag.scope.$key = key;\n        }\n        // update iterator\n        if (iterator) {\n          frag.scope[iterator] = key !== null ? key : i;\n        }\n        // update data for track-by, object repeat &\n        // primitive values.\n        if (trackByKey || convertedFromObject || primitive) {\n          withoutConversion(function () {\n            frag.scope[alias] = value;\n          });\n        }\n      } else {\n        // new isntance\n        frag = this.create(value, alias, i, key);\n        frag.fresh = !init;\n      }\n      frags[i] = frag;\n      if (init) {\n        frag.before(end);\n      }\n    }\n\n    // we're done for the initial render.\n    if (init) {\n      return;\n    }\n\n    // Second pass, go through the old fragments and\n    // destroy those who are not reused (and remove them\n    // from cache)\n    var removalIndex = 0;\n    var totalRemoved = oldFrags.length - frags.length;\n    // when removing a large number of fragments, watcher removal\n    // turns out to be a perf bottleneck, so we batch the watcher\n    // removals into a single filter call!\n    this.vm._vForRemoving = true;\n    for (i = 0, l = oldFrags.length; i < l; i++) {\n      frag = oldFrags[i];\n      if (!frag.reused) {\n        this.deleteCachedFrag(frag);\n        this.remove(frag, removalIndex++, totalRemoved, inDocument);\n      }\n    }\n    this.vm._vForRemoving = false;\n    if (removalIndex) {\n      this.vm._watchers = this.vm._watchers.filter(function (w) {\n        return w.active;\n      });\n    }\n\n    // Final pass, move/insert new fragments into the\n    // right place.\n    var targetPrev, prevEl, currentPrev;\n    var insertionIndex = 0;\n    for (i = 0, l = frags.length; i < l; i++) {\n      frag = frags[i];\n      // this is the frag that we should be after\n      targetPrev = frags[i - 1];\n      prevEl = targetPrev ? targetPrev.staggerCb ? targetPrev.staggerAnchor : targetPrev.end || targetPrev.node : start;\n      if (frag.reused && !frag.staggerCb) {\n        currentPrev = findPrevFrag(frag, start, this.id);\n        if (currentPrev !== targetPrev && (!currentPrev ||\n        // optimization for moving a single item.\n        // thanks to suggestions by @livoras in #1807\n        findPrevFrag(currentPrev, start, this.id) !== targetPrev)) {\n          this.move(frag, prevEl);\n        }\n      } else {\n        // new instance, or still in stagger.\n        // insert with updated stagger index.\n        this.insert(frag, insertionIndex++, prevEl, inDocument);\n      }\n      frag.reused = frag.fresh = false;\n    }\n  },\n\n  /**\n   * Create a new fragment instance.\n   *\n   * @param {*} value\n   * @param {String} alias\n   * @param {Number} index\n   * @param {String} [key]\n   * @return {Fragment}\n   */\n\n  create: function create(value, alias, index, key) {\n    var host = this._host;\n    // create iteration scope\n    var parentScope = this._scope || this.vm;\n    var scope = Object.create(parentScope);\n    // ref holder for the scope\n    scope.$refs = Object.create(parentScope.$refs);\n    scope.$els = Object.create(parentScope.$els);\n    // make sure point $parent to parent scope\n    scope.$parent = parentScope;\n    // for two-way binding on alias\n    scope.$forContext = this;\n    // define scope properties\n    // important: define the scope alias without forced conversion\n    // so that frozen data structures remain non-reactive.\n    withoutConversion(function () {\n      defineReactive(scope, alias, value);\n    });\n    defineReactive(scope, '$index', index);\n    if (key) {\n      defineReactive(scope, '$key', key);\n    } else if (scope.$key) {\n      // avoid accidental fallback\n      def(scope, '$key', null);\n    }\n    if (this.iterator) {\n      defineReactive(scope, this.iterator, key !== null ? key : index);\n    }\n    var frag = this.factory.create(host, scope, this._frag);\n    frag.forId = this.id;\n    this.cacheFrag(value, frag, index, key);\n    return frag;\n  },\n\n  /**\n   * Update the v-ref on owner vm.\n   */\n\n  updateRef: function updateRef() {\n    var ref = this.descriptor.ref;\n    if (!ref) return;\n    var hash = (this._scope || this.vm).$refs;\n    var refs;\n    if (!this.fromObject) {\n      refs = this.frags.map(findVmFromFrag);\n    } else {\n      refs = {};\n      this.frags.forEach(function (frag) {\n        refs[frag.scope.$key] = findVmFromFrag(frag);\n      });\n    }\n    hash[ref] = refs;\n  },\n\n  /**\n   * For option lists, update the containing v-model on\n   * parent <select>.\n   */\n\n  updateModel: function updateModel() {\n    if (this.isOption) {\n      var parent = this.start.parentNode;\n      var model = parent && parent.__v_model;\n      if (model) {\n        model.forceUpdate();\n      }\n    }\n  },\n\n  /**\n   * Insert a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Node} prevEl\n   * @param {Boolean} inDocument\n   */\n\n  insert: function insert(frag, index, prevEl, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n    }\n    var staggerAmount = this.getStagger(frag, index, null, 'enter');\n    if (inDocument && staggerAmount) {\n      // create an anchor and insert it synchronously,\n      // so that we can resolve the correct order without\n      // worrying about some elements not inserted yet\n      var anchor = frag.staggerAnchor;\n      if (!anchor) {\n        anchor = frag.staggerAnchor = createAnchor('stagger-anchor');\n        anchor.__v_frag = frag;\n      }\n      after(anchor, prevEl);\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.before(anchor);\n        remove(anchor);\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      var target = prevEl.nextSibling;\n      /* istanbul ignore if */\n      if (!target) {\n        // reset end anchor position in case the position was messed up\n        // by an external drag-n-drop library.\n        after(this.end, prevEl);\n        target = this.end;\n      }\n      frag.before(target);\n    }\n  },\n\n  /**\n   * Remove a fragment. Handles staggering.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {Boolean} inDocument\n   */\n\n  remove: function remove(frag, index, total, inDocument) {\n    if (frag.staggerCb) {\n      frag.staggerCb.cancel();\n      frag.staggerCb = null;\n      // it's not possible for the same frag to be removed\n      // twice, so if we have a pending stagger callback,\n      // it means this frag is queued for enter but removed\n      // before its transition started. Since it is already\n      // destroyed, we can just leave it in detached state.\n      return;\n    }\n    var staggerAmount = this.getStagger(frag, index, total, 'leave');\n    if (inDocument && staggerAmount) {\n      var op = frag.staggerCb = cancellable(function () {\n        frag.staggerCb = null;\n        frag.remove();\n      });\n      setTimeout(op, staggerAmount);\n    } else {\n      frag.remove();\n    }\n  },\n\n  /**\n   * Move a fragment to a new position.\n   * Force no transition.\n   *\n   * @param {Fragment} frag\n   * @param {Node} prevEl\n   */\n\n  move: function move(frag, prevEl) {\n    // fix a common issue with Sortable:\n    // if prevEl doesn't have nextSibling, this means it's\n    // been dragged after the end anchor. Just re-position\n    // the end anchor to the end of the container.\n    /* istanbul ignore if */\n    if (!prevEl.nextSibling) {\n      this.end.parentNode.appendChild(this.end);\n    }\n    frag.before(prevEl.nextSibling, false);\n  },\n\n  /**\n   * Cache a fragment using track-by or the object key.\n   *\n   * @param {*} value\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {String} [key]\n   */\n\n  cacheFrag: function cacheFrag(value, frag, index, key) {\n    var trackByKey = this.params.trackBy;\n    var cache = this.cache;\n    var primitive = !isObject(value);\n    var id;\n    if (key || trackByKey || primitive) {\n      id = getTrackByKey(index, key, value, trackByKey);\n      if (!cache[id]) {\n        cache[id] = frag;\n      } else if (trackByKey !== '$index') {\n        process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n      }\n    } else {\n      id = this.id;\n      if (hasOwn(value, id)) {\n        if (value[id] === null) {\n          value[id] = frag;\n        } else {\n          process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n        }\n      } else if (Object.isExtensible(value)) {\n        def(value, id, frag);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Frozen v-for objects cannot be automatically tracked, make sure to ' + 'provide a track-by key.');\n      }\n    }\n    frag.raw = value;\n  },\n\n  /**\n   * Get a cached fragment from the value/index/key\n   *\n   * @param {*} value\n   * @param {Number} index\n   * @param {String} key\n   * @return {Fragment}\n   */\n\n  getCachedFrag: function getCachedFrag(value, index, key) {\n    var trackByKey = this.params.trackBy;\n    var primitive = !isObject(value);\n    var frag;\n    if (key || trackByKey || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      frag = this.cache[id];\n    } else {\n      frag = value[this.id];\n    }\n    if (frag && (frag.reused || frag.fresh)) {\n      process.env.NODE_ENV !== 'production' && this.warnDuplicate(value);\n    }\n    return frag;\n  },\n\n  /**\n   * Delete a fragment from cache.\n   *\n   * @param {Fragment} frag\n   */\n\n  deleteCachedFrag: function deleteCachedFrag(frag) {\n    var value = frag.raw;\n    var trackByKey = this.params.trackBy;\n    var scope = frag.scope;\n    var index = scope.$index;\n    // fix #948: avoid accidentally fall through to\n    // a parent repeater which happens to have $key.\n    var key = hasOwn(scope, '$key') && scope.$key;\n    var primitive = !isObject(value);\n    if (trackByKey || key || primitive) {\n      var id = getTrackByKey(index, key, value, trackByKey);\n      this.cache[id] = null;\n    } else {\n      value[this.id] = null;\n      frag.raw = null;\n    }\n  },\n\n  /**\n   * Get the stagger amount for an insertion/removal.\n   *\n   * @param {Fragment} frag\n   * @param {Number} index\n   * @param {Number} total\n   * @param {String} type\n   */\n\n  getStagger: function getStagger(frag, index, total, type) {\n    type = type + 'Stagger';\n    var trans = frag.node.__v_trans;\n    var hooks = trans && trans.hooks;\n    var hook = hooks && (hooks[type] || hooks.stagger);\n    return hook ? hook.call(frag, index, total) : index * parseInt(this.params[type] || this.params.stagger, 10);\n  },\n\n  /**\n   * Pre-process the value before piping it through the\n   * filters. This is passed to and called by the watcher.\n   */\n\n  _preProcess: function _preProcess(value) {\n    // regardless of type, store the un-filtered raw value.\n    this.rawValue = value;\n    return value;\n  },\n\n  /**\n   * Post-process the value after it has been piped through\n   * the filters. This is passed to and called by the watcher.\n   *\n   * It is necessary for this to be called during the\n   * watcher's dependency collection phase because we want\n   * the v-for to update when the source Object is mutated.\n   */\n\n  _postProcess: function _postProcess(value) {\n    if (isArray(value)) {\n      return value;\n    } else if (isPlainObject(value)) {\n      // convert plain object to array.\n      var keys = Object.keys(value);\n      var i = keys.length;\n      var res = new Array(i);\n      var key;\n      while (i--) {\n        key = keys[i];\n        res[i] = {\n          $key: key,\n          $value: value[key]\n        };\n      }\n      return res;\n    } else {\n      if (typeof value === 'number' && !isNaN(value)) {\n        value = range(value);\n      }\n      return value || [];\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.descriptor.ref) {\n      (this._scope || this.vm).$refs[this.descriptor.ref] = null;\n    }\n    if (this.frags) {\n      var i = this.frags.length;\n      var frag;\n      while (i--) {\n        frag = this.frags[i];\n        this.deleteCachedFrag(frag);\n        frag.destroy();\n      }\n    }\n  }\n};\n\n/**\n * Helper to find the previous element that is a fragment\n * anchor. This is necessary because a destroyed frag's\n * element could still be lingering in the DOM before its\n * leaving transition finishes, but its inserted flag\n * should have been set to false so we can skip them.\n *\n * If this is a block repeat, we want to make sure we only\n * return frag that is bound to this v-for. (see #929)\n *\n * @param {Fragment} frag\n * @param {Comment|Text} anchor\n * @param {String} id\n * @return {Fragment}\n */\n\nfunction findPrevFrag(frag, anchor, id) {\n  var el = frag.node.previousSibling;\n  /* istanbul ignore if */\n  if (!el) return;\n  frag = el.__v_frag;\n  while ((!frag || frag.forId !== id || !frag.inserted) && el !== anchor) {\n    el = el.previousSibling;\n    /* istanbul ignore if */\n    if (!el) return;\n    frag = el.__v_frag;\n  }\n  return frag;\n}\n\n/**\n * Find a vm from a fragment.\n *\n * @param {Fragment} frag\n * @return {Vue|undefined}\n */\n\nfunction findVmFromFrag(frag) {\n  var node = frag.node;\n  // handle multi-node frag\n  if (frag.end) {\n    while (!node.__vue__ && node !== frag.end && node.nextSibling) {\n      node = node.nextSibling;\n    }\n  }\n  return node.__vue__;\n}\n\n/**\n * Create a range array from given number.\n *\n * @param {Number} n\n * @return {Array}\n */\n\nfunction range(n) {\n  var i = -1;\n  var ret = new Array(Math.floor(n));\n  while (++i < n) {\n    ret[i] = i;\n  }\n  return ret;\n}\n\n/**\n * Get the track by key for an item.\n *\n * @param {Number} index\n * @param {String} key\n * @param {*} value\n * @param {String} [trackByKey]\n */\n\nfunction getTrackByKey(index, key, value, trackByKey) {\n  return trackByKey ? trackByKey === '$index' ? index : trackByKey.charAt(0).match(/\\w/) ? getPath(value, trackByKey) : value[trackByKey] : key || value;\n}\n\nif (process.env.NODE_ENV !== 'production') {\n  vFor.warnDuplicate = function (value) {\n    warn('Duplicate value found in v-for=\"' + this.descriptor.raw + '\": ' + JSON.stringify(value) + '. Use track-by=\"$index\" if ' + 'you are expecting duplicate values.', this.vm);\n  };\n}\n\nvar vIf = {\n\n  priority: IF,\n  terminal: true,\n\n  bind: function bind() {\n    var el = this.el;\n    if (!el.__vue__) {\n      // check else block\n      var next = el.nextElementSibling;\n      if (next && getAttr(next, 'v-else') !== null) {\n        remove(next);\n        this.elseEl = next;\n      }\n      // check main block\n      this.anchor = createAnchor('v-if');\n      replace(el, this.anchor);\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-if=\"' + this.expression + '\" cannot be ' + 'used on an instance root element.', this.vm);\n      this.invalid = true;\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) return;\n    if (value) {\n      if (!this.frag) {\n        this.insert();\n      }\n    } else {\n      this.remove();\n    }\n  },\n\n  insert: function insert() {\n    if (this.elseFrag) {\n      this.elseFrag.remove();\n      this.elseFrag = null;\n    }\n    // lazy init factory\n    if (!this.factory) {\n      this.factory = new FragmentFactory(this.vm, this.el);\n    }\n    this.frag = this.factory.create(this._host, this._scope, this._frag);\n    this.frag.before(this.anchor);\n  },\n\n  remove: function remove() {\n    if (this.frag) {\n      this.frag.remove();\n      this.frag = null;\n    }\n    if (this.elseEl && !this.elseFrag) {\n      if (!this.elseFactory) {\n        this.elseFactory = new FragmentFactory(this.elseEl._context || this.vm, this.elseEl);\n      }\n      this.elseFrag = this.elseFactory.create(this._host, this._scope, this._frag);\n      this.elseFrag.before(this.anchor);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n    if (this.elseFrag) {\n      this.elseFrag.destroy();\n    }\n  }\n};\n\nvar show = {\n\n  bind: function bind() {\n    // check else block\n    var next = this.el.nextElementSibling;\n    if (next && getAttr(next, 'v-else') !== null) {\n      this.elseEl = next;\n    }\n  },\n\n  update: function update(value) {\n    this.apply(this.el, value);\n    if (this.elseEl) {\n      this.apply(this.elseEl, !value);\n    }\n  },\n\n  apply: function apply(el, value) {\n    if (inDoc(el)) {\n      applyTransition(el, value ? 1 : -1, toggle, this.vm);\n    } else {\n      toggle();\n    }\n    function toggle() {\n      el.style.display = value ? '' : 'none';\n    }\n  }\n};\n\nvar text$2 = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n    var isRange = el.type === 'range';\n    var lazy = this.params.lazy;\n    var number = this.params.number;\n    var debounce = this.params.debounce;\n\n    // handle composition events.\n    //   http://blog.evanyou.me/2014/01/03/composition-event/\n    // skip this for Android because it handles composition\n    // events quite differently. Android doesn't trigger\n    // composition events for language input methods e.g.\n    // Chinese, but instead triggers them for spelling\n    // suggestions... (see Discussion/#162)\n    var composing = false;\n    if (!isAndroid && !isRange) {\n      this.on('compositionstart', function () {\n        composing = true;\n      });\n      this.on('compositionend', function () {\n        composing = false;\n        // in IE11 the \"compositionend\" event fires AFTER\n        // the \"input\" event, so the input handler is blocked\n        // at the end... have to call it here.\n        //\n        // #1327: in lazy mode this is unecessary.\n        if (!lazy) {\n          self.listener();\n        }\n      });\n    }\n\n    // prevent messing with the input when user is typing,\n    // and force update on blur.\n    this.focused = false;\n    if (!isRange && !lazy) {\n      this.on('focus', function () {\n        self.focused = true;\n      });\n      this.on('blur', function () {\n        self.focused = false;\n        // do not sync value after fragment removal (#2017)\n        if (!self._frag || self._frag.inserted) {\n          self.rawListener();\n        }\n      });\n    }\n\n    // Now attach the main listener\n    this.listener = this.rawListener = function () {\n      if (composing || !self._bound) {\n        return;\n      }\n      var val = number || isRange ? toNumber(el.value) : el.value;\n      self.set(val);\n      // force update on next tick to avoid lock & same value\n      // also only update when user is not typing\n      nextTick(function () {\n        if (self._bound && !self.focused) {\n          self.update(self._watcher.value);\n        }\n      });\n    };\n\n    // apply debounce\n    if (debounce) {\n      this.listener = _debounce(this.listener, debounce);\n    }\n\n    // Support jQuery events, since jQuery.trigger() doesn't\n    // trigger native events in some cases and some plugins\n    // rely on $.trigger()\n    //\n    // We want to make sure if a listener is attached using\n    // jQuery, it is also removed with jQuery, that's why\n    // we do the check for each directive instance and\n    // store that check result on itself. This also allows\n    // easier test coverage control by unsetting the global\n    // jQuery variable in tests.\n    this.hasjQuery = typeof jQuery === 'function';\n    if (this.hasjQuery) {\n      var method = jQuery.fn.on ? 'on' : 'bind';\n      jQuery(el)[method]('change', this.rawListener);\n      if (!lazy) {\n        jQuery(el)[method]('input', this.listener);\n      }\n    } else {\n      this.on('change', this.rawListener);\n      if (!lazy) {\n        this.on('input', this.listener);\n      }\n    }\n\n    // IE9 doesn't fire input event on backspace/del/cut\n    if (!lazy && isIE9) {\n      this.on('cut', function () {\n        nextTick(self.listener);\n      });\n      this.on('keyup', function (e) {\n        if (e.keyCode === 46 || e.keyCode === 8) {\n          self.listener();\n        }\n      });\n    }\n\n    // set initial value if present\n    if (el.hasAttribute('value') || el.tagName === 'TEXTAREA' && el.value.trim()) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    // #3029 only update when the value changes. This prevent\n    // browsers from overwriting values like selectionStart\n    value = _toString(value);\n    if (value !== this.el.value) this.el.value = value;\n  },\n\n  unbind: function unbind() {\n    var el = this.el;\n    if (this.hasjQuery) {\n      var method = jQuery.fn.off ? 'off' : 'unbind';\n      jQuery(el)[method]('change', this.listener);\n      jQuery(el)[method]('input', this.listener);\n    }\n  }\n};\n\nvar radio = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      // value overwrite via v-bind:value\n      if (el.hasOwnProperty('_value')) {\n        return el._value;\n      }\n      var val = el.value;\n      if (self.params.number) {\n        val = toNumber(val);\n      }\n      return val;\n    };\n\n    this.listener = function () {\n      self.set(self.getValue());\n    };\n    this.on('change', this.listener);\n\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    this.el.checked = looseEqual(value, this.getValue());\n  }\n};\n\nvar select = {\n\n  bind: function bind() {\n    var _this = this;\n\n    var self = this;\n    var el = this.el;\n\n    // method to force update DOM using latest value.\n    this.forceUpdate = function () {\n      if (self._watcher) {\n        self.update(self._watcher.get());\n      }\n    };\n\n    // check if this is a multiple select\n    var multiple = this.multiple = el.hasAttribute('multiple');\n\n    // attach listener\n    this.listener = function () {\n      var value = getValue(el, multiple);\n      value = self.params.number ? isArray(value) ? value.map(toNumber) : toNumber(value) : value;\n      self.set(value);\n    };\n    this.on('change', this.listener);\n\n    // if has initial value, set afterBind\n    var initValue = getValue(el, multiple, true);\n    if (multiple && initValue.length || !multiple && initValue !== null) {\n      this.afterBind = this.listener;\n    }\n\n    // All major browsers except Firefox resets\n    // selectedIndex with value -1 to 0 when the element\n    // is appended to a new parent, therefore we have to\n    // force a DOM update whenever that happens...\n    this.vm.$on('hook:attached', function () {\n      nextTick(_this.forceUpdate);\n    });\n    if (!inDoc(el)) {\n      nextTick(this.forceUpdate);\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    el.selectedIndex = -1;\n    var multi = this.multiple && isArray(value);\n    var options = el.options;\n    var i = options.length;\n    var op, val;\n    while (i--) {\n      op = options[i];\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      /* eslint-disable eqeqeq */\n      op.selected = multi ? indexOf$1(value, val) > -1 : looseEqual(value, val);\n      /* eslint-enable eqeqeq */\n    }\n  },\n\n  unbind: function unbind() {\n    /* istanbul ignore next */\n    this.vm.$off('hook:attached', this.forceUpdate);\n  }\n};\n\n/**\n * Get select value\n *\n * @param {SelectElement} el\n * @param {Boolean} multi\n * @param {Boolean} init\n * @return {Array|*}\n */\n\nfunction getValue(el, multi, init) {\n  var res = multi ? [] : null;\n  var op, val, selected;\n  for (var i = 0, l = el.options.length; i < l; i++) {\n    op = el.options[i];\n    selected = init ? op.hasAttribute('selected') : op.selected;\n    if (selected) {\n      val = op.hasOwnProperty('_value') ? op._value : op.value;\n      if (multi) {\n        res.push(val);\n      } else {\n        return val;\n      }\n    }\n  }\n  return res;\n}\n\n/**\n * Native Array.indexOf uses strict equal, but in this\n * case we need to match string/numbers with custom equal.\n *\n * @param {Array} arr\n * @param {*} val\n */\n\nfunction indexOf$1(arr, val) {\n  var i = arr.length;\n  while (i--) {\n    if (looseEqual(arr[i], val)) {\n      return i;\n    }\n  }\n  return -1;\n}\n\nvar checkbox = {\n\n  bind: function bind() {\n    var self = this;\n    var el = this.el;\n\n    this.getValue = function () {\n      return el.hasOwnProperty('_value') ? el._value : self.params.number ? toNumber(el.value) : el.value;\n    };\n\n    function getBooleanValue() {\n      var val = el.checked;\n      if (val && el.hasOwnProperty('_trueValue')) {\n        return el._trueValue;\n      }\n      if (!val && el.hasOwnProperty('_falseValue')) {\n        return el._falseValue;\n      }\n      return val;\n    }\n\n    this.listener = function () {\n      var model = self._watcher.value;\n      if (isArray(model)) {\n        var val = self.getValue();\n        if (el.checked) {\n          if (indexOf(model, val) < 0) {\n            model.push(val);\n          }\n        } else {\n          model.$remove(val);\n        }\n      } else {\n        self.set(getBooleanValue());\n      }\n    };\n\n    this.on('change', this.listener);\n    if (el.hasAttribute('checked')) {\n      this.afterBind = this.listener;\n    }\n  },\n\n  update: function update(value) {\n    var el = this.el;\n    if (isArray(value)) {\n      el.checked = indexOf(value, this.getValue()) > -1;\n    } else {\n      if (el.hasOwnProperty('_trueValue')) {\n        el.checked = looseEqual(value, el._trueValue);\n      } else {\n        el.checked = !!value;\n      }\n    }\n  }\n};\n\nvar handlers = {\n  text: text$2,\n  radio: radio,\n  select: select,\n  checkbox: checkbox\n};\n\nvar model = {\n\n  priority: MODEL,\n  twoWay: true,\n  handlers: handlers,\n  params: ['lazy', 'number', 'debounce'],\n\n  /**\n   * Possible elements:\n   *   <select>\n   *   <textarea>\n   *   <input type=\"*\">\n   *     - text\n   *     - checkbox\n   *     - radio\n   *     - number\n   */\n\n  bind: function bind() {\n    // friendly warning...\n    this.checkFilters();\n    if (this.hasRead && !this.hasWrite) {\n      process.env.NODE_ENV !== 'production' && warn('It seems you are using a read-only filter with ' + 'v-model=\"' + this.descriptor.raw + '\". ' + 'You might want to use a two-way filter to ensure correct behavior.', this.vm);\n    }\n    var el = this.el;\n    var tag = el.tagName;\n    var handler;\n    if (tag === 'INPUT') {\n      handler = handlers[el.type] || handlers.text;\n    } else if (tag === 'SELECT') {\n      handler = handlers.select;\n    } else if (tag === 'TEXTAREA') {\n      handler = handlers.text;\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('v-model does not support element type: ' + tag, this.vm);\n      return;\n    }\n    el.__v_model = this;\n    handler.bind.call(this);\n    this.update = handler.update;\n    this._unbind = handler.unbind;\n  },\n\n  /**\n   * Check read/write filter stats.\n   */\n\n  checkFilters: function checkFilters() {\n    var filters = this.filters;\n    if (!filters) return;\n    var i = filters.length;\n    while (i--) {\n      var filter = resolveAsset(this.vm.$options, 'filters', filters[i].name);\n      if (typeof filter === 'function' || filter.read) {\n        this.hasRead = true;\n      }\n      if (filter.write) {\n        this.hasWrite = true;\n      }\n    }\n  },\n\n  unbind: function unbind() {\n    this.el.__v_model = null;\n    this._unbind && this._unbind();\n  }\n};\n\n// keyCode aliases\nvar keyCodes = {\n  esc: 27,\n  tab: 9,\n  enter: 13,\n  space: 32,\n  'delete': [8, 46],\n  up: 38,\n  left: 37,\n  right: 39,\n  down: 40\n};\n\nfunction keyFilter(handler, keys) {\n  var codes = keys.map(function (key) {\n    var charCode = key.charCodeAt(0);\n    if (charCode > 47 && charCode < 58) {\n      return parseInt(key, 10);\n    }\n    if (key.length === 1) {\n      charCode = key.toUpperCase().charCodeAt(0);\n      if (charCode > 64 && charCode < 91) {\n        return charCode;\n      }\n    }\n    return keyCodes[key];\n  });\n  codes = [].concat.apply([], codes);\n  return function keyHandler(e) {\n    if (codes.indexOf(e.keyCode) > -1) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nfunction stopFilter(handler) {\n  return function stopHandler(e) {\n    e.stopPropagation();\n    return handler.call(this, e);\n  };\n}\n\nfunction preventFilter(handler) {\n  return function preventHandler(e) {\n    e.preventDefault();\n    return handler.call(this, e);\n  };\n}\n\nfunction selfFilter(handler) {\n  return function selfHandler(e) {\n    if (e.target === e.currentTarget) {\n      return handler.call(this, e);\n    }\n  };\n}\n\nvar on$1 = {\n\n  priority: ON,\n  acceptStatement: true,\n  keyCodes: keyCodes,\n\n  bind: function bind() {\n    // deal with iframes\n    if (this.el.tagName === 'IFRAME' && this.arg !== 'load') {\n      var self = this;\n      this.iframeBind = function () {\n        on(self.el.contentWindow, self.arg, self.handler, self.modifiers.capture);\n      };\n      this.on('load', this.iframeBind);\n    }\n  },\n\n  update: function update(handler) {\n    // stub a noop for v-on with no value,\n    // e.g. @mousedown.prevent\n    if (!this.descriptor.raw) {\n      handler = function () {};\n    }\n\n    if (typeof handler !== 'function') {\n      process.env.NODE_ENV !== 'production' && warn('v-on:' + this.arg + '=\"' + this.expression + '\" expects a function value, ' + 'got ' + handler, this.vm);\n      return;\n    }\n\n    // apply modifiers\n    if (this.modifiers.stop) {\n      handler = stopFilter(handler);\n    }\n    if (this.modifiers.prevent) {\n      handler = preventFilter(handler);\n    }\n    if (this.modifiers.self) {\n      handler = selfFilter(handler);\n    }\n    // key filter\n    var keys = Object.keys(this.modifiers).filter(function (key) {\n      return key !== 'stop' && key !== 'prevent' && key !== 'self' && key !== 'capture';\n    });\n    if (keys.length) {\n      handler = keyFilter(handler, keys);\n    }\n\n    this.reset();\n    this.handler = handler;\n\n    if (this.iframeBind) {\n      this.iframeBind();\n    } else {\n      on(this.el, this.arg, this.handler, this.modifiers.capture);\n    }\n  },\n\n  reset: function reset() {\n    var el = this.iframeBind ? this.el.contentWindow : this.el;\n    if (this.handler) {\n      off(el, this.arg, this.handler);\n    }\n  },\n\n  unbind: function unbind() {\n    this.reset();\n  }\n};\n\nvar prefixes = ['-webkit-', '-moz-', '-ms-'];\nvar camelPrefixes = ['Webkit', 'Moz', 'ms'];\nvar importantRE = /!important;?$/;\nvar propCache = Object.create(null);\n\nvar testEl = null;\n\nvar style = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (typeof value === 'string') {\n      this.el.style.cssText = value;\n    } else if (isArray(value)) {\n      this.handleObject(value.reduce(extend, {}));\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  handleObject: function handleObject(value) {\n    // cache object styles so that only changed props\n    // are actually updated.\n    var cache = this.cache || (this.cache = {});\n    var name, val;\n    for (name in cache) {\n      if (!(name in value)) {\n        this.handleSingle(name, null);\n        delete cache[name];\n      }\n    }\n    for (name in value) {\n      val = value[name];\n      if (val !== cache[name]) {\n        cache[name] = val;\n        this.handleSingle(name, val);\n      }\n    }\n  },\n\n  handleSingle: function handleSingle(prop, value) {\n    prop = normalize(prop);\n    if (!prop) return; // unsupported prop\n    // cast possible numbers/booleans into strings\n    if (value != null) value += '';\n    if (value) {\n      var isImportant = importantRE.test(value) ? 'important' : '';\n      if (isImportant) {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          warn('It\\'s probably a bad idea to use !important with inline rules. ' + 'This feature will be deprecated in a future version of Vue.');\n        }\n        value = value.replace(importantRE, '').trim();\n        this.el.style.setProperty(prop.kebab, value, isImportant);\n      } else {\n        this.el.style[prop.camel] = value;\n      }\n    } else {\n      this.el.style[prop.camel] = '';\n    }\n  }\n\n};\n\n/**\n * Normalize a CSS property name.\n * - cache result\n * - auto prefix\n * - camelCase -> dash-case\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction normalize(prop) {\n  if (propCache[prop]) {\n    return propCache[prop];\n  }\n  var res = prefix(prop);\n  propCache[prop] = propCache[res] = res;\n  return res;\n}\n\n/**\n * Auto detect the appropriate prefix for a CSS property.\n * https://gist.github.com/paulirish/523692\n *\n * @param {String} prop\n * @return {String}\n */\n\nfunction prefix(prop) {\n  prop = hyphenate(prop);\n  var camel = camelize(prop);\n  var upper = camel.charAt(0).toUpperCase() + camel.slice(1);\n  if (!testEl) {\n    testEl = document.createElement('div');\n  }\n  var i = prefixes.length;\n  var prefixed;\n  if (camel !== 'filter' && camel in testEl.style) {\n    return {\n      kebab: prop,\n      camel: camel\n    };\n  }\n  while (i--) {\n    prefixed = camelPrefixes[i] + upper;\n    if (prefixed in testEl.style) {\n      return {\n        kebab: prefixes[i] + prop,\n        camel: prefixed\n      };\n    }\n  }\n}\n\n// xlink\nvar xlinkNS = 'http://www.w3.org/1999/xlink';\nvar xlinkRE = /^xlink:/;\n\n// check for attributes that prohibit interpolations\nvar disallowedInterpAttrRE = /^v-|^:|^@|^(?:is|transition|transition-mode|debounce|track-by|stagger|enter-stagger|leave-stagger)$/;\n// these attributes should also set their corresponding properties\n// because they only affect the initial state of the element\nvar attrWithPropsRE = /^(?:value|checked|selected|muted)$/;\n// these attributes expect enumrated values of \"true\" or \"false\"\n// but are not boolean attributes\nvar enumeratedAttrRE = /^(?:draggable|contenteditable|spellcheck)$/;\n\n// these attributes should set a hidden property for\n// binding v-model to object values\nvar modelProps = {\n  value: '_value',\n  'true-value': '_trueValue',\n  'false-value': '_falseValue'\n};\n\nvar bind$1 = {\n\n  priority: BIND,\n\n  bind: function bind() {\n    var attr = this.arg;\n    var tag = this.el.tagName;\n    // should be deep watch on object mode\n    if (!attr) {\n      this.deep = true;\n    }\n    // handle interpolation bindings\n    var descriptor = this.descriptor;\n    var tokens = descriptor.interp;\n    if (tokens) {\n      // handle interpolations with one-time tokens\n      if (descriptor.hasOneTime) {\n        this.expression = tokensToExp(tokens, this._scope || this.vm);\n      }\n\n      // only allow binding on native attributes\n      if (disallowedInterpAttrRE.test(attr) || attr === 'name' && (tag === 'PARTIAL' || tag === 'SLOT')) {\n        process.env.NODE_ENV !== 'production' && warn(attr + '=\"' + descriptor.raw + '\": ' + 'attribute interpolation is not allowed in Vue.js ' + 'directives and special attributes.', this.vm);\n        this.el.removeAttribute(attr);\n        this.invalid = true;\n      }\n\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production') {\n        var raw = attr + '=\"' + descriptor.raw + '\": ';\n        // warn src\n        if (attr === 'src') {\n          warn(raw + 'interpolation in \"src\" attribute will cause ' + 'a 404 request. Use v-bind:src instead.', this.vm);\n        }\n\n        // warn style\n        if (attr === 'style') {\n          warn(raw + 'interpolation in \"style\" attribute will cause ' + 'the attribute to be discarded in Internet Explorer. ' + 'Use v-bind:style instead.', this.vm);\n        }\n      }\n    }\n  },\n\n  update: function update(value) {\n    if (this.invalid) {\n      return;\n    }\n    var attr = this.arg;\n    if (this.arg) {\n      this.handleSingle(attr, value);\n    } else {\n      this.handleObject(value || {});\n    }\n  },\n\n  // share object handler with v-bind:class\n  handleObject: style.handleObject,\n\n  handleSingle: function handleSingle(attr, value) {\n    var el = this.el;\n    var interp = this.descriptor.interp;\n    if (this.modifiers.camel) {\n      attr = camelize(attr);\n    }\n    if (!interp && attrWithPropsRE.test(attr) && attr in el) {\n      var attrValue = attr === 'value' ? value == null // IE9 will set input.value to \"null\" for null...\n      ? '' : value : value;\n\n      if (el[attr] !== attrValue) {\n        el[attr] = attrValue;\n      }\n    }\n    // set model props\n    var modelProp = modelProps[attr];\n    if (!interp && modelProp) {\n      el[modelProp] = value;\n      // update v-model if present\n      var model = el.__v_model;\n      if (model) {\n        model.listener();\n      }\n    }\n    // do not set value attribute for textarea\n    if (attr === 'value' && el.tagName === 'TEXTAREA') {\n      el.removeAttribute(attr);\n      return;\n    }\n    // update attribute\n    if (enumeratedAttrRE.test(attr)) {\n      el.setAttribute(attr, value ? 'true' : 'false');\n    } else if (value != null && value !== false) {\n      if (attr === 'class') {\n        // handle edge case #1960:\n        // class interpolation should not overwrite Vue transition class\n        if (el.__v_trans) {\n          value += ' ' + el.__v_trans.id + '-transition';\n        }\n        setClass(el, value);\n      } else if (xlinkRE.test(attr)) {\n        el.setAttributeNS(xlinkNS, attr, value === true ? '' : value);\n      } else {\n        el.setAttribute(attr, value === true ? '' : value);\n      }\n    } else {\n      el.removeAttribute(attr);\n    }\n  }\n};\n\nvar el = {\n\n  priority: EL,\n\n  bind: function bind() {\n    /* istanbul ignore if */\n    if (!this.arg) {\n      return;\n    }\n    var id = this.id = camelize(this.arg);\n    var refs = (this._scope || this.vm).$els;\n    if (hasOwn(refs, id)) {\n      refs[id] = this.el;\n    } else {\n      defineReactive(refs, id, this.el);\n    }\n  },\n\n  unbind: function unbind() {\n    var refs = (this._scope || this.vm).$els;\n    if (refs[this.id] === this.el) {\n      refs[this.id] = null;\n    }\n  }\n};\n\nvar ref = {\n  bind: function bind() {\n    process.env.NODE_ENV !== 'production' && warn('v-ref:' + this.arg + ' must be used on a child ' + 'component. Found on <' + this.el.tagName.toLowerCase() + '>.', this.vm);\n  }\n};\n\nvar cloak = {\n  bind: function bind() {\n    var el = this.el;\n    this.vm.$once('pre-hook:compiled', function () {\n      el.removeAttribute('v-cloak');\n    });\n  }\n};\n\n// must export plain object\nvar directives = {\n  text: text$1,\n  html: html,\n  'for': vFor,\n  'if': vIf,\n  show: show,\n  model: model,\n  on: on$1,\n  bind: bind$1,\n  el: el,\n  ref: ref,\n  cloak: cloak\n};\n\nvar vClass = {\n\n  deep: true,\n\n  update: function update(value) {\n    if (!value) {\n      this.cleanup();\n    } else if (typeof value === 'string') {\n      this.setClass(value.trim().split(/\\s+/));\n    } else {\n      this.setClass(normalize$1(value));\n    }\n  },\n\n  setClass: function setClass(value) {\n    this.cleanup(value);\n    for (var i = 0, l = value.length; i < l; i++) {\n      var val = value[i];\n      if (val) {\n        apply(this.el, val, addClass);\n      }\n    }\n    this.prevKeys = value;\n  },\n\n  cleanup: function cleanup(value) {\n    var prevKeys = this.prevKeys;\n    if (!prevKeys) return;\n    var i = prevKeys.length;\n    while (i--) {\n      var key = prevKeys[i];\n      if (!value || value.indexOf(key) < 0) {\n        apply(this.el, key, removeClass);\n      }\n    }\n  }\n};\n\n/**\n * Normalize objects and arrays (potentially containing objects)\n * into array of strings.\n *\n * @param {Object|Array<String|Object>} value\n * @return {Array<String>}\n */\n\nfunction normalize$1(value) {\n  var res = [];\n  if (isArray(value)) {\n    for (var i = 0, l = value.length; i < l; i++) {\n      var _key = value[i];\n      if (_key) {\n        if (typeof _key === 'string') {\n          res.push(_key);\n        } else {\n          for (var k in _key) {\n            if (_key[k]) res.push(k);\n          }\n        }\n      }\n    }\n  } else if (isObject(value)) {\n    for (var key in value) {\n      if (value[key]) res.push(key);\n    }\n  }\n  return res;\n}\n\n/**\n * Add or remove a class/classes on an element\n *\n * @param {Element} el\n * @param {String} key The class name. This may or may not\n *                     contain a space character, in such a\n *                     case we'll deal with multiple class\n *                     names at once.\n * @param {Function} fn\n */\n\nfunction apply(el, key, fn) {\n  key = key.trim();\n  if (key.indexOf(' ') === -1) {\n    fn(el, key);\n    return;\n  }\n  // The key contains one or more space characters.\n  // Since a class name doesn't accept such characters, we\n  // treat it as multiple classes.\n  var keys = key.split(/\\s+/);\n  for (var i = 0, l = keys.length; i < l; i++) {\n    fn(el, keys[i]);\n  }\n}\n\nvar component = {\n\n  priority: COMPONENT,\n\n  params: ['keep-alive', 'transition-mode', 'inline-template'],\n\n  /**\n   * Setup. Two possible usages:\n   *\n   * - static:\n   *   <comp> or <div v-component=\"comp\">\n   *\n   * - dynamic:\n   *   <component :is=\"view\">\n   */\n\n  bind: function bind() {\n    if (!this.el.__vue__) {\n      // keep-alive cache\n      this.keepAlive = this.params.keepAlive;\n      if (this.keepAlive) {\n        this.cache = {};\n      }\n      // check inline-template\n      if (this.params.inlineTemplate) {\n        // extract inline template as a DocumentFragment\n        this.inlineTemplate = extractContent(this.el, true);\n      }\n      // component resolution related state\n      this.pendingComponentCb = this.Component = null;\n      // transition related state\n      this.pendingRemovals = 0;\n      this.pendingRemovalCb = null;\n      // create a ref anchor\n      this.anchor = createAnchor('v-component');\n      replace(this.el, this.anchor);\n      // remove is attribute.\n      // this is removed during compilation, but because compilation is\n      // cached, when the component is used elsewhere this attribute\n      // will remain at link time.\n      this.el.removeAttribute('is');\n      this.el.removeAttribute(':is');\n      // remove ref, same as above\n      if (this.descriptor.ref) {\n        this.el.removeAttribute('v-ref:' + hyphenate(this.descriptor.ref));\n      }\n      // if static, build right now.\n      if (this.literal) {\n        this.setComponent(this.expression);\n      }\n    } else {\n      process.env.NODE_ENV !== 'production' && warn('cannot mount component \"' + this.expression + '\" ' + 'on already mounted element: ' + this.el);\n    }\n  },\n\n  /**\n   * Public update, called by the watcher in the dynamic\n   * literal scenario, e.g. <component :is=\"view\">\n   */\n\n  update: function update(value) {\n    if (!this.literal) {\n      this.setComponent(value);\n    }\n  },\n\n  /**\n   * Switch dynamic components. May resolve the component\n   * asynchronously, and perform transition based on\n   * specified transition mode. Accepts a few additional\n   * arguments specifically for vue-router.\n   *\n   * The callback is called when the full transition is\n   * finished.\n   *\n   * @param {String} value\n   * @param {Function} [cb]\n   */\n\n  setComponent: function setComponent(value, cb) {\n    this.invalidatePending();\n    if (!value) {\n      // just remove current\n      this.unbuild(true);\n      this.remove(this.childVM, cb);\n      this.childVM = null;\n    } else {\n      var self = this;\n      this.resolveComponent(value, function () {\n        self.mountComponent(cb);\n      });\n    }\n  },\n\n  /**\n   * Resolve the component constructor to use when creating\n   * the child vm.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  resolveComponent: function resolveComponent(value, cb) {\n    var self = this;\n    this.pendingComponentCb = cancellable(function (Component) {\n      self.ComponentName = Component.options.name || (typeof value === 'string' ? value : null);\n      self.Component = Component;\n      cb();\n    });\n    this.vm._resolveComponent(value, this.pendingComponentCb);\n  },\n\n  /**\n   * Create a new instance using the current constructor and\n   * replace the existing instance. This method doesn't care\n   * whether the new component and the old one are actually\n   * the same.\n   *\n   * @param {Function} [cb]\n   */\n\n  mountComponent: function mountComponent(cb) {\n    // actual mount\n    this.unbuild(true);\n    var self = this;\n    var activateHooks = this.Component.options.activate;\n    var cached = this.getCached();\n    var newComponent = this.build();\n    if (activateHooks && !cached) {\n      this.waitingFor = newComponent;\n      callActivateHooks(activateHooks, newComponent, function () {\n        if (self.waitingFor !== newComponent) {\n          return;\n        }\n        self.waitingFor = null;\n        self.transition(newComponent, cb);\n      });\n    } else {\n      // update ref for kept-alive component\n      if (cached) {\n        newComponent._updateRef();\n      }\n      this.transition(newComponent, cb);\n    }\n  },\n\n  /**\n   * When the component changes or unbinds before an async\n   * constructor is resolved, we need to invalidate its\n   * pending callback.\n   */\n\n  invalidatePending: function invalidatePending() {\n    if (this.pendingComponentCb) {\n      this.pendingComponentCb.cancel();\n      this.pendingComponentCb = null;\n    }\n  },\n\n  /**\n   * Instantiate/insert a new child vm.\n   * If keep alive and has cached instance, insert that\n   * instance; otherwise build a new one and cache it.\n   *\n   * @param {Object} [extraOptions]\n   * @return {Vue} - the created instance\n   */\n\n  build: function build(extraOptions) {\n    var cached = this.getCached();\n    if (cached) {\n      return cached;\n    }\n    if (this.Component) {\n      // default options\n      var options = {\n        name: this.ComponentName,\n        el: cloneNode(this.el),\n        template: this.inlineTemplate,\n        // make sure to add the child with correct parent\n        // if this is a transcluded component, its parent\n        // should be the transclusion host.\n        parent: this._host || this.vm,\n        // if no inline-template, then the compiled\n        // linker can be cached for better performance.\n        _linkerCachable: !this.inlineTemplate,\n        _ref: this.descriptor.ref,\n        _asComponent: true,\n        _isRouterView: this._isRouterView,\n        // if this is a transcluded component, context\n        // will be the common parent vm of this instance\n        // and its host.\n        _context: this.vm,\n        // if this is inside an inline v-for, the scope\n        // will be the intermediate scope created for this\n        // repeat fragment. this is used for linking props\n        // and container directives.\n        _scope: this._scope,\n        // pass in the owner fragment of this component.\n        // this is necessary so that the fragment can keep\n        // track of its contained components in order to\n        // call attach/detach hooks for them.\n        _frag: this._frag\n      };\n      // extra options\n      // in 1.0.0 this is used by vue-router only\n      /* istanbul ignore if */\n      if (extraOptions) {\n        extend(options, extraOptions);\n      }\n      var child = new this.Component(options);\n      if (this.keepAlive) {\n        this.cache[this.Component.cid] = child;\n      }\n      /* istanbul ignore if */\n      if (process.env.NODE_ENV !== 'production' && this.el.hasAttribute('transition') && child._isFragment) {\n        warn('Transitions will not work on a fragment instance. ' + 'Template: ' + child.$options.template, child);\n      }\n      return child;\n    }\n  },\n\n  /**\n   * Try to get a cached instance of the current component.\n   *\n   * @return {Vue|undefined}\n   */\n\n  getCached: function getCached() {\n    return this.keepAlive && this.cache[this.Component.cid];\n  },\n\n  /**\n   * Teardown the current child, but defers cleanup so\n   * that we can separate the destroy and removal steps.\n   *\n   * @param {Boolean} defer\n   */\n\n  unbuild: function unbuild(defer) {\n    if (this.waitingFor) {\n      if (!this.keepAlive) {\n        this.waitingFor.$destroy();\n      }\n      this.waitingFor = null;\n    }\n    var child = this.childVM;\n    if (!child || this.keepAlive) {\n      if (child) {\n        // remove ref\n        child._inactive = true;\n        child._updateRef(true);\n      }\n      return;\n    }\n    // the sole purpose of `deferCleanup` is so that we can\n    // \"deactivate\" the vm right now and perform DOM removal\n    // later.\n    child.$destroy(false, defer);\n  },\n\n  /**\n   * Remove current destroyed child and manually do\n   * the cleanup after removal.\n   *\n   * @param {Function} cb\n   */\n\n  remove: function remove(child, cb) {\n    var keepAlive = this.keepAlive;\n    if (child) {\n      // we may have a component switch when a previous\n      // component is still being transitioned out.\n      // we want to trigger only one lastest insertion cb\n      // when the existing transition finishes. (#1119)\n      this.pendingRemovals++;\n      this.pendingRemovalCb = cb;\n      var self = this;\n      child.$remove(function () {\n        self.pendingRemovals--;\n        if (!keepAlive) child._cleanup();\n        if (!self.pendingRemovals && self.pendingRemovalCb) {\n          self.pendingRemovalCb();\n          self.pendingRemovalCb = null;\n        }\n      });\n    } else if (cb) {\n      cb();\n    }\n  },\n\n  /**\n   * Actually swap the components, depending on the\n   * transition mode. Defaults to simultaneous.\n   *\n   * @param {Vue} target\n   * @param {Function} [cb]\n   */\n\n  transition: function transition(target, cb) {\n    var self = this;\n    var current = this.childVM;\n    // for devtool inspection\n    if (current) current._inactive = true;\n    target._inactive = false;\n    this.childVM = target;\n    switch (self.params.transitionMode) {\n      case 'in-out':\n        target.$before(self.anchor, function () {\n          self.remove(current, cb);\n        });\n        break;\n      case 'out-in':\n        self.remove(current, function () {\n          target.$before(self.anchor, cb);\n        });\n        break;\n      default:\n        self.remove(current);\n        target.$before(self.anchor, cb);\n    }\n  },\n\n  /**\n   * Unbind.\n   */\n\n  unbind: function unbind() {\n    this.invalidatePending();\n    // Do not defer cleanup when unbinding\n    this.unbuild();\n    // destroy all keep-alive cached instances\n    if (this.cache) {\n      for (var key in this.cache) {\n        this.cache[key].$destroy();\n      }\n      this.cache = null;\n    }\n  }\n};\n\n/**\n * Call activate hooks in order (asynchronous)\n *\n * @param {Array} hooks\n * @param {Vue} vm\n * @param {Function} cb\n */\n\nfunction callActivateHooks(hooks, vm, cb) {\n  var total = hooks.length;\n  var called = 0;\n  hooks[0].call(vm, next);\n  function next() {\n    if (++called >= total) {\n      cb();\n    } else {\n      hooks[called].call(vm, next);\n    }\n  }\n}\n\nvar propBindingModes = config._propBindingModes;\nvar empty = {};\n\n// regexes\nvar identRE$1 = /^[$_a-zA-Z]+[\\w$]*$/;\nvar settablePathRE = /^[A-Za-z_$][\\w$]*(\\.[A-Za-z_$][\\w$]*|\\[[^\\[\\]]+\\])*$/;\n\n/**\n * Compile props on a root element and return\n * a props link function.\n *\n * @param {Element|DocumentFragment} el\n * @param {Array} propOptions\n * @param {Vue} vm\n * @return {Function} propsLinkFn\n */\n\nfunction compileProps(el, propOptions, vm) {\n  var props = [];\n  var names = Object.keys(propOptions);\n  var i = names.length;\n  var options, name, attr, value, path, parsed, prop;\n  while (i--) {\n    name = names[i];\n    options = propOptions[name] || empty;\n\n    if (process.env.NODE_ENV !== 'production' && name === '$data') {\n      warn('Do not use $data as prop.', vm);\n      continue;\n    }\n\n    // props could contain dashes, which will be\n    // interpreted as minus calculations by the parser\n    // so we need to camelize the path here\n    path = camelize(name);\n    if (!identRE$1.test(path)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop key: \"' + name + '\". Prop keys ' + 'must be valid identifiers.', vm);\n      continue;\n    }\n\n    prop = {\n      name: name,\n      path: path,\n      options: options,\n      mode: propBindingModes.ONE_WAY,\n      raw: null\n    };\n\n    attr = hyphenate(name);\n    // first check dynamic version\n    if ((value = getBindAttr(el, attr)) === null) {\n      if ((value = getBindAttr(el, attr + '.sync')) !== null) {\n        prop.mode = propBindingModes.TWO_WAY;\n      } else if ((value = getBindAttr(el, attr + '.once')) !== null) {\n        prop.mode = propBindingModes.ONE_TIME;\n      }\n    }\n    if (value !== null) {\n      // has dynamic binding!\n      prop.raw = value;\n      parsed = parseDirective(value);\n      value = parsed.expression;\n      prop.filters = parsed.filters;\n      // check binding type\n      if (isLiteral(value) && !parsed.filters) {\n        // for expressions containing literal numbers and\n        // booleans, there's no need to setup a prop binding,\n        // so we can optimize them as a one-time set.\n        prop.optimizedLiteral = true;\n      } else {\n        prop.dynamic = true;\n        // check non-settable path for two-way bindings\n        if (process.env.NODE_ENV !== 'production' && prop.mode === propBindingModes.TWO_WAY && !settablePathRE.test(value)) {\n          prop.mode = propBindingModes.ONE_WAY;\n          warn('Cannot bind two-way prop with non-settable ' + 'parent path: ' + value, vm);\n        }\n      }\n      prop.parentPath = value;\n\n      // warn required two-way\n      if (process.env.NODE_ENV !== 'production' && options.twoWay && prop.mode !== propBindingModes.TWO_WAY) {\n        warn('Prop \"' + name + '\" expects a two-way binding type.', vm);\n      }\n    } else if ((value = getAttr(el, attr)) !== null) {\n      // has literal binding!\n      prop.raw = value;\n    } else if (process.env.NODE_ENV !== 'production') {\n      // check possible camelCase prop usage\n      var lowerCaseName = path.toLowerCase();\n      value = /[A-Z\\-]/.test(name) && (el.getAttribute(lowerCaseName) || el.getAttribute(':' + lowerCaseName) || el.getAttribute('v-bind:' + lowerCaseName) || el.getAttribute(':' + lowerCaseName + '.once') || el.getAttribute('v-bind:' + lowerCaseName + '.once') || el.getAttribute(':' + lowerCaseName + '.sync') || el.getAttribute('v-bind:' + lowerCaseName + '.sync'));\n      if (value) {\n        warn('Possible usage error for prop `' + lowerCaseName + '` - ' + 'did you mean `' + attr + '`? HTML is case-insensitive, remember to use ' + 'kebab-case for props in templates.', vm);\n      } else if (options.required) {\n        // warn missing required\n        warn('Missing required prop: ' + name, vm);\n      }\n    }\n    // push prop\n    props.push(prop);\n  }\n  return makePropsLinkFn(props);\n}\n\n/**\n * Build a function that applies props to a vm.\n *\n * @param {Array} props\n * @return {Function} propsLinkFn\n */\n\nfunction makePropsLinkFn(props) {\n  return function propsLinkFn(vm, scope) {\n    // store resolved props info\n    vm._props = {};\n    var inlineProps = vm.$options.propsData;\n    var i = props.length;\n    var prop, path, options, value, raw;\n    while (i--) {\n      prop = props[i];\n      raw = prop.raw;\n      path = prop.path;\n      options = prop.options;\n      vm._props[path] = prop;\n      if (inlineProps && hasOwn(inlineProps, path)) {\n        initProp(vm, prop, inlineProps[path]);\n      }if (raw === null) {\n        // initialize absent prop\n        initProp(vm, prop, undefined);\n      } else if (prop.dynamic) {\n        // dynamic prop\n        if (prop.mode === propBindingModes.ONE_TIME) {\n          // one time binding\n          value = (scope || vm._context || vm).$get(prop.parentPath);\n          initProp(vm, prop, value);\n        } else {\n          if (vm._context) {\n            // dynamic binding\n            vm._bindDir({\n              name: 'prop',\n              def: propDef,\n              prop: prop\n            }, null, null, scope); // el, host, scope\n          } else {\n              // root instance\n              initProp(vm, prop, vm.$get(prop.parentPath));\n            }\n        }\n      } else if (prop.optimizedLiteral) {\n        // optimized literal, cast it and just set once\n        var stripped = stripQuotes(raw);\n        value = stripped === raw ? toBoolean(toNumber(raw)) : stripped;\n        initProp(vm, prop, value);\n      } else {\n        // string literal, but we need to cater for\n        // Boolean props with no value, or with same\n        // literal value (e.g. disabled=\"disabled\")\n        // see https://github.com/vuejs/vue-loader/issues/182\n        value = options.type === Boolean && (raw === '' || raw === hyphenate(prop.name)) ? true : raw;\n        initProp(vm, prop, value);\n      }\n    }\n  };\n}\n\n/**\n * Process a prop with a rawValue, applying necessary coersions,\n * default values & assertions and call the given callback with\n * processed value.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} rawValue\n * @param {Function} fn\n */\n\nfunction processPropValue(vm, prop, rawValue, fn) {\n  var isSimple = prop.dynamic && isSimplePath(prop.parentPath);\n  var value = rawValue;\n  if (value === undefined) {\n    value = getPropDefaultValue(vm, prop);\n  }\n  value = coerceProp(prop, value, vm);\n  var coerced = value !== rawValue;\n  if (!assertProp(prop, value, vm)) {\n    value = undefined;\n  }\n  if (isSimple && !coerced) {\n    withoutConversion(function () {\n      fn(value);\n    });\n  } else {\n    fn(value);\n  }\n}\n\n/**\n * Set a prop's initial value on a vm and its data object.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction initProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    defineReactive(vm, prop.path, value);\n  });\n}\n\n/**\n * Update a prop's value on a vm.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @param {*} value\n */\n\nfunction updateProp(vm, prop, value) {\n  processPropValue(vm, prop, value, function (value) {\n    vm[prop.path] = value;\n  });\n}\n\n/**\n * Get the default value of a prop.\n *\n * @param {Vue} vm\n * @param {Object} prop\n * @return {*}\n */\n\nfunction getPropDefaultValue(vm, prop) {\n  // no default, return undefined\n  var options = prop.options;\n  if (!hasOwn(options, 'default')) {\n    // absent boolean value defaults to false\n    return options.type === Boolean ? false : undefined;\n  }\n  var def = options['default'];\n  // warn against non-factory defaults for Object & Array\n  if (isObject(def)) {\n    process.env.NODE_ENV !== 'production' && warn('Invalid default value for prop \"' + prop.name + '\": ' + 'Props with type Object/Array must use a factory function ' + 'to return the default value.', vm);\n  }\n  // call factory function for non-Function types\n  return typeof def === 'function' && options.type !== Function ? def.call(vm) : def;\n}\n\n/**\n * Assert whether a prop is valid.\n *\n * @param {Object} prop\n * @param {*} value\n * @param {Vue} vm\n */\n\nfunction assertProp(prop, value, vm) {\n  if (!prop.options.required && ( // non-required\n  prop.raw === null || // abscent\n  value == null) // null or undefined\n  ) {\n      return true;\n    }\n  var options = prop.options;\n  var type = options.type;\n  var valid = !type;\n  var expectedTypes = [];\n  if (type) {\n    if (!isArray(type)) {\n      type = [type];\n    }\n    for (var i = 0; i < type.length && !valid; i++) {\n      var assertedType = assertType(value, type[i]);\n      expectedTypes.push(assertedType.expectedType);\n      valid = assertedType.valid;\n    }\n  }\n  if (!valid) {\n    if (process.env.NODE_ENV !== 'production') {\n      warn('Invalid prop: type check failed for prop \"' + prop.name + '\".' + ' Expected ' + expectedTypes.map(formatType).join(', ') + ', got ' + formatValue(value) + '.', vm);\n    }\n    return false;\n  }\n  var validator = options.validator;\n  if (validator) {\n    if (!validator(value)) {\n      process.env.NODE_ENV !== 'production' && warn('Invalid prop: custom validator check failed for prop \"' + prop.name + '\".', vm);\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Force parsing value with coerce option.\n *\n * @param {*} value\n * @param {Object} options\n * @return {*}\n */\n\nfunction coerceProp(prop, value, vm) {\n  var coerce = prop.options.coerce;\n  if (!coerce) {\n    return value;\n  }\n  if (typeof coerce === 'function') {\n    return coerce(value);\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid coerce for prop \"' + prop.name + '\": expected function, got ' + typeof coerce + '.', vm);\n    return value;\n  }\n}\n\n/**\n * Assert the type of a value\n *\n * @param {*} value\n * @param {Function} type\n * @return {Object}\n */\n\nfunction assertType(value, type) {\n  var valid;\n  var expectedType;\n  if (type === String) {\n    expectedType = 'string';\n    valid = typeof value === expectedType;\n  } else if (type === Number) {\n    expectedType = 'number';\n    valid = typeof value === expectedType;\n  } else if (type === Boolean) {\n    expectedType = 'boolean';\n    valid = typeof value === expectedType;\n  } else if (type === Function) {\n    expectedType = 'function';\n    valid = typeof value === expectedType;\n  } else if (type === Object) {\n    expectedType = 'object';\n    valid = isPlainObject(value);\n  } else if (type === Array) {\n    expectedType = 'array';\n    valid = isArray(value);\n  } else {\n    valid = value instanceof type;\n  }\n  return {\n    valid: valid,\n    expectedType: expectedType\n  };\n}\n\n/**\n * Format type for output\n *\n * @param {String} type\n * @return {String}\n */\n\nfunction formatType(type) {\n  return type ? type.charAt(0).toUpperCase() + type.slice(1) : 'custom type';\n}\n\n/**\n * Format value\n *\n * @param {*} value\n * @return {String}\n */\n\nfunction formatValue(val) {\n  return Object.prototype.toString.call(val).slice(8, -1);\n}\n\nvar bindingModes = config._propBindingModes;\n\nvar propDef = {\n\n  bind: function bind() {\n    var child = this.vm;\n    var parent = child._context;\n    // passed in from compiler directly\n    var prop = this.descriptor.prop;\n    var childKey = prop.path;\n    var parentKey = prop.parentPath;\n    var twoWay = prop.mode === bindingModes.TWO_WAY;\n\n    var parentWatcher = this.parentWatcher = new Watcher(parent, parentKey, function (val) {\n      updateProp(child, prop, val);\n    }, {\n      twoWay: twoWay,\n      filters: prop.filters,\n      // important: props need to be observed on the\n      // v-for scope if present\n      scope: this._scope\n    });\n\n    // set the child initial value.\n    initProp(child, prop, parentWatcher.value);\n\n    // setup two-way binding\n    if (twoWay) {\n      // important: defer the child watcher creation until\n      // the created hook (after data observation)\n      var self = this;\n      child.$once('pre-hook:created', function () {\n        self.childWatcher = new Watcher(child, childKey, function (val) {\n          parentWatcher.set(val);\n        }, {\n          // ensure sync upward before parent sync down.\n          // this is necessary in cases e.g. the child\n          // mutates a prop array, then replaces it. (#1683)\n          sync: true\n        });\n      });\n    }\n  },\n\n  unbind: function unbind() {\n    this.parentWatcher.teardown();\n    if (this.childWatcher) {\n      this.childWatcher.teardown();\n    }\n  }\n};\n\nvar queue$1 = [];\nvar queued = false;\n\n/**\n * Push a job into the queue.\n *\n * @param {Function} job\n */\n\nfunction pushJob(job) {\n  queue$1.push(job);\n  if (!queued) {\n    queued = true;\n    nextTick(flush);\n  }\n}\n\n/**\n * Flush the queue, and do one forced reflow before\n * triggering transitions.\n */\n\nfunction flush() {\n  // Force layout\n  var f = document.documentElement.offsetHeight;\n  for (var i = 0; i < queue$1.length; i++) {\n    queue$1[i]();\n  }\n  queue$1 = [];\n  queued = false;\n  // dummy return, so js linters don't complain about\n  // unused variable f\n  return f;\n}\n\nvar TYPE_TRANSITION = 'transition';\nvar TYPE_ANIMATION = 'animation';\nvar transDurationProp = transitionProp + 'Duration';\nvar animDurationProp = animationProp + 'Duration';\n\n/**\n * If a just-entered element is applied the\n * leave class while its enter transition hasn't started yet,\n * and the transitioned property has the same value for both\n * enter/leave, then the leave transition will be skipped and\n * the transitionend event never fires. This function ensures\n * its callback to be called after a transition has started\n * by waiting for double raf.\n *\n * It falls back to setTimeout on devices that support CSS\n * transitions but not raf (e.g. Android 4.2 browser) - since\n * these environments are usually slow, we are giving it a\n * relatively large timeout.\n */\n\nvar raf = inBrowser && window.requestAnimationFrame;\nvar waitForTransitionStart = raf\n/* istanbul ignore next */\n? function (fn) {\n  raf(function () {\n    raf(fn);\n  });\n} : function (fn) {\n  setTimeout(fn, 50);\n};\n\n/**\n * A Transition object that encapsulates the state and logic\n * of the transition.\n *\n * @param {Element} el\n * @param {String} id\n * @param {Object} hooks\n * @param {Vue} vm\n */\nfunction Transition(el, id, hooks, vm) {\n  this.id = id;\n  this.el = el;\n  this.enterClass = hooks && hooks.enterClass || id + '-enter';\n  this.leaveClass = hooks && hooks.leaveClass || id + '-leave';\n  this.hooks = hooks;\n  this.vm = vm;\n  // async state\n  this.pendingCssEvent = this.pendingCssCb = this.cancel = this.pendingJsCb = this.op = this.cb = null;\n  this.justEntered = false;\n  this.entered = this.left = false;\n  this.typeCache = {};\n  // check css transition type\n  this.type = hooks && hooks.type;\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV !== 'production') {\n    if (this.type && this.type !== TYPE_TRANSITION && this.type !== TYPE_ANIMATION) {\n      warn('invalid CSS transition type for transition=\"' + this.id + '\": ' + this.type, vm);\n    }\n  }\n  // bind\n  var self = this;['enterNextTick', 'enterDone', 'leaveNextTick', 'leaveDone'].forEach(function (m) {\n    self[m] = bind(self[m], self);\n  });\n}\n\nvar p$1 = Transition.prototype;\n\n/**\n * Start an entering transition.\n *\n * 1. enter transition triggered\n * 2. call beforeEnter hook\n * 3. add enter class\n * 4. insert/show element\n * 5. call enter hook (with possible explicit js callback)\n * 6. reflow\n * 7. based on transition type:\n *    - transition:\n *        remove class now, wait for transitionend,\n *        then done if there's no explicit js callback.\n *    - animation:\n *        wait for animationend, remove class,\n *        then done if there's no explicit js callback.\n *    - no css transition:\n *        done now if there's no explicit js callback.\n * 8. wait for either done or js callback, then call\n *    afterEnter hook.\n *\n * @param {Function} op - insert/show the element\n * @param {Function} [cb]\n */\n\np$1.enter = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeEnter');\n  this.cb = cb;\n  addClass(this.el, this.enterClass);\n  op();\n  this.entered = false;\n  this.callHookWithCb('enter');\n  if (this.entered) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.enterCancelled;\n  pushJob(this.enterNextTick);\n};\n\n/**\n * The \"nextTick\" phase of an entering transition, which is\n * to be pushed into a queue and executed after a reflow so\n * that removing the class can trigger a CSS transition.\n */\n\np$1.enterNextTick = function () {\n  var _this = this;\n\n  // prevent transition skipping\n  this.justEntered = true;\n  waitForTransitionStart(function () {\n    _this.justEntered = false;\n  });\n  var enterDone = this.enterDone;\n  var type = this.getCssTransitionType(this.enterClass);\n  if (!this.pendingJsCb) {\n    if (type === TYPE_TRANSITION) {\n      // trigger transition by removing enter class now\n      removeClass(this.el, this.enterClass);\n      this.setupCssCb(transitionEndEvent, enterDone);\n    } else if (type === TYPE_ANIMATION) {\n      this.setupCssCb(animationEndEvent, enterDone);\n    } else {\n      enterDone();\n    }\n  } else if (type === TYPE_TRANSITION) {\n    removeClass(this.el, this.enterClass);\n  }\n};\n\n/**\n * The \"cleanup\" phase of an entering transition.\n */\n\np$1.enterDone = function () {\n  this.entered = true;\n  this.cancel = this.pendingJsCb = null;\n  removeClass(this.el, this.enterClass);\n  this.callHook('afterEnter');\n  if (this.cb) this.cb();\n};\n\n/**\n * Start a leaving transition.\n *\n * 1. leave transition triggered.\n * 2. call beforeLeave hook\n * 3. add leave class (trigger css transition)\n * 4. call leave hook (with possible explicit js callback)\n * 5. reflow if no explicit js callback is provided\n * 6. based on transition type:\n *    - transition or animation:\n *        wait for end event, remove class, then done if\n *        there's no explicit js callback.\n *    - no css transition:\n *        done if there's no explicit js callback.\n * 7. wait for either done or js callback, then call\n *    afterLeave hook.\n *\n * @param {Function} op - remove/hide the element\n * @param {Function} [cb]\n */\n\np$1.leave = function (op, cb) {\n  this.cancelPending();\n  this.callHook('beforeLeave');\n  this.op = op;\n  this.cb = cb;\n  addClass(this.el, this.leaveClass);\n  this.left = false;\n  this.callHookWithCb('leave');\n  if (this.left) {\n    return; // user called done synchronously.\n  }\n  this.cancel = this.hooks && this.hooks.leaveCancelled;\n  // only need to handle leaveDone if\n  // 1. the transition is already done (synchronously called\n  //    by the user, which causes this.op set to null)\n  // 2. there's no explicit js callback\n  if (this.op && !this.pendingJsCb) {\n    // if a CSS transition leaves immediately after enter,\n    // the transitionend event never fires. therefore we\n    // detect such cases and end the leave immediately.\n    if (this.justEntered) {\n      this.leaveDone();\n    } else {\n      pushJob(this.leaveNextTick);\n    }\n  }\n};\n\n/**\n * The \"nextTick\" phase of a leaving transition.\n */\n\np$1.leaveNextTick = function () {\n  var type = this.getCssTransitionType(this.leaveClass);\n  if (type) {\n    var event = type === TYPE_TRANSITION ? transitionEndEvent : animationEndEvent;\n    this.setupCssCb(event, this.leaveDone);\n  } else {\n    this.leaveDone();\n  }\n};\n\n/**\n * The \"cleanup\" phase of a leaving transition.\n */\n\np$1.leaveDone = function () {\n  this.left = true;\n  this.cancel = this.pendingJsCb = null;\n  this.op();\n  removeClass(this.el, this.leaveClass);\n  this.callHook('afterLeave');\n  if (this.cb) this.cb();\n  this.op = null;\n};\n\n/**\n * Cancel any pending callbacks from a previously running\n * but not finished transition.\n */\n\np$1.cancelPending = function () {\n  this.op = this.cb = null;\n  var hasPending = false;\n  if (this.pendingCssCb) {\n    hasPending = true;\n    off(this.el, this.pendingCssEvent, this.pendingCssCb);\n    this.pendingCssEvent = this.pendingCssCb = null;\n  }\n  if (this.pendingJsCb) {\n    hasPending = true;\n    this.pendingJsCb.cancel();\n    this.pendingJsCb = null;\n  }\n  if (hasPending) {\n    removeClass(this.el, this.enterClass);\n    removeClass(this.el, this.leaveClass);\n  }\n  if (this.cancel) {\n    this.cancel.call(this.vm, this.el);\n    this.cancel = null;\n  }\n};\n\n/**\n * Call a user-provided synchronous hook function.\n *\n * @param {String} type\n */\n\np$1.callHook = function (type) {\n  if (this.hooks && this.hooks[type]) {\n    this.hooks[type].call(this.vm, this.el);\n  }\n};\n\n/**\n * Call a user-provided, potentially-async hook function.\n * We check for the length of arguments to see if the hook\n * expects a `done` callback. If true, the transition's end\n * will be determined by when the user calls that callback;\n * otherwise, the end is determined by the CSS transition or\n * animation.\n *\n * @param {String} type\n */\n\np$1.callHookWithCb = function (type) {\n  var hook = this.hooks && this.hooks[type];\n  if (hook) {\n    if (hook.length > 1) {\n      this.pendingJsCb = cancellable(this[type + 'Done']);\n    }\n    hook.call(this.vm, this.el, this.pendingJsCb);\n  }\n};\n\n/**\n * Get an element's transition type based on the\n * calculated styles.\n *\n * @param {String} className\n * @return {Number}\n */\n\np$1.getCssTransitionType = function (className) {\n  /* istanbul ignore if */\n  if (!transitionEndEvent ||\n  // skip CSS transitions if page is not visible -\n  // this solves the issue of transitionend events not\n  // firing until the page is visible again.\n  // pageVisibility API is supported in IE10+, same as\n  // CSS transitions.\n  document.hidden ||\n  // explicit js-only transition\n  this.hooks && this.hooks.css === false ||\n  // element is hidden\n  isHidden(this.el)) {\n    return;\n  }\n  var type = this.type || this.typeCache[className];\n  if (type) return type;\n  var inlineStyles = this.el.style;\n  var computedStyles = window.getComputedStyle(this.el);\n  var transDuration = inlineStyles[transDurationProp] || computedStyles[transDurationProp];\n  if (transDuration && transDuration !== '0s') {\n    type = TYPE_TRANSITION;\n  } else {\n    var animDuration = inlineStyles[animDurationProp] || computedStyles[animDurationProp];\n    if (animDuration && animDuration !== '0s') {\n      type = TYPE_ANIMATION;\n    }\n  }\n  if (type) {\n    this.typeCache[className] = type;\n  }\n  return type;\n};\n\n/**\n * Setup a CSS transitionend/animationend callback.\n *\n * @param {String} event\n * @param {Function} cb\n */\n\np$1.setupCssCb = function (event, cb) {\n  this.pendingCssEvent = event;\n  var self = this;\n  var el = this.el;\n  var onEnd = this.pendingCssCb = function (e) {\n    if (e.target === el) {\n      off(el, event, onEnd);\n      self.pendingCssEvent = self.pendingCssCb = null;\n      if (!self.pendingJsCb && cb) {\n        cb();\n      }\n    }\n  };\n  on(el, event, onEnd);\n};\n\n/**\n * Check if an element is hidden - in that case we can just\n * skip the transition alltogether.\n *\n * @param {Element} el\n * @return {Boolean}\n */\n\nfunction isHidden(el) {\n  if (/svg$/.test(el.namespaceURI)) {\n    // SVG elements do not have offset(Width|Height)\n    // so we need to check the client rect\n    var rect = el.getBoundingClientRect();\n    return !(rect.width || rect.height);\n  } else {\n    return !(el.offsetWidth || el.offsetHeight || el.getClientRects().length);\n  }\n}\n\nvar transition$1 = {\n\n  priority: TRANSITION,\n\n  update: function update(id, oldId) {\n    var el = this.el;\n    // resolve on owner vm\n    var hooks = resolveAsset(this.vm.$options, 'transitions', id);\n    id = id || 'v';\n    oldId = oldId || 'v';\n    el.__v_trans = new Transition(el, id, hooks, this.vm);\n    removeClass(el, oldId + '-transition');\n    addClass(el, id + '-transition');\n  }\n};\n\nvar internalDirectives = {\n  style: style,\n  'class': vClass,\n  component: component,\n  prop: propDef,\n  transition: transition$1\n};\n\n// special binding prefixes\nvar bindRE = /^v-bind:|^:/;\nvar onRE = /^v-on:|^@/;\nvar dirAttrRE = /^v-([^:]+)(?:$|:(.*)$)/;\nvar modifierRE = /\\.[^\\.]+/g;\nvar transitionRE = /^(v-bind:|:)?transition$/;\n\n// default directive priority\nvar DEFAULT_PRIORITY = 1000;\nvar DEFAULT_TERMINAL_PRIORITY = 2000;\n\n/**\n * Compile a template and return a reusable composite link\n * function, which recursively contains more link functions\n * inside. This top level compile function would normally\n * be called on instance root nodes, but can also be used\n * for partial compilation if the partial argument is true.\n *\n * The returned composite link function, when called, will\n * return an unlink function that tearsdown all directives\n * created during the linking phase.\n *\n * @param {Element|DocumentFragment} el\n * @param {Object} options\n * @param {Boolean} partial\n * @return {Function}\n */\n\nfunction compile(el, options, partial) {\n  // link function for the node itself.\n  var nodeLinkFn = partial || !options._asComponent ? compileNode(el, options) : null;\n  // link function for the childNodes\n  var childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && !isScript(el) && el.hasChildNodes() ? compileNodeList(el.childNodes, options) : null;\n\n  /**\n   * A composite linker function to be called on a already\n   * compiled piece of DOM, which instantiates all directive\n   * instances.\n   *\n   * @param {Vue} vm\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host] - host vm of transcluded content\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - link context fragment\n   * @return {Function|undefined}\n   */\n\n  return function compositeLinkFn(vm, el, host, scope, frag) {\n    // cache childNodes before linking parent, fix #657\n    var childNodes = toArray(el.childNodes);\n    // link\n    var dirs = linkAndCapture(function compositeLinkCapturer() {\n      if (nodeLinkFn) nodeLinkFn(vm, el, host, scope, frag);\n      if (childLinkFn) childLinkFn(vm, childNodes, host, scope, frag);\n    }, vm);\n    return makeUnlinkFn(vm, dirs);\n  };\n}\n\n/**\n * Apply a linker to a vm/element pair and capture the\n * directives created during the process.\n *\n * @param {Function} linker\n * @param {Vue} vm\n */\n\nfunction linkAndCapture(linker, vm) {\n  /* istanbul ignore if */\n  if (process.env.NODE_ENV === 'production') {\n    // reset directives before every capture in production\n    // mode, so that when unlinking we don't need to splice\n    // them out (which turns out to be a perf hit).\n    // they are kept in development mode because they are\n    // useful for Vue's own tests.\n    vm._directives = [];\n  }\n  var originalDirCount = vm._directives.length;\n  linker();\n  var dirs = vm._directives.slice(originalDirCount);\n  dirs.sort(directiveComparator);\n  for (var i = 0, l = dirs.length; i < l; i++) {\n    dirs[i]._bind();\n  }\n  return dirs;\n}\n\n/**\n * Directive priority sort comparator\n *\n * @param {Object} a\n * @param {Object} b\n */\n\nfunction directiveComparator(a, b) {\n  a = a.descriptor.def.priority || DEFAULT_PRIORITY;\n  b = b.descriptor.def.priority || DEFAULT_PRIORITY;\n  return a > b ? -1 : a === b ? 0 : 1;\n}\n\n/**\n * Linker functions return an unlink function that\n * tearsdown all directives instances generated during\n * the process.\n *\n * We create unlink functions with only the necessary\n * information to avoid retaining additional closures.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Vue} [context]\n * @param {Array} [contextDirs]\n * @return {Function}\n */\n\nfunction makeUnlinkFn(vm, dirs, context, contextDirs) {\n  function unlink(destroying) {\n    teardownDirs(vm, dirs, destroying);\n    if (context && contextDirs) {\n      teardownDirs(context, contextDirs);\n    }\n  }\n  // expose linked directives\n  unlink.dirs = dirs;\n  return unlink;\n}\n\n/**\n * Teardown partial linked directives.\n *\n * @param {Vue} vm\n * @param {Array} dirs\n * @param {Boolean} destroying\n */\n\nfunction teardownDirs(vm, dirs, destroying) {\n  var i = dirs.length;\n  while (i--) {\n    dirs[i]._teardown();\n    if (process.env.NODE_ENV !== 'production' && !destroying) {\n      vm._directives.$remove(dirs[i]);\n    }\n  }\n}\n\n/**\n * Compile link props on an instance.\n *\n * @param {Vue} vm\n * @param {Element} el\n * @param {Object} props\n * @param {Object} [scope]\n * @return {Function}\n */\n\nfunction compileAndLinkProps(vm, el, props, scope) {\n  var propsLinkFn = compileProps(el, props, vm);\n  var propDirs = linkAndCapture(function () {\n    propsLinkFn(vm, scope);\n  }, vm);\n  return makeUnlinkFn(vm, propDirs);\n}\n\n/**\n * Compile the root element of an instance.\n *\n * 1. attrs on context container (context scope)\n * 2. attrs on the component template root node, if\n *    replace:true (child scope)\n *\n * If this is a fragment instance, we only need to compile 1.\n *\n * @param {Element} el\n * @param {Object} options\n * @param {Object} contextOptions\n * @return {Function}\n */\n\nfunction compileRoot(el, options, contextOptions) {\n  var containerAttrs = options._containerAttrs;\n  var replacerAttrs = options._replacerAttrs;\n  var contextLinkFn, replacerLinkFn;\n\n  // only need to compile other attributes for\n  // non-fragment instances\n  if (el.nodeType !== 11) {\n    // for components, container and replacer need to be\n    // compiled separately and linked in different scopes.\n    if (options._asComponent) {\n      // 2. container attributes\n      if (containerAttrs && contextOptions) {\n        contextLinkFn = compileDirectives(containerAttrs, contextOptions);\n      }\n      if (replacerAttrs) {\n        // 3. replacer attributes\n        replacerLinkFn = compileDirectives(replacerAttrs, options);\n      }\n    } else {\n      // non-component, just compile as a normal element.\n      replacerLinkFn = compileDirectives(el.attributes, options);\n    }\n  } else if (process.env.NODE_ENV !== 'production' && containerAttrs) {\n    // warn container directives for fragment instances\n    var names = containerAttrs.filter(function (attr) {\n      // allow vue-loader/vueify scoped css attributes\n      return attr.name.indexOf('_v-') < 0 &&\n      // allow event listeners\n      !onRE.test(attr.name) &&\n      // allow slots\n      attr.name !== 'slot';\n    }).map(function (attr) {\n      return '\"' + attr.name + '\"';\n    });\n    if (names.length) {\n      var plural = names.length > 1;\n      warn('Attribute' + (plural ? 's ' : ' ') + names.join(', ') + (plural ? ' are' : ' is') + ' ignored on component ' + '<' + options.el.tagName.toLowerCase() + '> because ' + 'the component is a fragment instance: ' + 'http://vuejs.org/guide/components.html#Fragment-Instance');\n    }\n  }\n\n  options._containerAttrs = options._replacerAttrs = null;\n  return function rootLinkFn(vm, el, scope) {\n    // link context scope dirs\n    var context = vm._context;\n    var contextDirs;\n    if (context && contextLinkFn) {\n      contextDirs = linkAndCapture(function () {\n        contextLinkFn(context, el, null, scope);\n      }, context);\n    }\n\n    // link self\n    var selfDirs = linkAndCapture(function () {\n      if (replacerLinkFn) replacerLinkFn(vm, el);\n    }, vm);\n\n    // return the unlink function that tearsdown context\n    // container directives.\n    return makeUnlinkFn(vm, selfDirs, context, contextDirs);\n  };\n}\n\n/**\n * Compile a node and return a nodeLinkFn based on the\n * node type.\n *\n * @param {Node} node\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileNode(node, options) {\n  var type = node.nodeType;\n  if (type === 1 && !isScript(node)) {\n    return compileElement(node, options);\n  } else if (type === 3 && node.data.trim()) {\n    return compileTextNode(node, options);\n  } else {\n    return null;\n  }\n}\n\n/**\n * Compile an element and return a nodeLinkFn.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|null}\n */\n\nfunction compileElement(el, options) {\n  // preprocess textareas.\n  // textarea treats its text content as the initial value.\n  // just bind it as an attr directive for value.\n  if (el.tagName === 'TEXTAREA') {\n    var tokens = parseText(el.value);\n    if (tokens) {\n      el.setAttribute(':value', tokensToExp(tokens));\n      el.value = '';\n    }\n  }\n  var linkFn;\n  var hasAttrs = el.hasAttributes();\n  var attrs = hasAttrs && toArray(el.attributes);\n  // check terminal directives (for & if)\n  if (hasAttrs) {\n    linkFn = checkTerminalDirectives(el, attrs, options);\n  }\n  // check element directives\n  if (!linkFn) {\n    linkFn = checkElementDirectives(el, options);\n  }\n  // check component\n  if (!linkFn) {\n    linkFn = checkComponent(el, options);\n  }\n  // normal directives\n  if (!linkFn && hasAttrs) {\n    linkFn = compileDirectives(attrs, options);\n  }\n  return linkFn;\n}\n\n/**\n * Compile a textNode and return a nodeLinkFn.\n *\n * @param {TextNode} node\n * @param {Object} options\n * @return {Function|null} textNodeLinkFn\n */\n\nfunction compileTextNode(node, options) {\n  // skip marked text nodes\n  if (node._skip) {\n    return removeText;\n  }\n\n  var tokens = parseText(node.wholeText);\n  if (!tokens) {\n    return null;\n  }\n\n  // mark adjacent text nodes as skipped,\n  // because we are using node.wholeText to compile\n  // all adjacent text nodes together. This fixes\n  // issues in IE where sometimes it splits up a single\n  // text node into multiple ones.\n  var next = node.nextSibling;\n  while (next && next.nodeType === 3) {\n    next._skip = true;\n    next = next.nextSibling;\n  }\n\n  var frag = document.createDocumentFragment();\n  var el, token;\n  for (var i = 0, l = tokens.length; i < l; i++) {\n    token = tokens[i];\n    el = token.tag ? processTextToken(token, options) : document.createTextNode(token.value);\n    frag.appendChild(el);\n  }\n  return makeTextNodeLinkFn(tokens, frag, options);\n}\n\n/**\n * Linker for an skipped text node.\n *\n * @param {Vue} vm\n * @param {Text} node\n */\n\nfunction removeText(vm, node) {\n  remove(node);\n}\n\n/**\n * Process a single text token.\n *\n * @param {Object} token\n * @param {Object} options\n * @return {Node}\n */\n\nfunction processTextToken(token, options) {\n  var el;\n  if (token.oneTime) {\n    el = document.createTextNode(token.value);\n  } else {\n    if (token.html) {\n      el = document.createComment('v-html');\n      setTokenType('html');\n    } else {\n      // IE will clean up empty textNodes during\n      // frag.cloneNode(true), so we have to give it\n      // something here...\n      el = document.createTextNode(' ');\n      setTokenType('text');\n    }\n  }\n  function setTokenType(type) {\n    if (token.descriptor) return;\n    var parsed = parseDirective(token.value);\n    token.descriptor = {\n      name: type,\n      def: directives[type],\n      expression: parsed.expression,\n      filters: parsed.filters\n    };\n  }\n  return el;\n}\n\n/**\n * Build a function that processes a textNode.\n *\n * @param {Array<Object>} tokens\n * @param {DocumentFragment} frag\n */\n\nfunction makeTextNodeLinkFn(tokens, frag) {\n  return function textNodeLinkFn(vm, el, host, scope) {\n    var fragClone = frag.cloneNode(true);\n    var childNodes = toArray(fragClone.childNodes);\n    var token, value, node;\n    for (var i = 0, l = tokens.length; i < l; i++) {\n      token = tokens[i];\n      value = token.value;\n      if (token.tag) {\n        node = childNodes[i];\n        if (token.oneTime) {\n          value = (scope || vm).$eval(value);\n          if (token.html) {\n            replace(node, parseTemplate(value, true));\n          } else {\n            node.data = _toString(value);\n          }\n        } else {\n          vm._bindDir(token.descriptor, node, host, scope);\n        }\n      }\n    }\n    replace(el, fragClone);\n  };\n}\n\n/**\n * Compile a node list and return a childLinkFn.\n *\n * @param {NodeList} nodeList\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction compileNodeList(nodeList, options) {\n  var linkFns = [];\n  var nodeLinkFn, childLinkFn, node;\n  for (var i = 0, l = nodeList.length; i < l; i++) {\n    node = nodeList[i];\n    nodeLinkFn = compileNode(node, options);\n    childLinkFn = !(nodeLinkFn && nodeLinkFn.terminal) && node.tagName !== 'SCRIPT' && node.hasChildNodes() ? compileNodeList(node.childNodes, options) : null;\n    linkFns.push(nodeLinkFn, childLinkFn);\n  }\n  return linkFns.length ? makeChildLinkFn(linkFns) : null;\n}\n\n/**\n * Make a child link function for a node's childNodes.\n *\n * @param {Array<Function>} linkFns\n * @return {Function} childLinkFn\n */\n\nfunction makeChildLinkFn(linkFns) {\n  return function childLinkFn(vm, nodes, host, scope, frag) {\n    var node, nodeLinkFn, childrenLinkFn;\n    for (var i = 0, n = 0, l = linkFns.length; i < l; n++) {\n      node = nodes[n];\n      nodeLinkFn = linkFns[i++];\n      childrenLinkFn = linkFns[i++];\n      // cache childNodes before linking parent, fix #657\n      var childNodes = toArray(node.childNodes);\n      if (nodeLinkFn) {\n        nodeLinkFn(vm, node, host, scope, frag);\n      }\n      if (childrenLinkFn) {\n        childrenLinkFn(vm, childNodes, host, scope, frag);\n      }\n    }\n  };\n}\n\n/**\n * Check for element directives (custom elements that should\n * be resovled as terminal directives).\n *\n * @param {Element} el\n * @param {Object} options\n */\n\nfunction checkElementDirectives(el, options) {\n  var tag = el.tagName.toLowerCase();\n  if (commonTagRE.test(tag)) {\n    return;\n  }\n  var def = resolveAsset(options, 'elementDirectives', tag);\n  if (def) {\n    return makeTerminalNodeLinkFn(el, tag, '', options, def);\n  }\n}\n\n/**\n * Check if an element is a component. If yes, return\n * a component link function.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Function|undefined}\n */\n\nfunction checkComponent(el, options) {\n  var component = checkComponentAttr(el, options);\n  if (component) {\n    var ref = findRef(el);\n    var descriptor = {\n      name: 'component',\n      ref: ref,\n      expression: component.id,\n      def: internalDirectives.component,\n      modifiers: {\n        literal: !component.dynamic\n      }\n    };\n    var componentLinkFn = function componentLinkFn(vm, el, host, scope, frag) {\n      if (ref) {\n        defineReactive((scope || vm).$refs, ref, null);\n      }\n      vm._bindDir(descriptor, el, host, scope, frag);\n    };\n    componentLinkFn.terminal = true;\n    return componentLinkFn;\n  }\n}\n\n/**\n * Check an element for terminal directives in fixed order.\n * If it finds one, return a terminal link function.\n *\n * @param {Element} el\n * @param {Array} attrs\n * @param {Object} options\n * @return {Function} terminalLinkFn\n */\n\nfunction checkTerminalDirectives(el, attrs, options) {\n  // skip v-pre\n  if (getAttr(el, 'v-pre') !== null) {\n    return skip;\n  }\n  // skip v-else block, but only if following v-if\n  if (el.hasAttribute('v-else')) {\n    var prev = el.previousElementSibling;\n    if (prev && prev.hasAttribute('v-if')) {\n      return skip;\n    }\n  }\n\n  var attr, name, value, modifiers, matched, dirName, rawName, arg, def, termDef;\n  for (var i = 0, j = attrs.length; i < j; i++) {\n    attr = attrs[i];\n    name = attr.name.replace(modifierRE, '');\n    if (matched = name.match(dirAttrRE)) {\n      def = resolveAsset(options, 'directives', matched[1]);\n      if (def && def.terminal) {\n        if (!termDef || (def.priority || DEFAULT_TERMINAL_PRIORITY) > termDef.priority) {\n          termDef = def;\n          rawName = attr.name;\n          modifiers = parseModifiers(attr.name);\n          value = attr.value;\n          dirName = matched[1];\n          arg = matched[2];\n        }\n      }\n    }\n  }\n\n  if (termDef) {\n    return makeTerminalNodeLinkFn(el, dirName, value, options, termDef, rawName, arg, modifiers);\n  }\n}\n\nfunction skip() {}\nskip.terminal = true;\n\n/**\n * Build a node link function for a terminal directive.\n * A terminal link function terminates the current\n * compilation recursion and handles compilation of the\n * subtree in the directive.\n *\n * @param {Element} el\n * @param {String} dirName\n * @param {String} value\n * @param {Object} options\n * @param {Object} def\n * @param {String} [rawName]\n * @param {String} [arg]\n * @param {Object} [modifiers]\n * @return {Function} terminalLinkFn\n */\n\nfunction makeTerminalNodeLinkFn(el, dirName, value, options, def, rawName, arg, modifiers) {\n  var parsed = parseDirective(value);\n  var descriptor = {\n    name: dirName,\n    arg: arg,\n    expression: parsed.expression,\n    filters: parsed.filters,\n    raw: value,\n    attr: rawName,\n    modifiers: modifiers,\n    def: def\n  };\n  // check ref for v-for and router-view\n  if (dirName === 'for' || dirName === 'router-view') {\n    descriptor.ref = findRef(el);\n  }\n  var fn = function terminalNodeLinkFn(vm, el, host, scope, frag) {\n    if (descriptor.ref) {\n      defineReactive((scope || vm).$refs, descriptor.ref, null);\n    }\n    vm._bindDir(descriptor, el, host, scope, frag);\n  };\n  fn.terminal = true;\n  return fn;\n}\n\n/**\n * Compile the directives on an element and return a linker.\n *\n * @param {Array|NamedNodeMap} attrs\n * @param {Object} options\n * @return {Function}\n */\n\nfunction compileDirectives(attrs, options) {\n  var i = attrs.length;\n  var dirs = [];\n  var attr, name, value, rawName, rawValue, dirName, arg, modifiers, dirDef, tokens, matched;\n  while (i--) {\n    attr = attrs[i];\n    name = rawName = attr.name;\n    value = rawValue = attr.value;\n    tokens = parseText(value);\n    // reset arg\n    arg = null;\n    // check modifiers\n    modifiers = parseModifiers(name);\n    name = name.replace(modifierRE, '');\n\n    // attribute interpolations\n    if (tokens) {\n      value = tokensToExp(tokens);\n      arg = name;\n      pushDir('bind', directives.bind, tokens);\n      // warn against mixing mustaches with v-bind\n      if (process.env.NODE_ENV !== 'production') {\n        if (name === 'class' && Array.prototype.some.call(attrs, function (attr) {\n          return attr.name === ':class' || attr.name === 'v-bind:class';\n        })) {\n          warn('class=\"' + rawValue + '\": Do not mix mustache interpolation ' + 'and v-bind for \"class\" on the same element. Use one or the other.', options);\n        }\n      }\n    } else\n\n      // special attribute: transition\n      if (transitionRE.test(name)) {\n        modifiers.literal = !bindRE.test(name);\n        pushDir('transition', internalDirectives.transition);\n      } else\n\n        // event handlers\n        if (onRE.test(name)) {\n          arg = name.replace(onRE, '');\n          pushDir('on', directives.on);\n        } else\n\n          // attribute bindings\n          if (bindRE.test(name)) {\n            dirName = name.replace(bindRE, '');\n            if (dirName === 'style' || dirName === 'class') {\n              pushDir(dirName, internalDirectives[dirName]);\n            } else {\n              arg = dirName;\n              pushDir('bind', directives.bind);\n            }\n          } else\n\n            // normal directives\n            if (matched = name.match(dirAttrRE)) {\n              dirName = matched[1];\n              arg = matched[2];\n\n              // skip v-else (when used with v-show)\n              if (dirName === 'else') {\n                continue;\n              }\n\n              dirDef = resolveAsset(options, 'directives', dirName, true);\n              if (dirDef) {\n                pushDir(dirName, dirDef);\n              }\n            }\n  }\n\n  /**\n   * Push a directive.\n   *\n   * @param {String} dirName\n   * @param {Object|Function} def\n   * @param {Array} [interpTokens]\n   */\n\n  function pushDir(dirName, def, interpTokens) {\n    var hasOneTimeToken = interpTokens && hasOneTime(interpTokens);\n    var parsed = !hasOneTimeToken && parseDirective(value);\n    dirs.push({\n      name: dirName,\n      attr: rawName,\n      raw: rawValue,\n      def: def,\n      arg: arg,\n      modifiers: modifiers,\n      // conversion from interpolation strings with one-time token\n      // to expression is differed until directive bind time so that we\n      // have access to the actual vm context for one-time bindings.\n      expression: parsed && parsed.expression,\n      filters: parsed && parsed.filters,\n      interp: interpTokens,\n      hasOneTime: hasOneTimeToken\n    });\n  }\n\n  if (dirs.length) {\n    return makeNodeLinkFn(dirs);\n  }\n}\n\n/**\n * Parse modifiers from directive attribute name.\n *\n * @param {String} name\n * @return {Object}\n */\n\nfunction parseModifiers(name) {\n  var res = Object.create(null);\n  var match = name.match(modifierRE);\n  if (match) {\n    var i = match.length;\n    while (i--) {\n      res[match[i].slice(1)] = true;\n    }\n  }\n  return res;\n}\n\n/**\n * Build a link function for all directives on a single node.\n *\n * @param {Array} directives\n * @return {Function} directivesLinkFn\n */\n\nfunction makeNodeLinkFn(directives) {\n  return function nodeLinkFn(vm, el, host, scope, frag) {\n    // reverse apply because it's sorted low to high\n    var i = directives.length;\n    while (i--) {\n      vm._bindDir(directives[i], el, host, scope, frag);\n    }\n  };\n}\n\n/**\n * Check if an interpolation string contains one-time tokens.\n *\n * @param {Array} tokens\n * @return {Boolean}\n */\n\nfunction hasOneTime(tokens) {\n  var i = tokens.length;\n  while (i--) {\n    if (tokens[i].oneTime) return true;\n  }\n}\n\nfunction isScript(el) {\n  return el.tagName === 'SCRIPT' && (!el.hasAttribute('type') || el.getAttribute('type') === 'text/javascript');\n}\n\nvar specialCharRE = /[^\\w\\-:\\.]/;\n\n/**\n * Process an element or a DocumentFragment based on a\n * instance option object. This allows us to transclude\n * a template node/fragment before the instance is created,\n * so the processed fragment can then be cloned and reused\n * in v-for.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transclude(el, options) {\n  // extract container attributes to pass them down\n  // to compiler, because they need to be compiled in\n  // parent scope. we are mutating the options object here\n  // assuming the same object will be used for compile\n  // right after this.\n  if (options) {\n    options._containerAttrs = extractAttrs(el);\n  }\n  // for template tags, what we want is its content as\n  // a documentFragment (for fragment instances)\n  if (isTemplate(el)) {\n    el = parseTemplate(el);\n  }\n  if (options) {\n    if (options._asComponent && !options.template) {\n      options.template = '<slot></slot>';\n    }\n    if (options.template) {\n      options._content = extractContent(el);\n      el = transcludeTemplate(el, options);\n    }\n  }\n  if (isFragment(el)) {\n    // anchors for fragment instance\n    // passing in `persist: true` to avoid them being\n    // discarded by IE during template cloning\n    prepend(createAnchor('v-start', true), el);\n    el.appendChild(createAnchor('v-end', true));\n  }\n  return el;\n}\n\n/**\n * Process the template option.\n * If the replace option is true this will swap the $el.\n *\n * @param {Element} el\n * @param {Object} options\n * @return {Element|DocumentFragment}\n */\n\nfunction transcludeTemplate(el, options) {\n  var template = options.template;\n  var frag = parseTemplate(template, true);\n  if (frag) {\n    var replacer = frag.firstChild;\n    var tag = replacer.tagName && replacer.tagName.toLowerCase();\n    if (options.replace) {\n      /* istanbul ignore if */\n      if (el === document.body) {\n        process.env.NODE_ENV !== 'production' && warn('You are mounting an instance with a template to ' + '<body>. This will replace <body> entirely. You ' + 'should probably use `replace: false` here.');\n      }\n      // there are many cases where the instance must\n      // become a fragment instance: basically anything that\n      // can create more than 1 root nodes.\n      if (\n      // multi-children template\n      frag.childNodes.length > 1 ||\n      // non-element template\n      replacer.nodeType !== 1 ||\n      // single nested component\n      tag === 'component' || resolveAsset(options, 'components', tag) || hasBindAttr(replacer, 'is') ||\n      // element directive\n      resolveAsset(options, 'elementDirectives', tag) ||\n      // for block\n      replacer.hasAttribute('v-for') ||\n      // if block\n      replacer.hasAttribute('v-if')) {\n        return frag;\n      } else {\n        options._replacerAttrs = extractAttrs(replacer);\n        mergeAttrs(el, replacer);\n        return replacer;\n      }\n    } else {\n      el.appendChild(frag);\n      return el;\n    }\n  } else {\n    process.env.NODE_ENV !== 'production' && warn('Invalid template option: ' + template);\n  }\n}\n\n/**\n * Helper to extract a component container's attributes\n * into a plain object array.\n *\n * @param {Element} el\n * @return {Array}\n */\n\nfunction extractAttrs(el) {\n  if (el.nodeType === 1 && el.hasAttributes()) {\n    return toArray(el.attributes);\n  }\n}\n\n/**\n * Merge the attributes of two elements, and make sure\n * the class names are merged properly.\n *\n * @param {Element} from\n * @param {Element} to\n */\n\nfunction mergeAttrs(from, to) {\n  var attrs = from.attributes;\n  var i = attrs.length;\n  var name, value;\n  while (i--) {\n    name = attrs[i].name;\n    value = attrs[i].value;\n    if (!to.hasAttribute(name) && !specialCharRE.test(name)) {\n      to.setAttribute(name, value);\n    } else if (name === 'class' && !parseText(value) && (value = value.trim())) {\n      value.split(/\\s+/).forEach(function (cls) {\n        addClass(to, cls);\n      });\n    }\n  }\n}\n\n/**\n * Scan and determine slot content distribution.\n * We do this during transclusion instead at compile time so that\n * the distribution is decoupled from the compilation order of\n * the slots.\n *\n * @param {Element|DocumentFragment} template\n * @param {Element} content\n * @param {Vue} vm\n */\n\nfunction resolveSlots(vm, content) {\n  if (!content) {\n    return;\n  }\n  var contents = vm._slotContents = Object.create(null);\n  var el, name;\n  for (var i = 0, l = content.children.length; i < l; i++) {\n    el = content.children[i];\n    /* eslint-disable no-cond-assign */\n    if (name = el.getAttribute('slot')) {\n      (contents[name] || (contents[name] = [])).push(el);\n    }\n    /* eslint-enable no-cond-assign */\n    if (process.env.NODE_ENV !== 'production' && getBindAttr(el, 'slot')) {\n      warn('The \"slot\" attribute must be static.', vm.$parent);\n    }\n  }\n  for (name in contents) {\n    contents[name] = extractFragment(contents[name], content);\n  }\n  if (content.hasChildNodes()) {\n    var nodes = content.childNodes;\n    if (nodes.length === 1 && nodes[0].nodeType === 3 && !nodes[0].data.trim()) {\n      return;\n    }\n    contents['default'] = extractFragment(content.childNodes, content);\n  }\n}\n\n/**\n * Extract qualified content nodes from a node list.\n *\n * @param {NodeList} nodes\n * @return {DocumentFragment}\n */\n\nfunction extractFragment(nodes, parent) {\n  var frag = document.createDocumentFragment();\n  nodes = toArray(nodes);\n  for (var i = 0, l = nodes.length; i < l; i++) {\n    var node = nodes[i];\n    if (isTemplate(node) && !node.hasAttribute('v-if') && !node.hasAttribute('v-for')) {\n      parent.removeChild(node);\n      node = parseTemplate(node, true);\n    }\n    frag.appendChild(node);\n  }\n  return frag;\n}\n\n\n\nvar compiler = Object.freeze({\n\tcompile: compile,\n\tcompileAndLinkProps: compileAndLinkProps,\n\tcompileRoot: compileRoot,\n\ttransclude: transclude,\n\tresolveSlots: resolveSlots\n});\n\nfunction stateMixin (Vue) {\n  /**\n   * Accessor for `$data` property, since setting $data\n   * requires observing the new object and updating\n   * proxied properties.\n   */\n\n  Object.defineProperty(Vue.prototype, '$data', {\n    get: function get() {\n      return this._data;\n    },\n    set: function set(newData) {\n      if (newData !== this._data) {\n        this._setData(newData);\n      }\n    }\n  });\n\n  /**\n   * Setup the scope of an instance, which contains:\n   * - observed data\n   * - computed properties\n   * - user methods\n   * - meta properties\n   */\n\n  Vue.prototype._initState = function () {\n    this._initProps();\n    this._initMeta();\n    this._initMethods();\n    this._initData();\n    this._initComputed();\n  };\n\n  /**\n   * Initialize props.\n   */\n\n  Vue.prototype._initProps = function () {\n    var options = this.$options;\n    var el = options.el;\n    var props = options.props;\n    if (props && !el) {\n      process.env.NODE_ENV !== 'production' && warn('Props will not be compiled if no `el` option is ' + 'provided at instantiation.', this);\n    }\n    // make sure to convert string selectors into element now\n    el = options.el = query(el);\n    this._propsUnlinkFn = el && el.nodeType === 1 && props\n    // props must be linked in proper scope if inside v-for\n    ? compileAndLinkProps(this, el, props, this._scope) : null;\n  };\n\n  /**\n   * Initialize the data.\n   */\n\n  Vue.prototype._initData = function () {\n    var dataFn = this.$options.data;\n    var data = this._data = dataFn ? dataFn() : {};\n    if (!isPlainObject(data)) {\n      data = {};\n      process.env.NODE_ENV !== 'production' && warn('data functions should return an object.', this);\n    }\n    var props = this._props;\n    // proxy data on instance\n    var keys = Object.keys(data);\n    var i, key;\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      // there are two scenarios where we can proxy a data key:\n      // 1. it's not already defined as a prop\n      // 2. it's provided via a instantiation option AND there are no\n      //    template prop present\n      if (!props || !hasOwn(props, key)) {\n        this._proxy(key);\n      } else if (process.env.NODE_ENV !== 'production') {\n        warn('Data field \"' + key + '\" is already defined ' + 'as a prop. To provide default value for a prop, use the \"default\" ' + 'prop option; if you want to pass prop values to an instantiation ' + 'call, use the \"propsData\" option.', this);\n      }\n    }\n    // observe data\n    observe(data, this);\n  };\n\n  /**\n   * Swap the instance's $data. Called in $data's setter.\n   *\n   * @param {Object} newData\n   */\n\n  Vue.prototype._setData = function (newData) {\n    newData = newData || {};\n    var oldData = this._data;\n    this._data = newData;\n    var keys, key, i;\n    // unproxy keys not present in new data\n    keys = Object.keys(oldData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!(key in newData)) {\n        this._unproxy(key);\n      }\n    }\n    // proxy keys not already proxied,\n    // and trigger change for changed values\n    keys = Object.keys(newData);\n    i = keys.length;\n    while (i--) {\n      key = keys[i];\n      if (!hasOwn(this, key)) {\n        // new property\n        this._proxy(key);\n      }\n    }\n    oldData.__ob__.removeVm(this);\n    observe(newData, this);\n    this._digest();\n  };\n\n  /**\n   * Proxy a property, so that\n   * vm.prop === vm._data.prop\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._proxy = function (key) {\n    if (!isReserved(key)) {\n      // need to store ref to self here\n      // because these getter/setters might\n      // be called by child scopes via\n      // prototype inheritance.\n      var self = this;\n      Object.defineProperty(self, key, {\n        configurable: true,\n        enumerable: true,\n        get: function proxyGetter() {\n          return self._data[key];\n        },\n        set: function proxySetter(val) {\n          self._data[key] = val;\n        }\n      });\n    }\n  };\n\n  /**\n   * Unproxy a property.\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype._unproxy = function (key) {\n    if (!isReserved(key)) {\n      delete this[key];\n    }\n  };\n\n  /**\n   * Force update on every watcher in scope.\n   */\n\n  Vue.prototype._digest = function () {\n    for (var i = 0, l = this._watchers.length; i < l; i++) {\n      this._watchers[i].update(true); // shallow updates\n    }\n  };\n\n  /**\n   * Setup computed properties. They are essentially\n   * special getter/setters\n   */\n\n  function noop() {}\n  Vue.prototype._initComputed = function () {\n    var computed = this.$options.computed;\n    if (computed) {\n      for (var key in computed) {\n        var userDef = computed[key];\n        var def = {\n          enumerable: true,\n          configurable: true\n        };\n        if (typeof userDef === 'function') {\n          def.get = makeComputedGetter(userDef, this);\n          def.set = noop;\n        } else {\n          def.get = userDef.get ? userDef.cache !== false ? makeComputedGetter(userDef.get, this) : bind(userDef.get, this) : noop;\n          def.set = userDef.set ? bind(userDef.set, this) : noop;\n        }\n        Object.defineProperty(this, key, def);\n      }\n    }\n  };\n\n  function makeComputedGetter(getter, owner) {\n    var watcher = new Watcher(owner, getter, null, {\n      lazy: true\n    });\n    return function computedGetter() {\n      if (watcher.dirty) {\n        watcher.evaluate();\n      }\n      if (Dep.target) {\n        watcher.depend();\n      }\n      return watcher.value;\n    };\n  }\n\n  /**\n   * Setup instance methods. Methods must be bound to the\n   * instance since they might be passed down as a prop to\n   * child components.\n   */\n\n  Vue.prototype._initMethods = function () {\n    var methods = this.$options.methods;\n    if (methods) {\n      for (var key in methods) {\n        this[key] = bind(methods[key], this);\n      }\n    }\n  };\n\n  /**\n   * Initialize meta information like $index, $key & $value.\n   */\n\n  Vue.prototype._initMeta = function () {\n    var metas = this.$options._meta;\n    if (metas) {\n      for (var key in metas) {\n        defineReactive(this, key, metas[key]);\n      }\n    }\n  };\n}\n\nvar eventRE = /^v-on:|^@/;\n\nfunction eventsMixin (Vue) {\n  /**\n   * Setup the instance's option events & watchers.\n   * If the value is a string, we pull it from the\n   * instance's methods by name.\n   */\n\n  Vue.prototype._initEvents = function () {\n    var options = this.$options;\n    if (options._asComponent) {\n      registerComponentEvents(this, options.el);\n    }\n    registerCallbacks(this, '$on', options.events);\n    registerCallbacks(this, '$watch', options.watch);\n  };\n\n  /**\n   * Register v-on events on a child component\n   *\n   * @param {Vue} vm\n   * @param {Element} el\n   */\n\n  function registerComponentEvents(vm, el) {\n    var attrs = el.attributes;\n    var name, value, handler;\n    for (var i = 0, l = attrs.length; i < l; i++) {\n      name = attrs[i].name;\n      if (eventRE.test(name)) {\n        name = name.replace(eventRE, '');\n        // force the expression into a statement so that\n        // it always dynamically resolves the method to call (#2670)\n        // kinda ugly hack, but does the job.\n        value = attrs[i].value;\n        if (isSimplePath(value)) {\n          value += '.apply(this, $arguments)';\n        }\n        handler = (vm._scope || vm._context).$eval(value, true);\n        handler._fromParent = true;\n        vm.$on(name.replace(eventRE), handler);\n      }\n    }\n  }\n\n  /**\n   * Register callbacks for option events and watchers.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {Object} hash\n   */\n\n  function registerCallbacks(vm, action, hash) {\n    if (!hash) return;\n    var handlers, key, i, j;\n    for (key in hash) {\n      handlers = hash[key];\n      if (isArray(handlers)) {\n        for (i = 0, j = handlers.length; i < j; i++) {\n          register(vm, action, key, handlers[i]);\n        }\n      } else {\n        register(vm, action, key, handlers);\n      }\n    }\n  }\n\n  /**\n   * Helper to register an event/watch callback.\n   *\n   * @param {Vue} vm\n   * @param {String} action\n   * @param {String} key\n   * @param {Function|String|Object} handler\n   * @param {Object} [options]\n   */\n\n  function register(vm, action, key, handler, options) {\n    var type = typeof handler;\n    if (type === 'function') {\n      vm[action](key, handler, options);\n    } else if (type === 'string') {\n      var methods = vm.$options.methods;\n      var method = methods && methods[handler];\n      if (method) {\n        vm[action](key, method, options);\n      } else {\n        process.env.NODE_ENV !== 'production' && warn('Unknown method: \"' + handler + '\" when ' + 'registering callback for ' + action + ': \"' + key + '\".', vm);\n      }\n    } else if (handler && type === 'object') {\n      register(vm, action, key, handler.handler, handler);\n    }\n  }\n\n  /**\n   * Setup recursive attached/detached calls\n   */\n\n  Vue.prototype._initDOMHooks = function () {\n    this.$on('hook:attached', onAttached);\n    this.$on('hook:detached', onDetached);\n  };\n\n  /**\n   * Callback to recursively call attached hook on children\n   */\n\n  function onAttached() {\n    if (!this._isAttached) {\n      this._isAttached = true;\n      this.$children.forEach(callAttach);\n    }\n  }\n\n  /**\n   * Iterator to call attached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callAttach(child) {\n    if (!child._isAttached && inDoc(child.$el)) {\n      child._callHook('attached');\n    }\n  }\n\n  /**\n   * Callback to recursively call detached hook on children\n   */\n\n  function onDetached() {\n    if (this._isAttached) {\n      this._isAttached = false;\n      this.$children.forEach(callDetach);\n    }\n  }\n\n  /**\n   * Iterator to call detached hook\n   *\n   * @param {Vue} child\n   */\n\n  function callDetach(child) {\n    if (child._isAttached && !inDoc(child.$el)) {\n      child._callHook('detached');\n    }\n  }\n\n  /**\n   * Trigger all handlers for a hook\n   *\n   * @param {String} hook\n   */\n\n  Vue.prototype._callHook = function (hook) {\n    this.$emit('pre-hook:' + hook);\n    var handlers = this.$options[hook];\n    if (handlers) {\n      for (var i = 0, j = handlers.length; i < j; i++) {\n        handlers[i].call(this);\n      }\n    }\n    this.$emit('hook:' + hook);\n  };\n}\n\nfunction noop$1() {}\n\n/**\n * A directive links a DOM element with a piece of data,\n * which is the result of evaluating an expression.\n * It registers a watcher with the expression and calls\n * the DOM update function when a change is triggered.\n *\n * @param {Object} descriptor\n *                 - {String} name\n *                 - {Object} def\n *                 - {String} expression\n *                 - {Array<Object>} [filters]\n *                 - {Object} [modifiers]\n *                 - {Boolean} literal\n *                 - {String} attr\n *                 - {String} arg\n *                 - {String} raw\n *                 - {String} [ref]\n *                 - {Array<Object>} [interp]\n *                 - {Boolean} [hasOneTime]\n * @param {Vue} vm\n * @param {Node} el\n * @param {Vue} [host] - transclusion host component\n * @param {Object} [scope] - v-for scope\n * @param {Fragment} [frag] - owner fragment\n * @constructor\n */\nfunction Directive(descriptor, vm, el, host, scope, frag) {\n  this.vm = vm;\n  this.el = el;\n  // copy descriptor properties\n  this.descriptor = descriptor;\n  this.name = descriptor.name;\n  this.expression = descriptor.expression;\n  this.arg = descriptor.arg;\n  this.modifiers = descriptor.modifiers;\n  this.filters = descriptor.filters;\n  this.literal = this.modifiers && this.modifiers.literal;\n  // private\n  this._locked = false;\n  this._bound = false;\n  this._listeners = null;\n  // link context\n  this._host = host;\n  this._scope = scope;\n  this._frag = frag;\n  // store directives on node in dev mode\n  if (process.env.NODE_ENV !== 'production' && this.el) {\n    this.el._vue_directives = this.el._vue_directives || [];\n    this.el._vue_directives.push(this);\n  }\n}\n\n/**\n * Initialize the directive, mixin definition properties,\n * setup the watcher, call definition bind() and update()\n * if present.\n */\n\nDirective.prototype._bind = function () {\n  var name = this.name;\n  var descriptor = this.descriptor;\n\n  // remove attribute\n  if ((name !== 'cloak' || this.vm._isCompiled) && this.el && this.el.removeAttribute) {\n    var attr = descriptor.attr || 'v-' + name;\n    this.el.removeAttribute(attr);\n  }\n\n  // copy def properties\n  var def = descriptor.def;\n  if (typeof def === 'function') {\n    this.update = def;\n  } else {\n    extend(this, def);\n  }\n\n  // setup directive params\n  this._setupParams();\n\n  // initial bind\n  if (this.bind) {\n    this.bind();\n  }\n  this._bound = true;\n\n  if (this.literal) {\n    this.update && this.update(descriptor.raw);\n  } else if ((this.expression || this.modifiers) && (this.update || this.twoWay) && !this._checkStatement()) {\n    // wrapped updater for context\n    var dir = this;\n    if (this.update) {\n      this._update = function (val, oldVal) {\n        if (!dir._locked) {\n          dir.update(val, oldVal);\n        }\n      };\n    } else {\n      this._update = noop$1;\n    }\n    var preProcess = this._preProcess ? bind(this._preProcess, this) : null;\n    var postProcess = this._postProcess ? bind(this._postProcess, this) : null;\n    var watcher = this._watcher = new Watcher(this.vm, this.expression, this._update, // callback\n    {\n      filters: this.filters,\n      twoWay: this.twoWay,\n      deep: this.deep,\n      preProcess: preProcess,\n      postProcess: postProcess,\n      scope: this._scope\n    });\n    // v-model with inital inline value need to sync back to\n    // model instead of update to DOM on init. They would\n    // set the afterBind hook to indicate that.\n    if (this.afterBind) {\n      this.afterBind();\n    } else if (this.update) {\n      this.update(watcher.value);\n    }\n  }\n};\n\n/**\n * Setup all param attributes, e.g. track-by,\n * transition-mode, etc...\n */\n\nDirective.prototype._setupParams = function () {\n  if (!this.params) {\n    return;\n  }\n  var params = this.params;\n  // swap the params array with a fresh object.\n  this.params = Object.create(null);\n  var i = params.length;\n  var key, val, mappedKey;\n  while (i--) {\n    key = hyphenate(params[i]);\n    mappedKey = camelize(key);\n    val = getBindAttr(this.el, key);\n    if (val != null) {\n      // dynamic\n      this._setupParamWatcher(mappedKey, val);\n    } else {\n      // static\n      val = getAttr(this.el, key);\n      if (val != null) {\n        this.params[mappedKey] = val === '' ? true : val;\n      }\n    }\n  }\n};\n\n/**\n * Setup a watcher for a dynamic param.\n *\n * @param {String} key\n * @param {String} expression\n */\n\nDirective.prototype._setupParamWatcher = function (key, expression) {\n  var self = this;\n  var called = false;\n  var unwatch = (this._scope || this.vm).$watch(expression, function (val, oldVal) {\n    self.params[key] = val;\n    // since we are in immediate mode,\n    // only call the param change callbacks if this is not the first update.\n    if (called) {\n      var cb = self.paramWatchers && self.paramWatchers[key];\n      if (cb) {\n        cb.call(self, val, oldVal);\n      }\n    } else {\n      called = true;\n    }\n  }, {\n    immediate: true,\n    user: false\n  });(this._paramUnwatchFns || (this._paramUnwatchFns = [])).push(unwatch);\n};\n\n/**\n * Check if the directive is a function caller\n * and if the expression is a callable one. If both true,\n * we wrap up the expression and use it as the event\n * handler.\n *\n * e.g. on-click=\"a++\"\n *\n * @return {Boolean}\n */\n\nDirective.prototype._checkStatement = function () {\n  var expression = this.expression;\n  if (expression && this.acceptStatement && !isSimplePath(expression)) {\n    var fn = parseExpression(expression).get;\n    var scope = this._scope || this.vm;\n    var handler = function handler(e) {\n      scope.$event = e;\n      fn.call(scope, scope);\n      scope.$event = null;\n    };\n    if (this.filters) {\n      handler = scope._applyFilters(handler, null, this.filters);\n    }\n    this.update(handler);\n    return true;\n  }\n};\n\n/**\n * Set the corresponding value with the setter.\n * This should only be used in two-way directives\n * e.g. v-model.\n *\n * @param {*} value\n * @public\n */\n\nDirective.prototype.set = function (value) {\n  /* istanbul ignore else */\n  if (this.twoWay) {\n    this._withLock(function () {\n      this._watcher.set(value);\n    });\n  } else if (process.env.NODE_ENV !== 'production') {\n    warn('Directive.set() can only be used inside twoWay' + 'directives.');\n  }\n};\n\n/**\n * Execute a function while preventing that function from\n * triggering updates on this directive instance.\n *\n * @param {Function} fn\n */\n\nDirective.prototype._withLock = function (fn) {\n  var self = this;\n  self._locked = true;\n  fn.call(self);\n  nextTick(function () {\n    self._locked = false;\n  });\n};\n\n/**\n * Convenience method that attaches a DOM event listener\n * to the directive element and autometically tears it down\n * during unbind.\n *\n * @param {String} event\n * @param {Function} handler\n * @param {Boolean} [useCapture]\n */\n\nDirective.prototype.on = function (event, handler, useCapture) {\n  on(this.el, event, handler, useCapture);(this._listeners || (this._listeners = [])).push([event, handler]);\n};\n\n/**\n * Teardown the watcher and call unbind.\n */\n\nDirective.prototype._teardown = function () {\n  if (this._bound) {\n    this._bound = false;\n    if (this.unbind) {\n      this.unbind();\n    }\n    if (this._watcher) {\n      this._watcher.teardown();\n    }\n    var listeners = this._listeners;\n    var i;\n    if (listeners) {\n      i = listeners.length;\n      while (i--) {\n        off(this.el, listeners[i][0], listeners[i][1]);\n      }\n    }\n    var unwatchFns = this._paramUnwatchFns;\n    if (unwatchFns) {\n      i = unwatchFns.length;\n      while (i--) {\n        unwatchFns[i]();\n      }\n    }\n    if (process.env.NODE_ENV !== 'production' && this.el) {\n      this.el._vue_directives.$remove(this);\n    }\n    this.vm = this.el = this._watcher = this._listeners = null;\n  }\n};\n\nfunction lifecycleMixin (Vue) {\n  /**\n   * Update v-ref for component.\n   *\n   * @param {Boolean} remove\n   */\n\n  Vue.prototype._updateRef = function (remove) {\n    var ref = this.$options._ref;\n    if (ref) {\n      var refs = (this._scope || this._context).$refs;\n      if (remove) {\n        if (refs[ref] === this) {\n          refs[ref] = null;\n        }\n      } else {\n        refs[ref] = this;\n      }\n    }\n  };\n\n  /**\n   * Transclude, compile and link element.\n   *\n   * If a pre-compiled linker is available, that means the\n   * passed in element will be pre-transcluded and compiled\n   * as well - all we need to do is to call the linker.\n   *\n   * Otherwise we need to call transclude/compile/link here.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._compile = function (el) {\n    var options = this.$options;\n\n    // transclude and init element\n    // transclude can potentially replace original\n    // so we need to keep reference; this step also injects\n    // the template and caches the original attributes\n    // on the container node and replacer node.\n    var original = el;\n    el = transclude(el, options);\n    this._initElement(el);\n\n    // handle v-pre on root node (#2026)\n    if (el.nodeType === 1 && getAttr(el, 'v-pre') !== null) {\n      return;\n    }\n\n    // root is always compiled per-instance, because\n    // container attrs and props can be different every time.\n    var contextOptions = this._context && this._context.$options;\n    var rootLinker = compileRoot(el, options, contextOptions);\n\n    // resolve slot distribution\n    resolveSlots(this, options._content);\n\n    // compile and link the rest\n    var contentLinkFn;\n    var ctor = this.constructor;\n    // component compilation can be cached\n    // as long as it's not using inline-template\n    if (options._linkerCachable) {\n      contentLinkFn = ctor.linker;\n      if (!contentLinkFn) {\n        contentLinkFn = ctor.linker = compile(el, options);\n      }\n    }\n\n    // link phase\n    // make sure to link root with prop scope!\n    var rootUnlinkFn = rootLinker(this, el, this._scope);\n    var contentUnlinkFn = contentLinkFn ? contentLinkFn(this, el) : compile(el, options)(this, el);\n\n    // register composite unlink function\n    // to be called during instance destruction\n    this._unlinkFn = function () {\n      rootUnlinkFn();\n      // passing destroying: true to avoid searching and\n      // splicing the directives\n      contentUnlinkFn(true);\n    };\n\n    // finally replace original\n    if (options.replace) {\n      replace(original, el);\n    }\n\n    this._isCompiled = true;\n    this._callHook('compiled');\n  };\n\n  /**\n   * Initialize instance element. Called in the public\n   * $mount() method.\n   *\n   * @param {Element} el\n   */\n\n  Vue.prototype._initElement = function (el) {\n    if (isFragment(el)) {\n      this._isFragment = true;\n      this.$el = this._fragmentStart = el.firstChild;\n      this._fragmentEnd = el.lastChild;\n      // set persisted text anchors to empty\n      if (this._fragmentStart.nodeType === 3) {\n        this._fragmentStart.data = this._fragmentEnd.data = '';\n      }\n      this._fragment = el;\n    } else {\n      this.$el = el;\n    }\n    this.$el.__vue__ = this;\n    this._callHook('beforeCompile');\n  };\n\n  /**\n   * Create and bind a directive to an element.\n   *\n   * @param {Object} descriptor - parsed directive descriptor\n   * @param {Node} node   - target node\n   * @param {Vue} [host] - transclusion host component\n   * @param {Object} [scope] - v-for scope\n   * @param {Fragment} [frag] - owner fragment\n   */\n\n  Vue.prototype._bindDir = function (descriptor, node, host, scope, frag) {\n    this._directives.push(new Directive(descriptor, this, node, host, scope, frag));\n  };\n\n  /**\n   * Teardown an instance, unobserves the data, unbind all the\n   * directives, turn off all the event listeners, etc.\n   *\n   * @param {Boolean} remove - whether to remove the DOM node.\n   * @param {Boolean} deferCleanup - if true, defer cleanup to\n   *                                 be called later\n   */\n\n  Vue.prototype._destroy = function (remove, deferCleanup) {\n    if (this._isBeingDestroyed) {\n      if (!deferCleanup) {\n        this._cleanup();\n      }\n      return;\n    }\n\n    var destroyReady;\n    var pendingRemoval;\n\n    var self = this;\n    // Cleanup should be called either synchronously or asynchronoysly as\n    // callback of this.$remove(), or if remove and deferCleanup are false.\n    // In any case it should be called after all other removing, unbinding and\n    // turning of is done\n    var cleanupIfPossible = function cleanupIfPossible() {\n      if (destroyReady && !pendingRemoval && !deferCleanup) {\n        self._cleanup();\n      }\n    };\n\n    // remove DOM element\n    if (remove && this.$el) {\n      pendingRemoval = true;\n      this.$remove(function () {\n        pendingRemoval = false;\n        cleanupIfPossible();\n      });\n    }\n\n    this._callHook('beforeDestroy');\n    this._isBeingDestroyed = true;\n    var i;\n    // remove self from parent. only necessary\n    // if parent is not being destroyed as well.\n    var parent = this.$parent;\n    if (parent && !parent._isBeingDestroyed) {\n      parent.$children.$remove(this);\n      // unregister ref (remove: true)\n      this._updateRef(true);\n    }\n    // destroy all children.\n    i = this.$children.length;\n    while (i--) {\n      this.$children[i].$destroy();\n    }\n    // teardown props\n    if (this._propsUnlinkFn) {\n      this._propsUnlinkFn();\n    }\n    // teardown all directives. this also tearsdown all\n    // directive-owned watchers.\n    if (this._unlinkFn) {\n      this._unlinkFn();\n    }\n    i = this._watchers.length;\n    while (i--) {\n      this._watchers[i].teardown();\n    }\n    // remove reference to self on $el\n    if (this.$el) {\n      this.$el.__vue__ = null;\n    }\n\n    destroyReady = true;\n    cleanupIfPossible();\n  };\n\n  /**\n   * Clean up to ensure garbage collection.\n   * This is called after the leave transition if there\n   * is any.\n   */\n\n  Vue.prototype._cleanup = function () {\n    if (this._isDestroyed) {\n      return;\n    }\n    // remove self from owner fragment\n    // do it in cleanup so that we can call $destroy with\n    // defer right when a fragment is about to be removed.\n    if (this._frag) {\n      this._frag.children.$remove(this);\n    }\n    // remove reference from data ob\n    // frozen object may not have observer.\n    if (this._data && this._data.__ob__) {\n      this._data.__ob__.removeVm(this);\n    }\n    // Clean up references to private properties and other\n    // instances. preserve reference to _data so that proxy\n    // accessors still work. The only potential side effect\n    // here is that mutating the instance after it's destroyed\n    // may affect the state of other components that are still\n    // observing the same object, but that seems to be a\n    // reasonable responsibility for the user rather than\n    // always throwing an error on them.\n    this.$el = this.$parent = this.$root = this.$children = this._watchers = this._context = this._scope = this._directives = null;\n    // call the last hook...\n    this._isDestroyed = true;\n    this._callHook('destroyed');\n    // turn off all instance listeners.\n    this.$off();\n  };\n}\n\nfunction miscMixin (Vue) {\n  /**\n   * Apply a list of filter (descriptors) to a value.\n   * Using plain for loops here because this will be called in\n   * the getter of any watcher with filters so it is very\n   * performance sensitive.\n   *\n   * @param {*} value\n   * @param {*} [oldValue]\n   * @param {Array} filters\n   * @param {Boolean} write\n   * @return {*}\n   */\n\n  Vue.prototype._applyFilters = function (value, oldValue, filters, write) {\n    var filter, fn, args, arg, offset, i, l, j, k;\n    for (i = 0, l = filters.length; i < l; i++) {\n      filter = filters[write ? l - i - 1 : i];\n      fn = resolveAsset(this.$options, 'filters', filter.name, true);\n      if (!fn) continue;\n      fn = write ? fn.write : fn.read || fn;\n      if (typeof fn !== 'function') continue;\n      args = write ? [value, oldValue] : [value];\n      offset = write ? 2 : 1;\n      if (filter.args) {\n        for (j = 0, k = filter.args.length; j < k; j++) {\n          arg = filter.args[j];\n          args[j + offset] = arg.dynamic ? this.$get(arg.value) : arg.value;\n        }\n      }\n      value = fn.apply(this, args);\n    }\n    return value;\n  };\n\n  /**\n   * Resolve a component, depending on whether the component\n   * is defined normally or using an async factory function.\n   * Resolves synchronously if already resolved, otherwise\n   * resolves asynchronously and caches the resolved\n   * constructor on the factory.\n   *\n   * @param {String|Function} value\n   * @param {Function} cb\n   */\n\n  Vue.prototype._resolveComponent = function (value, cb) {\n    var factory;\n    if (typeof value === 'function') {\n      factory = value;\n    } else {\n      factory = resolveAsset(this.$options, 'components', value, true);\n    }\n    /* istanbul ignore if */\n    if (!factory) {\n      return;\n    }\n    // async component factory\n    if (!factory.options) {\n      if (factory.resolved) {\n        // cached\n        cb(factory.resolved);\n      } else if (factory.requested) {\n        // pool callbacks\n        factory.pendingCallbacks.push(cb);\n      } else {\n        factory.requested = true;\n        var cbs = factory.pendingCallbacks = [cb];\n        factory.call(this, function resolve(res) {\n          if (isPlainObject(res)) {\n            res = Vue.extend(res);\n          }\n          // cache resolved\n          factory.resolved = res;\n          // invoke callbacks\n          for (var i = 0, l = cbs.length; i < l; i++) {\n            cbs[i](res);\n          }\n        }, function reject(reason) {\n          process.env.NODE_ENV !== 'production' && warn('Failed to resolve async component' + (typeof value === 'string' ? ': ' + value : '') + '. ' + (reason ? '\\nReason: ' + reason : ''));\n        });\n      }\n    } else {\n      // normal component\n      cb(factory);\n    }\n  };\n}\n\nvar filterRE$1 = /[^|]\\|[^|]/;\n\nfunction dataAPI (Vue) {\n  /**\n   * Get the value from an expression on this vm.\n   *\n   * @param {String} exp\n   * @param {Boolean} [asStatement]\n   * @return {*}\n   */\n\n  Vue.prototype.$get = function (exp, asStatement) {\n    var res = parseExpression(exp);\n    if (res) {\n      if (asStatement) {\n        var self = this;\n        return function statementHandler() {\n          self.$arguments = toArray(arguments);\n          var result = res.get.call(self, self);\n          self.$arguments = null;\n          return result;\n        };\n      } else {\n        try {\n          return res.get.call(this, this);\n        } catch (e) {}\n      }\n    }\n  };\n\n  /**\n   * Set the value from an expression on this vm.\n   * The expression must be a valid left-hand\n   * expression in an assignment.\n   *\n   * @param {String} exp\n   * @param {*} val\n   */\n\n  Vue.prototype.$set = function (exp, val) {\n    var res = parseExpression(exp, true);\n    if (res && res.set) {\n      res.set.call(this, this, val);\n    }\n  };\n\n  /**\n   * Delete a property on the VM\n   *\n   * @param {String} key\n   */\n\n  Vue.prototype.$delete = function (key) {\n    del(this._data, key);\n  };\n\n  /**\n   * Watch an expression, trigger callback when its\n   * value changes.\n   *\n   * @param {String|Function} expOrFn\n   * @param {Function} cb\n   * @param {Object} [options]\n   *                 - {Boolean} deep\n   *                 - {Boolean} immediate\n   * @return {Function} - unwatchFn\n   */\n\n  Vue.prototype.$watch = function (expOrFn, cb, options) {\n    var vm = this;\n    var parsed;\n    if (typeof expOrFn === 'string') {\n      parsed = parseDirective(expOrFn);\n      expOrFn = parsed.expression;\n    }\n    var watcher = new Watcher(vm, expOrFn, cb, {\n      deep: options && options.deep,\n      sync: options && options.sync,\n      filters: parsed && parsed.filters,\n      user: !options || options.user !== false\n    });\n    if (options && options.immediate) {\n      cb.call(vm, watcher.value);\n    }\n    return function unwatchFn() {\n      watcher.teardown();\n    };\n  };\n\n  /**\n   * Evaluate a text directive, including filters.\n   *\n   * @param {String} text\n   * @param {Boolean} [asStatement]\n   * @return {String}\n   */\n\n  Vue.prototype.$eval = function (text, asStatement) {\n    // check for filters.\n    if (filterRE$1.test(text)) {\n      var dir = parseDirective(text);\n      // the filter regex check might give false positive\n      // for pipes inside strings, so it's possible that\n      // we don't get any filters here\n      var val = this.$get(dir.expression, asStatement);\n      return dir.filters ? this._applyFilters(val, null, dir.filters) : val;\n    } else {\n      // no filter\n      return this.$get(text, asStatement);\n    }\n  };\n\n  /**\n   * Interpolate a piece of template text.\n   *\n   * @param {String} text\n   * @return {String}\n   */\n\n  Vue.prototype.$interpolate = function (text) {\n    var tokens = parseText(text);\n    var vm = this;\n    if (tokens) {\n      if (tokens.length === 1) {\n        return vm.$eval(tokens[0].value) + '';\n      } else {\n        return tokens.map(function (token) {\n          return token.tag ? vm.$eval(token.value) : token.value;\n        }).join('');\n      }\n    } else {\n      return text;\n    }\n  };\n\n  /**\n   * Log instance data as a plain JS object\n   * so that it is easier to inspect in console.\n   * This method assumes console is available.\n   *\n   * @param {String} [path]\n   */\n\n  Vue.prototype.$log = function (path) {\n    var data = path ? getPath(this._data, path) : this._data;\n    if (data) {\n      data = clean(data);\n    }\n    // include computed fields\n    if (!path) {\n      var key;\n      for (key in this.$options.computed) {\n        data[key] = clean(this[key]);\n      }\n      if (this._props) {\n        for (key in this._props) {\n          data[key] = clean(this[key]);\n        }\n      }\n    }\n    console.log(data);\n  };\n\n  /**\n   * \"clean\" a getter/setter converted object into a plain\n   * object copy.\n   *\n   * @param {Object} - obj\n   * @return {Object}\n   */\n\n  function clean(obj) {\n    return JSON.parse(JSON.stringify(obj));\n  }\n}\n\nfunction domAPI (Vue) {\n  /**\n   * Convenience on-instance nextTick. The callback is\n   * auto-bound to the instance, and this avoids component\n   * modules having to rely on the global Vue.\n   *\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$nextTick = function (fn) {\n    nextTick(fn, this);\n  };\n\n  /**\n   * Append instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$appendTo = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, append, appendWithTransition);\n  };\n\n  /**\n   * Prepend instance to target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$prependTo = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.hasChildNodes()) {\n      this.$before(target.firstChild, cb, withTransition);\n    } else {\n      this.$appendTo(target, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Insert instance before target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$before = function (target, cb, withTransition) {\n    return insert(this, target, cb, withTransition, beforeWithCb, beforeWithTransition);\n  };\n\n  /**\n   * Insert instance after target\n   *\n   * @param {Node} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$after = function (target, cb, withTransition) {\n    target = query(target);\n    if (target.nextSibling) {\n      this.$before(target.nextSibling, cb, withTransition);\n    } else {\n      this.$appendTo(target.parentNode, cb, withTransition);\n    }\n    return this;\n  };\n\n  /**\n   * Remove instance from DOM\n   *\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition] - defaults to true\n   */\n\n  Vue.prototype.$remove = function (cb, withTransition) {\n    if (!this.$el.parentNode) {\n      return cb && cb();\n    }\n    var inDocument = this._isAttached && inDoc(this.$el);\n    // if we are not in document, no need to check\n    // for transitions\n    if (!inDocument) withTransition = false;\n    var self = this;\n    var realCb = function realCb() {\n      if (inDocument) self._callHook('detached');\n      if (cb) cb();\n    };\n    if (this._isFragment) {\n      removeNodeRange(this._fragmentStart, this._fragmentEnd, this, this._fragment, realCb);\n    } else {\n      var op = withTransition === false ? removeWithCb : removeWithTransition;\n      op(this.$el, this, realCb);\n    }\n    return this;\n  };\n\n  /**\n   * Shared DOM insertion function.\n   *\n   * @param {Vue} vm\n   * @param {Element} target\n   * @param {Function} [cb]\n   * @param {Boolean} [withTransition]\n   * @param {Function} op1 - op for non-transition insert\n   * @param {Function} op2 - op for transition insert\n   * @return vm\n   */\n\n  function insert(vm, target, cb, withTransition, op1, op2) {\n    target = query(target);\n    var targetIsDetached = !inDoc(target);\n    var op = withTransition === false || targetIsDetached ? op1 : op2;\n    var shouldCallHook = !targetIsDetached && !vm._isAttached && !inDoc(vm.$el);\n    if (vm._isFragment) {\n      mapNodeRange(vm._fragmentStart, vm._fragmentEnd, function (node) {\n        op(node, target, vm);\n      });\n      cb && cb();\n    } else {\n      op(vm.$el, target, vm, cb);\n    }\n    if (shouldCallHook) {\n      vm._callHook('attached');\n    }\n    return vm;\n  }\n\n  /**\n   * Check for selectors\n   *\n   * @param {String|Element} el\n   */\n\n  function query(el) {\n    return typeof el === 'string' ? document.querySelector(el) : el;\n  }\n\n  /**\n   * Append operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function append(el, target, vm, cb) {\n    target.appendChild(el);\n    if (cb) cb();\n  }\n\n  /**\n   * InsertBefore operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Node} target\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function beforeWithCb(el, target, vm, cb) {\n    before(el, target);\n    if (cb) cb();\n  }\n\n  /**\n   * Remove operation that takes a callback.\n   *\n   * @param {Node} el\n   * @param {Vue} vm - unused\n   * @param {Function} [cb]\n   */\n\n  function removeWithCb(el, vm, cb) {\n    remove(el);\n    if (cb) cb();\n  }\n}\n\nfunction eventsAPI (Vue) {\n  /**\n   * Listen on the given `event` with `fn`.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$on = function (event, fn) {\n    (this._events[event] || (this._events[event] = [])).push(fn);\n    modifyListenerCount(this, event, 1);\n    return this;\n  };\n\n  /**\n   * Adds an `event` listener that will be invoked a single\n   * time then automatically removed.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$once = function (event, fn) {\n    var self = this;\n    function on() {\n      self.$off(event, on);\n      fn.apply(this, arguments);\n    }\n    on.fn = fn;\n    this.$on(event, on);\n    return this;\n  };\n\n  /**\n   * Remove the given callback for `event` or all\n   * registered callbacks.\n   *\n   * @param {String} event\n   * @param {Function} fn\n   */\n\n  Vue.prototype.$off = function (event, fn) {\n    var cbs;\n    // all\n    if (!arguments.length) {\n      if (this.$parent) {\n        for (event in this._events) {\n          cbs = this._events[event];\n          if (cbs) {\n            modifyListenerCount(this, event, -cbs.length);\n          }\n        }\n      }\n      this._events = {};\n      return this;\n    }\n    // specific event\n    cbs = this._events[event];\n    if (!cbs) {\n      return this;\n    }\n    if (arguments.length === 1) {\n      modifyListenerCount(this, event, -cbs.length);\n      this._events[event] = null;\n      return this;\n    }\n    // specific handler\n    var cb;\n    var i = cbs.length;\n    while (i--) {\n      cb = cbs[i];\n      if (cb === fn || cb.fn === fn) {\n        modifyListenerCount(this, event, -1);\n        cbs.splice(i, 1);\n        break;\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Trigger an event on self.\n   *\n   * @param {String|Object} event\n   * @return {Boolean} shouldPropagate\n   */\n\n  Vue.prototype.$emit = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    var cbs = this._events[event];\n    var shouldPropagate = isSource || !cbs;\n    if (cbs) {\n      cbs = cbs.length > 1 ? toArray(cbs) : cbs;\n      // this is a somewhat hacky solution to the question raised\n      // in #2102: for an inline component listener like <comp @test=\"doThis\">,\n      // the propagation handling is somewhat broken. Therefore we\n      // need to treat these inline callbacks differently.\n      var hasParentCbs = isSource && cbs.some(function (cb) {\n        return cb._fromParent;\n      });\n      if (hasParentCbs) {\n        shouldPropagate = false;\n      }\n      var args = toArray(arguments, 1);\n      for (var i = 0, l = cbs.length; i < l; i++) {\n        var cb = cbs[i];\n        var res = cb.apply(this, args);\n        if (res === true && (!hasParentCbs || cb._fromParent)) {\n          shouldPropagate = true;\n        }\n      }\n    }\n    return shouldPropagate;\n  };\n\n  /**\n   * Recursively broadcast an event to all children instances.\n   *\n   * @param {String|Object} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$broadcast = function (event) {\n    var isSource = typeof event === 'string';\n    event = isSource ? event : event.name;\n    // if no child has registered for this event,\n    // then there's no need to broadcast.\n    if (!this._eventsCount[event]) return;\n    var children = this.$children;\n    var args = toArray(arguments);\n    if (isSource) {\n      // use object event to indicate non-source emit\n      // on children\n      args[0] = { name: event, source: this };\n    }\n    for (var i = 0, l = children.length; i < l; i++) {\n      var child = children[i];\n      var shouldPropagate = child.$emit.apply(child, args);\n      if (shouldPropagate) {\n        child.$broadcast.apply(child, args);\n      }\n    }\n    return this;\n  };\n\n  /**\n   * Recursively propagate an event up the parent chain.\n   *\n   * @param {String} event\n   * @param {...*} additional arguments\n   */\n\n  Vue.prototype.$dispatch = function (event) {\n    var shouldPropagate = this.$emit.apply(this, arguments);\n    if (!shouldPropagate) return;\n    var parent = this.$parent;\n    var args = toArray(arguments);\n    // use object event to indicate non-source emit\n    // on parents\n    args[0] = { name: event, source: this };\n    while (parent) {\n      shouldPropagate = parent.$emit.apply(parent, args);\n      parent = shouldPropagate ? parent.$parent : null;\n    }\n    return this;\n  };\n\n  /**\n   * Modify the listener counts on all parents.\n   * This bookkeeping allows $broadcast to return early when\n   * no child has listened to a certain event.\n   *\n   * @param {Vue} vm\n   * @param {String} event\n   * @param {Number} count\n   */\n\n  var hookRE = /^hook:/;\n  function modifyListenerCount(vm, event, count) {\n    var parent = vm.$parent;\n    // hooks do not get broadcasted so no need\n    // to do bookkeeping for them\n    if (!parent || !count || hookRE.test(event)) return;\n    while (parent) {\n      parent._eventsCount[event] = (parent._eventsCount[event] || 0) + count;\n      parent = parent.$parent;\n    }\n  }\n}\n\nfunction lifecycleAPI (Vue) {\n  /**\n   * Set instance target element and kick off the compilation\n   * process. The passed in `el` can be a selector string, an\n   * existing Element, or a DocumentFragment (for block\n   * instances).\n   *\n   * @param {Element|DocumentFragment|string} el\n   * @public\n   */\n\n  Vue.prototype.$mount = function (el) {\n    if (this._isCompiled) {\n      process.env.NODE_ENV !== 'production' && warn('$mount() should be called only once.', this);\n      return;\n    }\n    el = query(el);\n    if (!el) {\n      el = document.createElement('div');\n    }\n    this._compile(el);\n    this._initDOMHooks();\n    if (inDoc(this.$el)) {\n      this._callHook('attached');\n      ready.call(this);\n    } else {\n      this.$once('hook:attached', ready);\n    }\n    return this;\n  };\n\n  /**\n   * Mark an instance as ready.\n   */\n\n  function ready() {\n    this._isAttached = true;\n    this._isReady = true;\n    this._callHook('ready');\n  }\n\n  /**\n   * Teardown the instance, simply delegate to the internal\n   * _destroy.\n   *\n   * @param {Boolean} remove\n   * @param {Boolean} deferCleanup\n   */\n\n  Vue.prototype.$destroy = function (remove, deferCleanup) {\n    this._destroy(remove, deferCleanup);\n  };\n\n  /**\n   * Partially compile a piece of DOM and return a\n   * decompile function.\n   *\n   * @param {Element|DocumentFragment} el\n   * @param {Vue} [host]\n   * @param {Object} [scope]\n   * @param {Fragment} [frag]\n   * @return {Function}\n   */\n\n  Vue.prototype.$compile = function (el, host, scope, frag) {\n    return compile(el, this.$options, true)(this, el, host, scope, frag);\n  };\n}\n\n/**\n * The exposed Vue constructor.\n *\n * API conventions:\n * - public API methods/properties are prefixed with `$`\n * - internal methods/properties are prefixed with `_`\n * - non-prefixed properties are assumed to be proxied user\n *   data.\n *\n * @constructor\n * @param {Object} [options]\n * @public\n */\n\nfunction Vue(options) {\n  this._init(options);\n}\n\n// install internals\ninitMixin(Vue);\nstateMixin(Vue);\neventsMixin(Vue);\nlifecycleMixin(Vue);\nmiscMixin(Vue);\n\n// install instance APIs\ndataAPI(Vue);\ndomAPI(Vue);\neventsAPI(Vue);\nlifecycleAPI(Vue);\n\nvar slot = {\n\n  priority: SLOT,\n  params: ['name'],\n\n  bind: function bind() {\n    // this was resolved during component transclusion\n    var name = this.params.name || 'default';\n    var content = this.vm._slotContents && this.vm._slotContents[name];\n    if (!content || !content.hasChildNodes()) {\n      this.fallback();\n    } else {\n      this.compile(content.cloneNode(true), this.vm._context, this.vm);\n    }\n  },\n\n  compile: function compile(content, context, host) {\n    if (content && context) {\n      if (this.el.hasChildNodes() && content.childNodes.length === 1 && content.childNodes[0].nodeType === 1 && content.childNodes[0].hasAttribute('v-if')) {\n        // if the inserted slot has v-if\n        // inject fallback content as the v-else\n        var elseBlock = document.createElement('template');\n        elseBlock.setAttribute('v-else', '');\n        elseBlock.innerHTML = this.el.innerHTML;\n        // the else block should be compiled in child scope\n        elseBlock._context = this.vm;\n        content.appendChild(elseBlock);\n      }\n      var scope = host ? host._scope : this._scope;\n      this.unlink = context.$compile(content, host, scope, this._frag);\n    }\n    if (content) {\n      replace(this.el, content);\n    } else {\n      remove(this.el);\n    }\n  },\n\n  fallback: function fallback() {\n    this.compile(extractContent(this.el, true), this.vm);\n  },\n\n  unbind: function unbind() {\n    if (this.unlink) {\n      this.unlink();\n    }\n  }\n};\n\nvar partial = {\n\n  priority: PARTIAL,\n\n  params: ['name'],\n\n  // watch changes to name for dynamic partials\n  paramWatchers: {\n    name: function name(value) {\n      vIf.remove.call(this);\n      if (value) {\n        this.insert(value);\n      }\n    }\n  },\n\n  bind: function bind() {\n    this.anchor = createAnchor('v-partial');\n    replace(this.el, this.anchor);\n    this.insert(this.params.name);\n  },\n\n  insert: function insert(id) {\n    var partial = resolveAsset(this.vm.$options, 'partials', id, true);\n    if (partial) {\n      this.factory = new FragmentFactory(this.vm, partial);\n      vIf.insert.call(this);\n    }\n  },\n\n  unbind: function unbind() {\n    if (this.frag) {\n      this.frag.destroy();\n    }\n  }\n};\n\nvar elementDirectives = {\n  slot: slot,\n  partial: partial\n};\n\nvar convertArray = vFor._postProcess;\n\n/**\n * Limit filter for arrays\n *\n * @param {Number} n\n * @param {Number} offset (Decimal expected)\n */\n\nfunction limitBy(arr, n, offset) {\n  offset = offset ? parseInt(offset, 10) : 0;\n  n = toNumber(n);\n  return typeof n === 'number' ? arr.slice(offset, offset + n) : arr;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String} search\n * @param {String} [delimiter]\n * @param {String} ...dataKeys\n */\n\nfunction filterBy(arr, search, delimiter) {\n  arr = convertArray(arr);\n  if (search == null) {\n    return arr;\n  }\n  if (typeof search === 'function') {\n    return arr.filter(search);\n  }\n  // cast to lowercase string\n  search = ('' + search).toLowerCase();\n  // allow optional `in` delimiter\n  // because why not\n  var n = delimiter === 'in' ? 3 : 2;\n  // extract and flatten keys\n  var keys = Array.prototype.concat.apply([], toArray(arguments, n));\n  var res = [];\n  var item, key, val, j;\n  for (var i = 0, l = arr.length; i < l; i++) {\n    item = arr[i];\n    val = item && item.$value || item;\n    j = keys.length;\n    if (j) {\n      while (j--) {\n        key = keys[j];\n        if (key === '$key' && contains(item.$key, search) || contains(getPath(val, key), search)) {\n          res.push(item);\n          break;\n        }\n      }\n    } else if (contains(item, search)) {\n      res.push(item);\n    }\n  }\n  return res;\n}\n\n/**\n * Filter filter for arrays\n *\n * @param {String|Array<String>|Function} ...sortKeys\n * @param {Number} [order]\n */\n\nfunction orderBy(arr) {\n  var comparator = null;\n  var sortKeys = undefined;\n  arr = convertArray(arr);\n\n  // determine order (last argument)\n  var args = toArray(arguments, 1);\n  var order = args[args.length - 1];\n  if (typeof order === 'number') {\n    order = order < 0 ? -1 : 1;\n    args = args.length > 1 ? args.slice(0, -1) : args;\n  } else {\n    order = 1;\n  }\n\n  // determine sortKeys & comparator\n  var firstArg = args[0];\n  if (!firstArg) {\n    return arr;\n  } else if (typeof firstArg === 'function') {\n    // custom comparator\n    comparator = function (a, b) {\n      return firstArg(a, b) * order;\n    };\n  } else {\n    // string keys. flatten first\n    sortKeys = Array.prototype.concat.apply([], args);\n    comparator = function (a, b, i) {\n      i = i || 0;\n      return i >= sortKeys.length - 1 ? baseCompare(a, b, i) : baseCompare(a, b, i) || comparator(a, b, i + 1);\n    };\n  }\n\n  function baseCompare(a, b, sortKeyIndex) {\n    var sortKey = sortKeys[sortKeyIndex];\n    if (sortKey) {\n      if (sortKey !== '$key') {\n        if (isObject(a) && '$value' in a) a = a.$value;\n        if (isObject(b) && '$value' in b) b = b.$value;\n      }\n      a = isObject(a) ? getPath(a, sortKey) : a;\n      b = isObject(b) ? getPath(b, sortKey) : b;\n    }\n    return a === b ? 0 : a > b ? order : -order;\n  }\n\n  // sort on a copy to avoid mutating original array\n  return arr.slice().sort(comparator);\n}\n\n/**\n * String contain helper\n *\n * @param {*} val\n * @param {String} search\n */\n\nfunction contains(val, search) {\n  var i;\n  if (isPlainObject(val)) {\n    var keys = Object.keys(val);\n    i = keys.length;\n    while (i--) {\n      if (contains(val[keys[i]], search)) {\n        return true;\n      }\n    }\n  } else if (isArray(val)) {\n    i = val.length;\n    while (i--) {\n      if (contains(val[i], search)) {\n        return true;\n      }\n    }\n  } else if (val != null) {\n    return val.toString().toLowerCase().indexOf(search) > -1;\n  }\n}\n\nvar digitsRE = /(\\d{3})(?=\\d)/g;\n\n// asset collections must be a plain object.\nvar filters = {\n\n  orderBy: orderBy,\n  filterBy: filterBy,\n  limitBy: limitBy,\n\n  /**\n   * Stringify value.\n   *\n   * @param {Number} indent\n   */\n\n  json: {\n    read: function read(value, indent) {\n      return typeof value === 'string' ? value : JSON.stringify(value, null, arguments.length > 1 ? indent : 2);\n    },\n    write: function write(value) {\n      try {\n        return JSON.parse(value);\n      } catch (e) {\n        return value;\n      }\n    }\n  },\n\n  /**\n   * 'abc' => 'Abc'\n   */\n\n  capitalize: function capitalize(value) {\n    if (!value && value !== 0) return '';\n    value = value.toString();\n    return value.charAt(0).toUpperCase() + value.slice(1);\n  },\n\n  /**\n   * 'abc' => 'ABC'\n   */\n\n  uppercase: function uppercase(value) {\n    return value || value === 0 ? value.toString().toUpperCase() : '';\n  },\n\n  /**\n   * 'AbC' => 'abc'\n   */\n\n  lowercase: function lowercase(value) {\n    return value || value === 0 ? value.toString().toLowerCase() : '';\n  },\n\n  /**\n   * 12345 => $12,345.00\n   *\n   * @param {String} sign\n   * @param {Number} decimals Decimal places\n   */\n\n  currency: function currency(value, _currency, decimals) {\n    value = parseFloat(value);\n    if (!isFinite(value) || !value && value !== 0) return '';\n    _currency = _currency != null ? _currency : '$';\n    decimals = decimals != null ? decimals : 2;\n    var stringified = Math.abs(value).toFixed(decimals);\n    var _int = decimals ? stringified.slice(0, -1 - decimals) : stringified;\n    var i = _int.length % 3;\n    var head = i > 0 ? _int.slice(0, i) + (_int.length > 3 ? ',' : '') : '';\n    var _float = decimals ? stringified.slice(-1 - decimals) : '';\n    var sign = value < 0 ? '-' : '';\n    return sign + _currency + head + _int.slice(i).replace(digitsRE, '$1,') + _float;\n  },\n\n  /**\n   * 'item' => 'items'\n   *\n   * @params\n   *  an array of strings corresponding to\n   *  the single, double, triple ... forms of the word to\n   *  be pluralized. When the number to be pluralized\n   *  exceeds the length of the args, it will use the last\n   *  entry in the array.\n   *\n   *  e.g. ['single', 'double', 'triple', 'multiple']\n   */\n\n  pluralize: function pluralize(value) {\n    var args = toArray(arguments, 1);\n    var length = args.length;\n    if (length > 1) {\n      var index = value % 10 - 1;\n      return index in args ? args[index] : args[length - 1];\n    } else {\n      return args[0] + (value === 1 ? '' : 's');\n    }\n  },\n\n  /**\n   * Debounce a handler function.\n   *\n   * @param {Function} handler\n   * @param {Number} delay = 300\n   * @return {Function}\n   */\n\n  debounce: function debounce(handler, delay) {\n    if (!handler) return;\n    if (!delay) {\n      delay = 300;\n    }\n    return _debounce(handler, delay);\n  }\n};\n\nfunction installGlobalAPI (Vue) {\n  /**\n   * Vue and every constructor that extends Vue has an\n   * associated options object, which can be accessed during\n   * compilation steps as `this.constructor.options`.\n   *\n   * These can be seen as the default options of every\n   * Vue instance.\n   */\n\n  Vue.options = {\n    directives: directives,\n    elementDirectives: elementDirectives,\n    filters: filters,\n    transitions: {},\n    components: {},\n    partials: {},\n    replace: true\n  };\n\n  /**\n   * Expose useful internals\n   */\n\n  Vue.util = util;\n  Vue.config = config;\n  Vue.set = set;\n  Vue['delete'] = del;\n  Vue.nextTick = nextTick;\n\n  /**\n   * The following are exposed for advanced usage / plugins\n   */\n\n  Vue.compiler = compiler;\n  Vue.FragmentFactory = FragmentFactory;\n  Vue.internalDirectives = internalDirectives;\n  Vue.parsers = {\n    path: path,\n    text: text,\n    template: template,\n    directive: directive,\n    expression: expression\n  };\n\n  /**\n   * Each instance constructor, including Vue, has a unique\n   * cid. This enables us to create wrapped \"child\n   * constructors\" for prototypal inheritance and cache them.\n   */\n\n  Vue.cid = 0;\n  var cid = 1;\n\n  /**\n   * Class inheritance\n   *\n   * @param {Object} extendOptions\n   */\n\n  Vue.extend = function (extendOptions) {\n    extendOptions = extendOptions || {};\n    var Super = this;\n    var isFirstExtend = Super.cid === 0;\n    if (isFirstExtend && extendOptions._Ctor) {\n      return extendOptions._Ctor;\n    }\n    var name = extendOptions.name || Super.options.name;\n    if (process.env.NODE_ENV !== 'production') {\n      if (!/^[a-zA-Z][\\w-]*$/.test(name)) {\n        warn('Invalid component name: \"' + name + '\". Component names ' + 'can only contain alphanumeric characaters and the hyphen.');\n        name = null;\n      }\n    }\n    var Sub = createClass(name || 'VueComponent');\n    Sub.prototype = Object.create(Super.prototype);\n    Sub.prototype.constructor = Sub;\n    Sub.cid = cid++;\n    Sub.options = mergeOptions(Super.options, extendOptions);\n    Sub['super'] = Super;\n    // allow further extension\n    Sub.extend = Super.extend;\n    // create asset registers, so extended classes\n    // can have their private assets too.\n    config._assetTypes.forEach(function (type) {\n      Sub[type] = Super[type];\n    });\n    // enable recursive self-lookup\n    if (name) {\n      Sub.options.components[name] = Sub;\n    }\n    // cache constructor\n    if (isFirstExtend) {\n      extendOptions._Ctor = Sub;\n    }\n    return Sub;\n  };\n\n  /**\n   * A function that returns a sub-class constructor with the\n   * given name. This gives us much nicer output when\n   * logging instances in the console.\n   *\n   * @param {String} name\n   * @return {Function}\n   */\n\n  function createClass(name) {\n    /* eslint-disable no-new-func */\n    return new Function('return function ' + classify(name) + ' (options) { this._init(options) }')();\n    /* eslint-enable no-new-func */\n  }\n\n  /**\n   * Plugin system\n   *\n   * @param {Object} plugin\n   */\n\n  Vue.use = function (plugin) {\n    /* istanbul ignore if */\n    if (plugin.installed) {\n      return;\n    }\n    // additional parameters\n    var args = toArray(arguments, 1);\n    args.unshift(this);\n    if (typeof plugin.install === 'function') {\n      plugin.install.apply(plugin, args);\n    } else {\n      plugin.apply(null, args);\n    }\n    plugin.installed = true;\n    return this;\n  };\n\n  /**\n   * Apply a global mixin by merging it into the default\n   * options.\n   */\n\n  Vue.mixin = function (mixin) {\n    Vue.options = mergeOptions(Vue.options, mixin);\n  };\n\n  /**\n   * Create asset registration methods with the following\n   * signature:\n   *\n   * @param {String} id\n   * @param {*} definition\n   */\n\n  config._assetTypes.forEach(function (type) {\n    Vue[type] = function (id, definition) {\n      if (!definition) {\n        return this.options[type + 's'][id];\n      } else {\n        /* istanbul ignore if */\n        if (process.env.NODE_ENV !== 'production') {\n          if (type === 'component' && (commonTagRE.test(id) || reservedTagRE.test(id))) {\n            warn('Do not use built-in or reserved HTML elements as component ' + 'id: ' + id);\n          }\n        }\n        if (type === 'component' && isPlainObject(definition)) {\n          if (!definition.name) {\n            definition.name = id;\n          }\n          definition = Vue.extend(definition);\n        }\n        this.options[type + 's'][id] = definition;\n        return definition;\n      }\n    };\n  });\n\n  // expose internal transition API\n  extend(Vue.transition, transition);\n}\n\ninstallGlobalAPI(Vue);\n\nVue.version = '1.0.26';\n\n// devtools global hook\n/* istanbul ignore next */\nsetTimeout(function () {\n  if (config.devtools) {\n    if (devtools) {\n      devtools.emit('init', Vue);\n    } else if (process.env.NODE_ENV !== 'production' && inBrowser && /Chrome\\/\\d+/.test(window.navigator.userAgent)) {\n      console.log('Download the Vue Devtools for a better development experience:\\n' + 'https://github.com/vuejs/vue-devtools');\n    }\n  }\n}, 0);\n\nmodule.exports = Vue;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/vue/dist/vue.common.js\n ** module id = 14\n ** module chunks = 0\n **/"],"sourceRoot":""}